{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/calculate/calculate-manage/calculate-manage.component.css","webpack:///./src/app/components/calculate/calculate-manage/calculate-manage.component.html","webpack:///./src/app/components/calculate/calculate-manage/calculate-manage.component.ts","webpack:///./src/app/components/calculate/user-profit/user-profit.component.css","webpack:///./src/app/components/calculate/user-profit/user-profit.component.html","webpack:///./src/app/components/calculate/user-profit/user-profit.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/deposit_withdraw/deposit-management/deposit-management.component.css","webpack:///./src/app/components/deposit_withdraw/deposit-management/deposit-management.component.html","webpack:///./src/app/components/deposit_withdraw/deposit-management/deposit-management.component.ts","webpack:///./src/app/components/deposit_withdraw/withdraw-management/withdraw-management.component.css","webpack:///./src/app/components/deposit_withdraw/withdraw-management/withdraw-management.component.html","webpack:///./src/app/components/deposit_withdraw/withdraw-management/withdraw-management.component.ts","webpack:///./src/app/components/log/game-log/game-log.component.css","webpack:///./src/app/components/log/game-log/game-log.component.html","webpack:///./src/app/components/log/game-log/game-log.component.ts","webpack:///./src/app/components/log/game-log/hand-history-dialog.html","webpack:///./src/app/components/log/game-log/no-result-bottom-sheet.html","webpack:///./src/app/components/log/jackpot-log/jackpot-log.component.css","webpack:///./src/app/components/log/jackpot-log/jackpot-log.component.html","webpack:///./src/app/components/log/jackpot-log/jackpot-log.component.ts","webpack:///./src/app/components/log/point-log/point-log.component.css","webpack:///./src/app/components/log/point-log/point-log.component.html","webpack:///./src/app/components/log/point-log/point-log.component.ts","webpack:///./src/app/components/log/transfer-log/transfer-log.component.css","webpack:///./src/app/components/log/transfer-log/transfer-log.component.html","webpack:///./src/app/components/log/transfer-log/transfer-log.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/master-page/master-page.component.css","webpack:///./src/app/components/master-page/master-page.component.html","webpack:///./src/app/components/master-page/master-page.component.ts","webpack:///./src/app/components/notice/in-gaming-table/in-gaming-table.component.css","webpack:///./src/app/components/notice/in-gaming-table/in-gaming-table.component.html","webpack:///./src/app/components/notice/in-gaming-table/in-gaming-table.component.ts","webpack:///./src/app/components/notice/lobby-notice/lobby-notice.component.css","webpack:///./src/app/components/notice/lobby-notice/lobby-notice.component.html","webpack:///./src/app/components/notice/lobby-notice/lobby-notice.component.ts","webpack:///./src/app/components/notice/one-on-one-support/one-on-one-support.component.css","webpack:///./src/app/components/notice/one-on-one-support/one-on-one-support.component.html","webpack:///./src/app/components/notice/one-on-one-support/one-on-one-support.component.ts","webpack:///./src/app/components/sales/head-office-list/head-office-list.component.css","webpack:///./src/app/components/sales/head-office-list/head-office-list.component.html","webpack:///./src/app/components/sales/head-office-list/head-office-list.component.ts","webpack:///./src/app/components/sales/head-office-list/office-info-dialog.html","webpack:///./src/app/components/sales/head-office-list/user-name-check-bottom-sheet.html","webpack:///./src/app/components/sales/member-list/member-info-dialog.html","webpack:///./src/app/components/sales/member-list/member-list.component.css","webpack:///./src/app/components/sales/member-list/member-list.component.html","webpack:///./src/app/components/sales/member-list/member-list.component.ts","webpack:///./src/app/components/user/black-list/black-list.component.css","webpack:///./src/app/components/user/black-list/black-list.component.html","webpack:///./src/app/components/user/black-list/black-list.component.ts","webpack:///./src/app/components/user/connecting-user/connecting-user.component.css","webpack:///./src/app/components/user/connecting-user/connecting-user.component.html","webpack:///./src/app/components/user/connecting-user/connecting-user.component.ts","webpack:///./src/app/components/user/ipinquire/ipinquire.component.css","webpack:///./src/app/components/user/ipinquire/ipinquire.component.html","webpack:///./src/app/components/user/ipinquire/ipinquire.component.ts","webpack:///./src/app/directives/translate.directive.ts","webpack:///./src/app/services/UserAuth/user-auth.guard.ts","webpack:///./src/app/services/UserAuth/user-auth.service.ts","webpack:///./src/app/services/calculate/lowrank/lowrank.service.ts","webpack:///./src/app/services/calculate/user-profit.service.ts","webpack:///./src/app/services/common/common.service.ts","webpack:///./src/app/services/dashboard/dashboard.service.ts","webpack:///./src/app/services/excel/excel.service.ts","webpack:///./src/app/services/log/gameLog/game-log.service.ts","webpack:///./src/app/services/moneytransactions/moneytransactions.service.ts","webpack:///./src/app/services/notice/notification/notification.service.ts","webpack:///./src/app/services/notice/support/support.service.ts","webpack:///./src/app/services/sales/office-list.service.ts","webpack:///./src/app/services/settings/settings.service.ts","webpack:///./src/app/services/user-credentials.service.ts","webpack:///./src/app/services/user/blackList/black-list.service.ts","webpack:///./src/app/services/user/connectingUser/connecting-user.service.ts","webpack:///./src/app/services/utilities/forms.service.ts","webpack:///./src/app/utilities/AnswerSupportDialog/AnswerSupportDialog.ts","webpack:///./src/app/utilities/AnswerSupportDialog/answer-support-dialog.html","webpack:///./src/app/utilities/AnswerSupportDialog/answer-support.css","webpack:///./src/app/utilities/BlackListDialog/BlackListDialog.ts","webpack:///./src/app/utilities/BlackListDialog/black-list-dialog.html","webpack:///./src/app/utilities/NoResultBottomSheet/NoResultBottomSheet2.ts","webpack:///./src/app/utilities/NoResultBottomSheet/no-result-bottom-sheet2.html","webpack:///./src/app/utilities/SettingsDialog/SettingsDialog.ts","webpack:///./src/app/utilities/SettingsDialog/settings-dialog.css","webpack:///./src/app/utilities/SettingsDialog/settings-dialog.html","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'holdem';\n  constructor(){}\n\n  ngOnInit(){\n  }\n\n}\n","//defaults\r\n  import { BrowserModule } from '@angular/platform-browser';\r\n  import { NgModule, enableProdMode } from '@angular/core';\r\n  import { AppComponent } from './app.component';\r\n\r\n//modules\r\n  import { FormsModule, ReactiveFormsModule  } from '@angular/forms';\r\n  import {RouterModule, Routes} from '@angular/router'\r\n  import { HttpModule } from '@angular/http';\r\n  import { ChartsModule } from 'ng2-charts';\r\n  // angular material\r\n  import {  MatSliderModule ,\r\n            MatToolbarModule,\r\n            MatIconModule,\r\n            MatButtonModule,\r\n            MatExpansionModule,\r\n            MatListModule,\r\n            MatGridListModule,\r\n            MatCardModule,\r\n            MatProgressBarModule,\r\n            MatTableModule,\r\n            MatTooltipModule,\r\n            MatDialogModule,\r\n            MatSlideToggleModule,\r\n            MatPaginatorModule,\r\n            MatProgressSpinnerModule,\r\n            MatFormFieldModule,\r\n            MatInputModule,\r\n            MatSelectModule,\r\n            MatBottomSheetModule,\r\n            MatDatepickerModule,\r\n            MatNativeDateModule,\r\n            MatChipsModule,\r\n            MatSortModule,\r\n            MatBadgeModule } from '@angular/material';\r\n\r\n  import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n  import { MatSidenavModule } from '@angular/material/sidenav';\r\n//components\r\n  //sales\r\n  import { HeadOfficeListComponent,OfficeInfoDialog,UserNameCheckSalesBottomSheet } from './components/sales/head-office-list/head-office-list.component';\r\n  import { MemberListComponent, MemberInfoDialog } from './components/sales/member-list/member-list.component';\r\n  //calculate\r\n  import { CalculateManageComponent } from './components/calculate/calculate-manage/calculate-manage.component';\r\n  import { UserProfitComponent } from './components/calculate/user-profit/user-profit.component';\r\n  //user\r\n  import { ConnectingUserComponent } from './components/user/connecting-user/connecting-user.component';\r\n  import { BlackListComponent } from './components/user/black-list/black-list.component';\r\n  import { IPinquireComponent } from './components/user/ipinquire/ipinquire.component';\r\n  //deposit_withdraw\r\n  import { DepositManagementComponent } from './components/deposit_withdraw/deposit-management/deposit-management.component';\r\n  import { WithdrawManagementComponent } from './components/deposit_withdraw/withdraw-management/withdraw-management.component';\r\n  //notice\r\n  import { LobbyNoticeComponent } from './components/notice/lobby-notice/lobby-notice.component';\r\n  import { InGamingTableComponent } from './components/notice/in-gaming-table/in-gaming-table.component';\r\n  import { OneOnOneSupportComponent } from './components/notice/one-on-one-support/one-on-one-support.component';\r\n  //log\r\n  import { GameLogComponent,NoResultBottomSheet,HandHistoryDialog } from './components/log/game-log/game-log.component';\r\n  import { JackpotLogComponent } from './components/log/jackpot-log/jackpot-log.component';\r\n  import { TransferLogComponent } from './components/log/transfer-log/transfer-log.component';\r\n  import { PointLogComponent } from './components/log/point-log/point-log.component'\r\n  //dashboard\r\n  import { DashboardComponent } from './components/dashboard/dashboard.component';\r\n  //login\r\n  import { LoginComponent } from './components/login/login.component';\r\n  //master page\r\n  import { MasterPageComponent } from './components/master-page/master-page.component';\r\n//custom directives  \r\n  import { TranslateDirective } from './directives/translate.directive';\r\n\r\n//services\r\n  import {CommonService} from '../app/services/common/common.service';\r\n  import {UserAuthGuard} from '../app/services/UserAuth/user-auth.guard';\r\n\r\n//utility all over components and it is independent...\r\n  import { NoResultBottomSheet2 } from './utilities/NoResultBottomSheet/NoResultBottomSheet2'\r\n  import { BlackListDialog } from './utilities/BlackListDialog/BlackListDialog'\r\n  import { AnswerSupportDialog } from './utilities/AnswerSupportDialog/AnswerSupportDialog'\r\n  import { SettingsDialog } from './utilities/SettingsDialog/SettingsDialog'\r\n  \r\n  const routes: Routes = [\r\n    \r\n      { path: 'admin', \r\n        component: MasterPageComponent,\r\n        canActivate : [UserAuthGuard],\r\n        children: [\r\n          //sales\r\n            {path: 'headOfficeList', component: HeadOfficeListComponent},\r\n            {path: 'memberList', component: MemberListComponent},\r\n          //calculate\r\n            {path: 'calculateManage', component: CalculateManageComponent},\r\n            {path: 'userProfit', component: UserProfitComponent},\r\n          //user\r\n            {path: 'connectingUser', component: ConnectingUserComponent},\r\n            {path: 'blackList', component: BlackListComponent},\r\n            {path: 'IPinquire', component: IPinquireComponent},\r\n          //deposit_withdraw\r\n            {path: 'depositManagement', component: DepositManagementComponent},\r\n            {path: 'withdrawManagement', component: WithdrawManagementComponent},\r\n          //notice\r\n            {path: 'lobbyNotice', component: LobbyNoticeComponent},\r\n            {path: 'inGamingTable', component: InGamingTableComponent},\r\n            {path: '1on1support', component: OneOnOneSupportComponent},\r\n          //log\r\n            {path: 'gameLog', component: GameLogComponent},\r\n            {path: 'jackpotLog', component: JackpotLogComponent},\r\n            {path: 'transferLog', component: TransferLogComponent},\r\n            {path: 'pointLog', component: PointLogComponent},\r\n          //pending\r\n            {path: \"dashboard\",  component: DashboardComponent},\r\n            {path: \"**\",  component: DashboardComponent }\r\n        ]\r\n      },\r\n\r\n      {path: 'login', component: LoginComponent},\r\n      {path: '', redirectTo: 'admin', pathMatch: 'full'}\r\n  ]\r\n\r\nenableProdMode();  \r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    // sales\r\n      //office list  \r\n      HeadOfficeListComponent,\r\n      OfficeInfoDialog,\r\n      UserNameCheckSalesBottomSheet,\r\n      // members list\r\n      MemberListComponent,\r\n      MemberInfoDialog,\r\n\r\n    CalculateManageComponent,\r\n    UserProfitComponent,\r\n    ConnectingUserComponent,\r\n    BlackListComponent,\r\n    IPinquireComponent,\r\n    DepositManagementComponent,\r\n    WithdrawManagementComponent,\r\n    LobbyNoticeComponent,\r\n    InGamingTableComponent,\r\n    OneOnOneSupportComponent,\r\n    GameLogComponent,\r\n    JackpotLogComponent,\r\n    TransferLogComponent,\r\n    DashboardComponent,\r\n    PointLogComponent,\r\n    LoginComponent,\r\n    MasterPageComponent,\r\n    TranslateDirective,\r\n    NoResultBottomSheet,\r\n    HandHistoryDialog,\r\n    // independent classes\r\n    NoResultBottomSheet2,\r\n    BlackListDialog,\r\n    AnswerSupportDialog,\r\n    SettingsDialog\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ChartsModule,\r\n    BrowserModule,\r\n    HttpModule,\r\n    RouterModule.forRoot(routes),\r\n    // angular material\r\n    MatSidenavModule,\r\n    BrowserAnimationsModule,\r\n    MatSliderModule,\r\n    MatProgressSpinnerModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatExpansionModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatProgressBarModule,\r\n    MatTableModule,\r\n    MatTooltipModule,\r\n    MatDialogModule,\r\n    MatSlideToggleModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatBottomSheetModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSortModule,\r\n    MatChipsModule,\r\n    MatBadgeModule\r\n  ],\r\n  // exports:[RouterModule],\r\n  entryComponents: [\r\n    //independent classes\r\n    BlackListDialog,\r\n    NoResultBottomSheet2,\r\n    AnswerSupportDialog,\r\n    SettingsDialog,\r\n\r\n    NoResultBottomSheet,\r\n    HandHistoryDialog,\r\n    \r\n    // sales\r\n      //office\r\n      OfficeInfoDialog,\r\n      UserNameCheckSalesBottomSheet,\r\n      //members list\r\n      MemberInfoDialog\r\n  ],\r\n  providers: [\r\n    CommonService,\r\n    UserAuthGuard,\r\n    MatDatepickerModule\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<mat-card class=\\\"card\\\" >\\n  <div *ngIf=\\\"backLoading\\\" class=\\\"loading-shade\\\">\\n    <mat-spinner color=\\\"accent\\\"></mat-spinner>\\n  </div>\\n\\n  <mat-card-header>\\n\\n    <mat-card-title>Calculate Manage      \\n      <button mat-flat-button\\n              *ngIf=\\\"maxUpstep != pageIndex\\\" \\n              color=\\\"accent\\\"\\n              (click)=\\\"uprank();\\\"><mat-icon>arrow_back</mat-icon></button>\\n    </mat-card-title>\\n    <button mat-icon-button \\n            color=\\\"accent\\\" \\n            style=\\\"right:0; top:0; margin-top:10px; position: absolute\\\" \\n            (click)=\\\"reload()\\\"\\n            matTooltip=\\\"sync\\\"><mat-icon>sync</mat-icon></button>\\n  </mat-card-header>\\n\\n  <mat-divider></mat-divider>\\n\\n  <form style=\\\"display: flex; justify-content: flex-end; margin-top: 10px;\\\">\\n    <div >\\n      <button *ngIf=\\\"showBackButton\\\"\\n              mat-flat-button \\n              color=\\\"primary\\\" \\n              (click)=\\\"reload(); showBackButton = false;\\\"><mat-icon>arrow_back</mat-icon></button>\\n              \\n      <mat-form-field style=\\\"width:120px;\\\">\\n        <input matInput \\n              [matDatepicker]=\\\"fromDate\\\" \\n              placeholder=\\\"From date\\\" \\n              (dateChange)=\\\"dateValueChanged($event)\\\"\\n              id=\\\"from\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"fromDate\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #fromDate></mat-datepicker>\\n      </mat-form-field>\\n\\n      <mat-form-field style=\\\"width:90px; margin: 5px 5px 0;\\\">\\n        <mat-select [(value)]=\\\"startTime\\\">\\n          <mat-option *ngFor=\\\"let t of timeopts\\\" value=\\\"{{t.value}}\\\">{{t.name}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      \\n      <mat-form-field style=\\\"width:120px;\\\">\\n        <input matInput \\n              [matDatepicker]=\\\"toDate\\\" \\n              placeholder=\\\"To date\\\"\\n              (dateChange)=\\\"dateValueChanged($event)\\\"\\n              id=\\\"to\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"toDate\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #toDate></mat-datepicker>\\n      </mat-form-field>\\n\\n      <mat-form-field style=\\\"width:90px; margin: 5px 5px 0;\\\">\\n        <mat-select [(value)]=\\\"endTime\\\">\\n          <mat-option *ngFor=\\\"let t of timeopts\\\" value=\\\"{{t.value}}\\\">{{t.name}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <button mat-button (click)=\\\"searchList()\\\"><mat-icon>search</mat-icon></button>\\n    </div>\\n  </form>\\n\\n  <mat-card-content style=\\\"overflow:auto;\\\" class=\\\"mat-elevation-z6\\\">\\n    <div style=\\\"width:1500px;\\\">\\n      <!-- member list table -->\\n      <table  mat-table matSort \\n              [dataSource]=\\\"CalculateManageList\\\" \\n              style=\\\"width:100%\\\" \\n              (matSortChange)=\\\"sortData($event)\\\">\\n\\n        <!-- no. -->\\n        <ng-container matColumnDef=\\\"row_number\\\">\\n          <th mat-header-cell *matHeaderCellDef >No.</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.row_number}} </td>\\n        </ng-container>\\n\\n        <!-- ID -->\\n        <ng-container matColumnDef=\\\"UserName\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"UserName\\\">ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.UserName}} </td>\\n        </ng-container>\\n\\n        <!-- commission -->\\n        <ng-container matColumnDef=\\\"Commission\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Commission\\\" >Commission</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.Commission | number}}%</td>\\n        </ng-container>\\n        \\n        <!-- deposit -->\\n        <ng-container matColumnDef=\\\"deposit\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"deposit\\\">Deposit</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.deposit | number}} </td>\\n        </ng-container>\\n        \\n        <!-- deposit transfer -->\\n        <ng-container matColumnDef=\\\"depositTransfer\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"depositTransfer\\\">Deposit (Transfer)</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.depositTransfer | number}} </td>\\n        </ng-container>\\n        \\n        <!-- withdraw -->\\n        <ng-container matColumnDef=\\\"withdraw\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"withdraw\\\">Withdraw</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.withdraw | number}} </td>\\n        </ng-container>\\n        \\n        <!-- withdraw transfer -->\\n        <ng-container matColumnDef=\\\"withdrawTransfer\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"withdrawTransfer\\\">Withdraw (Transfer)</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.withdrawTransfer | number}} </td>\\n        </ng-container>\\n\\n        <!-- betting amount -->\\n        <ng-container matColumnDef=\\\"bettingAmount\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"bettingAmount\\\">Betting Amount</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.bettingAmount | number}} </td>\\n        </ng-container>\\n        \\n        <!-- rake -->\\n        <ng-container matColumnDef=\\\"rake\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"rake\\\">Rake</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.rake | number}} </td>\\n        </ng-container>\\n\\n        <!-- user holding money -->\\n        <ng-container matColumnDef=\\\"userHoldingMoney\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"userHoldingMoney\\\">User holding money</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.userHoldingMoney | number}} </td>\\n        </ng-container>\\n\\n        <!-- offices profit -->\\n        <ng-container matColumnDef=\\\"profit\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"parentProfit\\\">\\n                <span *ngIf=\\\"pageIndex == 2\\\">Operating Head office</span>\\n                <span *ngIf=\\\"pageIndex == 1\\\">HO</span>\\n                <span *ngIf=\\\"pageIndex == 0\\\">store</span>&nbsp;Profit</th>\\n          <td mat-cell \\n              *matCellDef=\\\"let element\\\">\\n                <span *ngIf=\\\"pageIndex == 2 || pageIndex == 1\\\">{{element.parentProfit | number}}&nbsp;<span *ngIf=\\\"pageIndex == 2\\\">(<strong style=\\\"color: blue\\\">{{element.ohoPercent}}%</strong>)</span></span>\\n                <span *ngIf=\\\"pageIndex == 0\\\">{{element.storesProfit | number}}</span> </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"hoMoney\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef \\n              mat-sort-header=\\\"hoMoney\\\"\\n              [ngClass]=\\\"{'hide': pageIndex < 2}\\\">Head Office Money</th>\\n          <td mat-cell \\n              *matCellDef=\\\"let element\\\"\\n              [ngClass]=\\\"{'hide': pageIndex < 2}\\\">{{element.hoMoney | number}} </td>\\n        </ng-container>\\n        \\n        <ng-container matColumnDef=\\\"distributorsMoney\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef \\n              mat-sort-header=\\\"distributorsMoney\\\"\\n              [ngClass]=\\\"{'hide': pageIndex < 2}\\\">Money of low rank</th>\\n          <td mat-cell \\n              *matCellDef=\\\"let element\\\"\\n              [ngClass]=\\\"{'hide': pageIndex < 2}\\\">{{element.distributorsMoney | number}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"LowrankProfit\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef \\n              [ngClass]=\\\"{'hide': pageIndex != 1}\\\">Lowrank Profit</th>\\n          <td mat-cell \\n              *matCellDef=\\\"let element\\\"\\n              [ngClass]=\\\"{'hide': pageIndex != 1}\\\">{{element.storesProfit | number}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Lowrank\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              [ngClass]=\\\"{'hide': pageIndex <= 0}\\\">Lowrank</th>\\n          <td mat-cell \\n              *matCellDef=\\\"let element\\\"\\n              [ngClass]=\\\"{'hide': pageIndex <= 0}\\\"> \\n            <button mat-icon-button \\n                    color=\\\"primary\\\"\\n                    matTooltip=\\\"lowrank\\\"\\n                    matTooltipPosition=\\\"right\\\"\\n                    (click)=\\\"lowrank(element.UserAccountID)\\\"><mat-icon>subdirectory_arrow_right</mat-icon></button> \\n          </td>\\n        </ng-container>\\n        \\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      </table>\\n    </div>\\n\\n    <div *ngIf=\\\"pageEvent\\\">\\n      <mat-paginator  [length]=\\\"pageEvent.length\\\"\\n                      [pageSize]=\\\"pageEvent.pageSize\\\"\\n                      [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n                      showFirstLastButtons=\\\"true\\\"\\n                      (page)=\\\"pageEvent = $event; reload()\\\"> </mat-paginator>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\"","import { Component, OnInit, LOCALE_ID, Inject } from '@angular/core';\nimport {CommonService} from '../../../services/common/common.service';\nimport { environment } from '../../../../environments/environment.prod';\nimport { LowrankService } from '../../../services/calculate/lowrank/lowrank.service'\nimport { UserCredentialsService } from '../../../services/user-credentials.service'\nimport { UserModel } from '../../../interfaces/UserModel'\nimport { CalculateManageModel } from '../../../interfaces/CalculateManageModel'\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\nimport { FormGroup} from '@angular/forms';\nimport {PageEvent, Sort} from '@angular/material';\nimport { formatDate } from '@angular/common';\nimport { FormsService } from '../../../services/utilities/forms.service'\n\n@Component({\n  selector: 'app-calculate-manage',\n  templateUrl: './calculate-manage.component.html',\n  styleUrls: ['./calculate-manage.component.css']\n})\nexport class CalculateManageComponent implements OnInit {\n\n  constructor(private commonSrvc:CommonService, \n              private lowrankSrvc:LowrankService, \n              private userCredentialsSrvc:UserCredentialsService,\n              private formsSrvc:FormsService,\n              @Inject(LOCALE_ID) private locale: string) { \n  }\n\n  // lowrank uprank variables\n    // we use this if the user goes back\n    maxUpstep:number\n    commissionDefaultValue:number\n    //commission's max value after user select its low rank and default is user's commission\n    protected currentParentID:string \n    protected currentCommission:number\n\n    //key to html elements\n    protected key:boolean[] = [\n      false,//distributor\n      false,//headoffice\n      false//operating\n    ]\n\n    protected parentIDHistory:string[] =[]\n  //service variables\n    pageIndex:number = 1\n  //table variables\n    userCredentials:UserModel\n    CalculateManageList:CalculateManageModel[] = []\n\n    currentLowRank:number = 1\n\n    displayedColumns:string[] =[  \n      'row_number',\n      'UserName',\n      'Commission',\n      'deposit',\n      'depositTransfer',\n      'withdraw',\n      'withdrawTransfer',\n      'bettingAmount',\n      'rake',\n      'userHoldingMoney',\n      'profit',\n      'hoMoney', // operating head office view only\n      'distributorsMoney', // operating head office view only\n      'LowrankProfit', //on distributor index only pageIndex = 1\n      'Lowrank'\n    ]\n\n    tableSort:Sort = {active : 'userHoldingMoney', direction : 'desc'}\n\n  //angular material search variables\n    searchForm:FormGroup;\n  //search variables\n    showBackButton:boolean = false\n    backLoading:boolean = true\n\n    timeopts:any[]\n    // date\n      startDate:string;\n      endDate:string;\n\n    // time\n      startTime:string;\n      endTime:string;\n\n  // MatPaginator\n    // input\n    pageSizeOptions: number[] = environment.pageSizeOptions;\n\n    // Output\n    pageEvent: PageEvent = { pageIndex : 0, pageSize : environment.pageSizeOptions[0], previousPageIndex : 0, length: 0};\n\n\n//lifecycle hooks\n  ngOnInit() {\n\n    if(!this.userCredentials){\n      console.log('requested... ')\n      this.getUserCredentials()\n    }\n    this.timeopts = this.formsSrvc.timeOptions\n  }\n  ngOnDestroy() {\n    console.log('you leave calculate manage')\n  }\n\n//lifecycle hooks end\n\n// get user credentials for validation\n  getUserCredentials(){\n    this.userCredentialsSrvc.getPrivileges(localStorage.getItem(environment.tokenStorageKey))\n      .subscribe(\n        (res:UserModel) => {\n          console.log(res)\n            this.userCredentials = res\n            this.currentCommission = res.Commission\n            this.currentParentID = res.UserAccountID\n            this.parentIDHistory.push(res.UserAccountID)\n            let level;\n            if(res.AccountType == \"OperatingHeadOffice\"){\n              level = 3;\n              this.maxUpstep = 2\n              this.pageIndex = 2\n            }else if(res.AccountType == \"HeadOffice\"){\n              level = 2;\n              this.maxUpstep = 1\n              this.pageIndex = 1\n            }else if(res.AccountType == \"Distributor\"){\n              level = 1;\n              this.maxUpstep = 0\n              this.pageIndex = 0\n            }else{\n              // should be logged out because shop or edited account type is not allowed here\n            }\n\n            for(let i = 0; i < level; i++){\n              this.key[i] = true\n              console.log('i : ' + i)\n            }\n\n            this.getListAndPageCount()\n            console.log(this.key)\n        }\n      )\n  }\n// end get user credentials for validation\n\ngetListAndPageCount(){\n  Promise.all([this.getLowrankList(),this.getPageCount()]).then(function() {\n    console.log('get list and page count successful');\n    }, function(){ //if promise or promise2 fail\n    console.log('something went wrong')\n  })\n}\n\n// pageindex:number, offset:number, limit:number, order:string, direction:string, office:string \ngetLowrankList(){\n  let promise = new Promise((resolve,reject) => {\n\n    this.lowrankSrvc.getLowrank2(this.pageIndex, \n                                this.pageEvent.pageIndex * this.pageEvent.pageSize, //ofset\n                                this.pageEvent.pageSize, // limit\n                                this.tableSort.active, // order by\n                                this.tableSort.direction, // asc / desc\n                                this.currentParentID)\n    .subscribe(\n      (result:CalculateManageModel[]) => {\n\n        if(result.length > 0){\n          //set artificial index\n          let row_number_new = this.pageEvent.pageIndex * this.pageEvent.pageSize\n          for(let i = 0; i <= result.length - 1; i++){\n            row_number_new += 1;\n            result[i].row_number = row_number_new\n          }\n          //set artificial index end\n          this.CalculateManageList = result\n          this.backLoading = false\n        }else{\n          //result = new LowRank\n        }\n        resolve()\n      },\n      error => {\n        console.log(error)\n        reject()\n      }\n    )\n\n  })\n\n  return promise;\n}\n\ngetPageCount(){\n  let promise = new Promise ((resolve,reject) => {\n    this.lowrankSrvc.getPageCount(this.pageIndex, this.currentParentID)\n    .subscribe(\n      (result) => {\n        this.pageEvent.length = result[0]['ID']\n        resolve()\n      },\n        error => {\n          console.log('key ' + localStorage.getItem(environment.tokenStorageKey));\n          console.log(error);\n          reject()\n        }\n    )\n  })\n  return promise;\n}\n\n\nsearchList(){\n\n    this.lowrankSrvc.search(this.pageIndex,\n                            this.currentParentID,\n                            this.startDate + this.startTime,\n                            this.endDate + this.endTime)\n    .subscribe(\n      (result:CalculateManageModel[]) => {\n        console.log(result)\n        //if there's result\n        if(result.length > 0){\n          this.CalculateManageList = result\n\n          console.log('results found')\n        }else{\n          console.log('no result found')\n        }\n      },\n      error => {\n        if(error['statusText'] == 'Not Found'){\n          //empty list\n          this.CalculateManageList = []\n        }\n      }\n    )\n    this.showBackButton = true\n}\n\nback(){\n  this.backLoading = true\n}\n\n  lowrank(office){\n    // in case user force altered the pageIndex, the set it to 0 \n    console.log('pageindex : '+this.pageIndex)\n    if(this.pageIndex != 0){ \n      \n      this.parentIDHistory.push(this.currentParentID)\n      this.pageIndex -= 1;\n      this.currentParentID = office;\n      this.CalculateManageList = [] \n      this.backLoading = true\n      \n    }else{\n      this.pageIndex = 0\n    }\n\n    this.reload()\n  }\n\n  uprank(){\n    // this will keep pageindex to not step up to its limit.\n    if(this.maxUpstep != this.pageIndex){\n      this.pageIndex += 1;\n      this.currentParentID = this.parentIDHistory.pop();\n      this.CalculateManageList = [] \n      this.reload()\n    }else{\n      console.log('invalid uprank')\n    }\n\n  }\n  \n  //we call this function when the user interact with paginator or clicked the refresh button\n  reload(){\n    this.backLoading = true; \n    this.getListAndPageCount()\n  }\n  \n  sortData(sort: Sort){\n    this.tableSort = { active : sort.active, direction : sort.direction}\n    if(this.tableSort.direction){\n      this.reload()\n    }\n  }\n\n  dateValueChanged(event: MatDatepickerInputEvent<Date>){\n    if(event.targetElement.id == 'from'){\n      this.startDate = formatDate(event.value,'yyyy-MM-dd', this.locale).toString()\n    }else if(event.targetElement.id == 'to'){\n      this.endDate = formatDate(event.value, 'yyyy-MM-dd',this.locale).toString()\n    }else{\n      console.log('invalid target ID')\n    }\n\n  }\n\n  test(){\n    console.log('date start : ' +  this.startDate)\n    console.log('time start : ' +  this.startTime)\n    console.log('date end : ' + this.endDate)\n    console.log('time end : ' + this.endTime)\n  }\n  \n}\n","module.exports = \"\"","module.exports = \"<mat-card class=\\\"card\\\" >\\n    <div *ngIf=\\\"backLoading\\\" class=\\\"loading-shade\\\">\\n      <mat-spinner color=\\\"accent\\\"></mat-spinner>\\n    </div>\\n  \\n    <mat-card-header>\\n      <mat-card-title>User Profit</mat-card-title>\\n      <button mat-icon-button \\n              color=\\\"accent\\\" \\n              style=\\\"right:0; top:0; margin-top:10px; position: absolute;\\\" \\n              (click)=\\\"reload()\\\"\\n              matTooltip=\\\"sync\\\"><mat-icon>sync</mat-icon></button>\\n  \\n    </mat-card-header>\\n    \\n    <form style=\\\"display: flex; justify-content: flex-end; margin-top: 10px;\\\">\\n      <div style=\\\"max-width: 1500px;\\\">\\n        <button *ngIf=\\\"showBackButton\\\"\\n                mat-flat-button \\n                color=\\\"primary\\\"\\n                style=\\\"margin-right:5px;\\\" \\n                (click)=\\\"reload(); showBackButton = false;\\\"><mat-icon>arrow_back</mat-icon></button>\\n                \\n        <mat-form-field style=\\\"width:120px;\\\">\\n          <input matInput \\n                [matDatepicker]=\\\"fromDate\\\" \\n                placeholder=\\\"From date\\\" \\n                (dateChange)=\\\"dateValueChanged($event)\\\"\\n                id=\\\"from\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"fromDate\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #fromDate></mat-datepicker>\\n        </mat-form-field>\\n  \\n        <mat-form-field style=\\\"width:90px; margin: 5px 5px 0;\\\">\\n          <mat-select [(value)]=\\\"startTime\\\">\\n            <mat-option *ngFor=\\\"let t of timeopts\\\" value=\\\"{{t.value}}\\\">{{t.name}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        \\n        <mat-form-field style=\\\"width:120px;\\\">\\n          <input matInput \\n                [matDatepicker]=\\\"toDate\\\" \\n                placeholder=\\\"To date\\\"\\n                (dateChange)=\\\"dateValueChanged($event)\\\"\\n                id=\\\"to\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"toDate\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #toDate></mat-datepicker>\\n        </mat-form-field>\\n  \\n        <mat-form-field style=\\\"width:90px; margin: 5px 5px 0;\\\">\\n          <mat-select [(value)]=\\\"endTime\\\">\\n            <mat-option *ngFor=\\\"let t of timeopts\\\" value=\\\"{{t.value}}\\\">{{t.name}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width:90px; margin: 5px 5px 0;\\\">\\n          <input matInput\\n                [(ngModel)]=\\\"searchValue\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\" \\n                placeholder=\\\"Screen Name\\\" \\n                id=\\\"from\\\">\\n        </mat-form-field>\\n  \\n        <button mat-button (click)=\\\"searchList()\\\"><mat-icon>search</mat-icon></button>\\n      </div>\\n    </form>\\n\\n    <mat-card-content style=\\\"overflow:auto;\\\" class=\\\"mat-elevation-z6\\\">\\n      <div style=\\\"width:1500px;\\\">\\n        <!-- member list table -->\\n        <table  mat-table matSort \\n                [dataSource]=\\\"UserProfitList\\\"\\n                style=\\\"width:100%\\\" \\n                (matSortChange)=\\\"sortData($event)\\\">\\n  \\n          <!-- no. -->\\n          <ng-container matColumnDef=\\\"row_number\\\">\\n            <th mat-header-cell *matHeaderCellDef>No.</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.row_number | number}} </td>\\n          </ng-container>\\n          \\n          <!-- PlayerID -->\\n          <ng-container matColumnDef=\\\"PlayerID\\\">\\n            <th mat-header-cell \\n                *matHeaderCellDef\\n                mat-sort-header=\\\"PlayerID\\\">User ID</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.PlayerID}} </td>\\n          </ng-container>\\n\\n          <!-- ShopID -->\\n          <ng-container matColumnDef=\\\"ShopID\\\">\\n            <th mat-header-cell \\n                *matHeaderCellDef\\n                mat-sort-header=\\\"ShopID\\\">Store ID</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.ShopID}} </td>\\n          </ng-container>\\n\\n          <!-- DistributorID -->\\n          <ng-container matColumnDef=\\\"DistributorID\\\">\\n            <th mat-header-cell \\n                *matHeaderCellDef\\n                mat-sort-header=\\\"DistributorID\\\">Distributor ID</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.DistributorID}} </td>\\n          </ng-container>\\n\\n          <!-- HeadOfficeID -->\\n          <ng-container matColumnDef=\\\"HeadOfficeID\\\">\\n            <th mat-header-cell \\n                *matHeaderCellDef\\n                mat-sort-header=\\\"HeadOfficeID\\\">HO ID</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.HeadOfficeID}} </td>\\n          </ng-container>\\n\\n          <!-- ScreenName -->\\n          <ng-container matColumnDef=\\\"ScreenName\\\">\\n            <th mat-header-cell \\n                *matHeaderCellDef\\n                mat-sort-header=\\\"ScreenName\\\">Screen Name</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.ScreenName}} </td>\\n          </ng-container>\\n\\n          <!-- withdraw -->\\n          <ng-container matColumnDef=\\\"withdraw\\\">\\n            <th mat-header-cell \\n                *matHeaderCellDef\\n                mat-sort-header=\\\"withdraw\\\">Withdraw</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.withdraw | number}} </td>\\n          </ng-container>\\n\\n          <!-- withdrawTransfer -->\\n          <ng-container matColumnDef=\\\"withdrawTransfer\\\">\\n            <th mat-header-cell \\n                *matHeaderCellDef\\n                mat-sort-header=\\\"withdrawTransfer\\\">Withdraw (Transfer)</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.withdrawTransfer | number}} </td>\\n          </ng-container>\\n\\n          <!-- deposit -->\\n          <ng-container matColumnDef=\\\"deposit\\\">\\n            <th mat-header-cell \\n                *matHeaderCellDef\\n                mat-sort-header=\\\"deposit\\\">Deposit</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.deposit | number}} </td>\\n          </ng-container>\\n\\n          <!-- depositTransfer -->\\n          <ng-container matColumnDef=\\\"depositTransfer\\\">\\n            <th mat-header-cell \\n                *matHeaderCellDef\\n                mat-sort-header=\\\"depositTransfer\\\">Deposit (transfer)</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.depositTransfer | number}} </td>\\n          </ng-container>\\n\\n          <!-- BettingAmount -->\\n          <ng-container matColumnDef=\\\"BettingAmount\\\">\\n            <th mat-header-cell \\n                *matHeaderCellDef\\n                mat-sort-header=\\\"BettingAmount\\\">Betting Amount</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.BettingAmount | number}} </td>\\n          </ng-container>\\n\\n          <!-- TotalRake -->\\n          <ng-container matColumnDef=\\\"TotalRake\\\">\\n            <th mat-header-cell \\n                *matHeaderCellDef\\n                mat-sort-header=\\\"TotalRake\\\">Rake</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.TotalRake | number}} </td>\\n          </ng-container>\\n\\n          <!-- money -->\\n          <ng-container matColumnDef=\\\"money\\\">\\n            <th mat-header-cell \\n                *matHeaderCellDef\\n                mat-sort-header=\\\"money\\\">Holding Money</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.money | number}} </td>\\n          </ng-container>\\n\\n          <!-- profit -->\\n          <ng-container matColumnDef=\\\"profit\\\">\\n            <th mat-header-cell \\n                *matHeaderCellDef>Profit</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.profit | number}} </td>\\n          </ng-container>\\n\\n          <!-- profitMinusRake -->\\n          <ng-container matColumnDef=\\\"profitMinusRake\\\">\\n            <th mat-header-cell \\n                *matHeaderCellDef>profit - rake</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"warning\\\">{{element.profitMinusRake | number}}</td>\\n          </ng-container>\\n  \\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n        </table>\\n      </div>\\n  \\n      <div *ngIf=\\\"pageEvent\\\">\\n        <mat-paginator  [length]=\\\"pageEvent.length\\\"\\n                        [pageSize]=\\\"pageEvent.pageSize\\\"\\n                        [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n                        showFirstLastButtons=\\\"true\\\"\\n                        (page)=\\\"pageEvent = $event; reload()\\\"> </mat-paginator>\\n      </div>\\n    </mat-card-content>\\n  </mat-card>\"","import { Component, OnInit, Inject, LOCALE_ID } from '@angular/core';\nimport { UserProfitService } from '../../../services/calculate/user-profit.service';\nimport { CommonService } from '../../../services/common/common.service'\nimport { FormsService } from '../../../services/utilities/forms.service'\nimport { environment } from 'src/environments/environment.prod';\nimport { NoResultBottomSheet2 } from '../../../utilities/NoResultBottomSheet/NoResultBottomSheet2'\nimport { interval, Subscription } from 'rxjs';\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\nimport {PageEvent, Sort, MatBottomSheet} from '@angular/material';\nimport { formatDate } from '@angular/common';\ninterface userProfitModel{\n  row_number:number,\n  PlayerID:string,\n  ShopID:string,\n  DistributorID:string,\n  HeadOfficeID:string,\n  ScreenName:string,\n  withdraw:number,\n  withdrawTransfer:number,\n  deposit:number,\n  depositTransfer:number,\n  BettingAmount:number,\n  TotalRake:number,\n  money:number,\n  profit:number,\n  profitMinusRake:number\n}\n@Component({\n  selector: 'app-user-profit',\n  templateUrl: './user-profit.component.html',\n  styleUrls: ['./user-profit.component.css']\n})\nexport class UserProfitComponent implements OnInit {\n\n  constructor(private UserProfitSrvc:UserProfitService,\n              private bottomsheet:MatBottomSheet, \n              private commonSrvc:CommonService,\n              private formSrvc:FormsService,\n              @Inject(LOCALE_ID) private locale: string) {\n\n  }\n  //table variables\n    UserProfitList:userProfitModel[] = []\n\n    displayedColumns:string[] =[  \n      'row_number',\n      'HeadOfficeID',\n      'DistributorID',\n      'ShopID',\n      'PlayerID',\n      'ScreenName',\n      'deposit',\n      'depositTransfer',\n      'withdraw',\n      'withdrawTransfer',\n      'profit', // cannot be table sort because its value is calculated here in the front not in the server\n      'BettingAmount',\n      'TotalRake',\n      'money',\n      'profitMinusRake' // cannot be table sort because its value is calculated here in the front not in the server\n    ]\n\n    tableSort:Sort = {active : 'TotalRake', direction : 'desc'}\n\n    // MatPaginator\n      // input\n      pageSizeOptions: number[] = environment.pageSizeOptions;\n\n      // Output\n      pageEvent: PageEvent = { pageIndex : 0, pageSize : environment.pageSizeOptions[0], previousPageIndex : 0, length: 0};\n      \n  //service variables\n    pageIndex:number = 7\n\n  //search variables\n    showBackButton:boolean = false\n    backLoading:boolean = true\n\n    timeopts:any[]\n\n    //screean name value\n      searchValue:string = 'Player31'\n    // date\n      startDate:string = '2018-12-26';\n      endDate:string = '2019-12-26';\n\n    // time\n      startTime:string =' 00:00:00';\n      endTime:string = ' 23:59:59';\n\n  //lifecycle hooks\n  ngOnInit() {\n    this.timeopts = this.formSrvc.timeOptions\n      this.getListAndPageCount();\n  }\n  ngOnDestroy() {\n    console.log('you leave 1on1 support')\n  }\n\n//lifecycle hooks end\n\ngetListAndPageCount(){\n  Promise.all([this.getSupportList(),this.getPageCount()]).then(function() {\n    console.log('get list and page count successful');\n    }, function(){ //if promise or promise2 fail\n    console.log('something went wrong')\n  })\n}\n\ngetSupportList(){\n  let promise = new Promise((resolve,reject) => {\n    this.commonSrvc.getList3(this.pageIndex, \n                            this.pageEvent.pageIndex * this.pageEvent.pageSize, //ofset\n                            this.pageEvent.pageSize, // limit\n                            this.tableSort.active, // order by\n                            this.tableSort.direction)\n    .subscribe(\n      (result :userProfitModel[]) => {\n\n        console.log(result)\n        //show No results found if 0 result else dont show\n        if(result.length > 0){\n          //set artificial index\n            let row_number_new = this.pageEvent.pageIndex * this.pageEvent.pageSize\n            for(let i = 0; i <= result.length - 1; i++){\n              row_number_new += 1;\n              result[i].row_number = row_number_new;\n              result[i].profit = result[i].deposit - result[i].withdraw;\n              result[i].profitMinusRake = result[i].profit - result[i].TotalRake;\n            }\n          //set artificial index end\n            this.UserProfitList = result\n            this.backLoading = false\n        }else{\n          console.log('user profit no result')\n        }\n        resolve()\n      },\n      error => {\n        console.log(error)\n        reject()\n      }\n    )\n\n  })\n\n  return promise;\n}\n\ngetPageCount(){\n  let promise = new Promise ((resolve,reject) => {\n    this.commonSrvc.getPageCount(this.pageIndex)\n    .subscribe(\n      (result) => {\n        this.pageEvent.length = result[0]['ID']\n        resolve()\n      },\n        error => {\n          console.log('key ' + localStorage.getItem(environment.tokenStorageKey));\n          console.log(error);\n          reject()\n        }\n    )\n  })\n  return promise;\n}\n\n  searchList(){\n    this.showBackButton = true\n    this.UserProfitList = []\n    this.UserProfitSrvc.searchUserProfit( this.startDate + this.startTime ,this.endDate + this.endTime, this.searchValue )\n      .subscribe(\n        (result:userProfitModel[]) => {\n          //if there's result\n          if(result.length > 0){\n            console.log(result)\n\n              result[0].profit = result[0].deposit - result[0].withdraw;\n              result[0].profitMinusRake = result[0].profit - result[0].TotalRake;\n\n            this.UserProfitList = result\n            this.backLoading = false\n            console.log('results found')\n          }else{\n            console.log('search result not found')\n          }\n          // this.UserProfitList = result\n        },\n        error => {\n          if(error['statusText'] == 'Not Found'){\n            this.openSearchNoResultFound()\n\n            //empty list\n            this.UserProfitList = []\n          }\n        }\n      )\n  }\n\n  //we call this function when the user interact with paginator or clicked the refresh button\n  reload(){\n    this.backLoading = true; \n    this.showBackButton = false;\n    this.getListAndPageCount();\n  }\n  \n  sortData(sort: Sort){\n    this.tableSort = { active : sort.active, direction : sort.direction}\n    console.log(this.tableSort.direction)\n    if(this.tableSort.direction){\n      this.reload()\n    }\n  }\n\n  dateValueChanged(event: MatDatepickerInputEvent<Date>){\n    if(event.targetElement.id == 'from'){\n      this.startDate = formatDate(event.value,'yyyy-MM-dd', this.locale).toString()\n    }else if(event.targetElement.id == 'to'){\n      this.endDate = formatDate(event.value, 'yyyy-MM-dd',this.locale).toString()\n    }else{\n      console.log('invalid target ID')\n    }\n\n  }\n\n  openSearchNoResultFound(){\n    this.bottomsheet.open(NoResultBottomSheet2,{\n      data : {  value : this.searchValue, \n                column : '', \n                fromDate : this.startDate,\n                fromTime : this.startTime,\n                toDate : this.endDate,\n                toTime : this.endTime \n              }\n    })\n      .afterDismissed().subscribe(\n        () => { \n            console.log('dismissed');\n            this.reload()\n            this.searchValue = null;\n          }\n      ) \n  }\n\n}\n","module.exports = \".rightbar{\\r\\n    border-right:6px solid #ccc!important;\\r\\n}\\r\\n\\r\\n\\r\\n  .center {\\r\\n    margin: auto;\\r\\n    width: 50%;\\r\\n    border: 3px solid green;\\r\\n    padding: 10px;\\r\\n  }\"","module.exports = \"<mat-grid-list [cols]=\\\"topStatisticsColspan\\\" rowHeight=\\\"120px\\\" gutterSize=\\\"15px\\\" style=\\\"margin:10px;\\\">\\n  <mat-grid-tile colspan=\\\"1\\\" rowspan=\\\"1\\\" *ngFor=\\\"let s of Stats; let last = last\\\" [ngClass]=\\\"{ 'rightbar' : !last }\\\">\\n    <div style=\\\"height: 100%; width: 100%;\\\">\\n      <mat-list>\\n        <mat-list-item>{{s.Title}}</mat-list-item>\\n        <mat-list-item>{{s.Title2}}</mat-list-item>\\n      </mat-list>\\n    </div>\\n    <p style=\\\"margin-right: 2px\\\">{{s.Value2 | number}}</p>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\\n<mat-grid-list [cols]=\\\"cardStatisticsColspan\\\" style=\\\"margin:10px;\\\">\\n\\n  <mat-grid-tile colspan=\\\"1\\\" rowspan=\\\"1\\\" *ngFor=\\\"let b of AverageRanking\\\">\\n    <mat-card style=\\\"width:90%; height: 90%\\\" >\\n      <div *ngIf=\\\"!b.IsReady\\\" class=\\\"loading-shade\\\">\\n        <mat-spinner></mat-spinner>\\n      </div>\\n      \\n      <mat-card-header>\\n        <mat-card-title>{{b.Title}}</mat-card-title>\\n      </mat-card-header>\\n      <mat-divider></mat-divider>\\n\\n      <div *ngIf=\\\"b.IsReady\\\">\\n        <mat-card-content >\\n          \\n          <mat-grid-list cols=\\\"9\\\" *ngFor=\\\"let x of b.Values\\\" >\\n            \\n            <mat-grid-tile colspan=\\\"2\\\">\\n              <p>{{x.Amount | number}}</p>\\n            </mat-grid-tile>\\n            <mat-grid-tile colspan=\\\"5\\\">\\n              <mat-progress-bar color=\\\"primary\\\" mode=\\\"determinate\\\" [value]=\\\"x.Percentage\\\" style=\\\"height: 20px;\\\"> </mat-progress-bar>\\n            </mat-grid-tile>\\n            <mat-grid-tile colspan=\\\"2\\\">\\n              <span>{{x.OfficeID}}</span>\\n            </mat-grid-tile>\\n  \\n          </mat-grid-list>\\n        </mat-card-content>\\n      </div>\\n    \\n    </mat-card>\\n  </mat-grid-tile>\\n</mat-grid-list>\\n\\n<button (click)=\\\"getDepositRankingDaily()\\\">test</button>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from '../../services/dashboard/dashboard.service';\nimport { CommonService } from '../../services/common/common.service';\nimport { interval, Subscription } from 'rxjs';\nimport { environment } from '../../../environments/environment.prod';\n\n// models\nimport { DepositDailyModel } from '../../interfaces/DepositDailyModel'\nimport { WithdrawDailyModel } from '../../interfaces/WithdrawDailyModel'\nimport { StatsModel } from '../../interfaces/StatsModel'\nimport { AverageRankingModel } from '../../interfaces/AverageRankingModel'\nimport { BettingRankingModel } from '../../interfaces/BettingRankingModel'\ninterface bettingRankingDaily{\n  HeadOfficeUserAccountID : string,\n  TotalDailyBettingByHeadOffice : number,\n  Percentage : number\n}\n\ninterface bettingRankingMonthly{\n  TotalMonthlyBettingByHeadOffice:number,\n  HeadOfficeUserAccountID:string,\n  Percentage:number\n}\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\n\nexport class DashboardComponent implements OnInit {\n  protected Stats:StatsModel[] = [\n    {Title: 'total members(real)', Title2 : 'total members(all)', Value : '0', Value2: '0'},\n    {Title: 'today joined members(real)', Title2 : 'today joined members(all)', Value : '0', Value2: '0'},\n    {Title: 'connecting members(real)', Title2 : 'connecting members(all)', Value : '0', Value2: '0'},\n    {Title: 'deposit of today(real)', Title2 : 'deposit of today(all)', Value : '0', Value2: '0'},\n    {Title: 'withdraw of today (real)', Title2 : 'withdraw of today (all)', Value : '0', Value2: '0'},\n    {Title: 'holding money(real)', Title2 : 'holding money(all)', Value : '0', Value2: '0'}\n  ];\n\n  protected AverageRanking:AverageRankingModel[] = [\n    { Title: 'betting ranking by head office(daily)', Values : [{ Amount: 0, OfficeID: 'unknown', Percentage: 0 }], IsReady : false },\n    { Title: 'betting ranking by head office(weekly)', Values : [{ Amount: 0, OfficeID: 'unknown', Percentage: 0 }], IsReady : false},\n    { Title: 'betting ranking by head office(monthly)', Values : [{ Amount: 0, OfficeID: 'unknown', Percentage: 0 }], IsReady : false},\n    { Title: 'deposit ranking by head office(daily)', Values : [{ Amount: 0, OfficeID: 'unknown', Percentage: 0 }], IsReady : false},\n    { Title: 'withdraw ranking by head office(daily)', Values : [{ Amount: 0, OfficeID: 'unknown', Percentage: 0 }], IsReady : false }\n  ];\n\n\n\n  // totalRegisteredUser:string\n  totalRegisteredUserToday: string\n  totalConnectingMembers:string\n  \n  //charts variables\n  //betting ranking by head office variables\n  bettingRankingHODaily:bettingRankingDaily[] = []\n  dailyLoading:boolean = true\n  bettingRankingHOMonthly:bettingRankingMonthly[] = []\n  monthlyLoading:boolean = true\n  \n  //deposit and withdraw ranking\n    totalDepositToday:number\n    depositRankingDaily:DepositDailyModel[] = []\n    depositRankingLoading:boolean = true\n  \n    totalWithdrawToday:number\n    withdrawRankingDaily:WithdrawDailyModel[] = []\n    withdrawRankingLoading:boolean = true\n\n\n  //on component variables\n  topStatisticsColspan?:number = 6\n  cardStatisticsColspan?:number = 3\n  \n\n  constructor(private dashboardSrvc:DashboardService,\n              private commonSrvc:CommonService) { }\n\n  // pie variables\n  public pieChartLabels:string[] = ['JIN05', 'dw88b', 'km87v'];\n  public pieChartData:number[] = [300, 500, 100];\n  public pieChartType:string = 'pie';\n \n  ngOnInit() {\n    if(window.innerWidth <= 1024){\n      this.topStatisticsColspan = 3\n      this.cardStatisticsColspan = 2\n    }else{\n      this.topStatisticsColspan = 6\n      this.cardStatisticsColspan = 3\n    }\n    this.getBettingRankingDaily()\n    this.getBettingRankingWeekly()\n    this.getBettingRankingMonthly()\n    \n    this.getDepositRankingDaily()\n    // this.getWithdrawRankingDaily()\n    \n    this.getWithdrawDepositToday()\n    //observable from master page component to dashboard service\n    this.getEmittedTotalRegisteredUserToday()\n    this.getEmittedTotalRegisteredUser()\n    this.getEmittedConnectingMembers()\n  }\n\n  ngOnDestroy() {\n  \n    console.log('you leave dashboard')\n  }\n\n\n//charts\n  getBettingRankingDaily(){\n    this.dashboardSrvc.getBettingRankingDaily()\n    .subscribe( \n      (res:BettingRankingModel[]) => {\n        if(res.length > 0){\n          //sort result\n            res.sort((a,b)=>  { return b.Amount - a.Amount} )\n          //getting the percentage variables\n            let max = res[0].Amount\n            let min = 0\n  \n            for(let i = 0; i <= res.length - 1; i++){\n              res[i].Percentage = ((res[i].Amount - min) / (max - min) ) * 100;\n              this.AverageRanking[0].Values[i] = res[i]\n            }\n\n          this.AverageRanking[0].IsReady = true\n          // this.bettingRankingHODaily = res\n          // this.dailyLoading = false\n        }else{\n          this.AverageRanking[0].IsReady = false\n        }\n      },\n      error => {\n\n        if(error['status'] == '403'){\n          this.commonSrvc.logout()\n        }else{\n          this.AverageRanking[0].IsReady = true\n        }\n        // console.log(' this is error ' + error)\n        \n      }\n    )\n  }\n\n  getBettingRankingWeekly(){\n    this.dashboardSrvc.getBettingRankingWeekly()\n    .subscribe( \n      (res:BettingRankingModel[]) => {\n        if(res.length > 0){\n          //sort result\n            res.sort((a,b)=>  { return b.Amount - a.Amount} )\n          //getting the percentage variables\n            let max = res[0].Amount\n            let min = 0\n  \n            for(let i = 0; i <= res.length - 1; i++){\n              res[i].Percentage = ((res[i].Amount - min) / (max - min) ) * 100;\n              this.AverageRanking[1].Values[i] = res[i]\n            }\n            this.AverageRanking[1].IsReady = true\n            // this.bettingRankingHODaily = res\n            // this.dailyLoading = false\n          }else{\n            this.AverageRanking[1].IsReady = false\n        }\n      },\n      error => {\n\n        if(error['status'] == '403'){\n          this.commonSrvc.logout()\n        }else{\n          // this.dailyLoading = true\n        }\n        // console.log(' this is error ' + error)\n        \n      }\n    )\n  }\n\n  getBettingRankingMonthly(){\n    this.dashboardSrvc.getBettingRankingMonthly()\n    .subscribe( \n      (res:BettingRankingModel[]) => {\n        if(res.length > 0){\n          //sort result\n          res.sort((a,b)=>  { return b.Amount - a.Amount} )\n          //getting the percentage variables\n            let max = res[0].Amount\n            let min = 0\n  \n            for(let i = 0; i <= res.length - 1; i++){\n              res[i].Percentage = ((res[i].Amount - min) / (max - min) ) * 100;\n              this.AverageRanking[2].Values[i] = res[i]\n            }\n            \n            this.AverageRanking[2].IsReady = true\n            // this.bettingRankingHOMonthly = res\n            // this.monthlyLoading = false\n          }\n        },\n      error => {\n          // console.log('error' + error)\n          this.AverageRanking[2].IsReady = false\n      // this.monthlyLoading = true\n      }\n    )\n  }\n\n  getDepositRankingDaily(){\n    console.log('sent')\n    this.dashboardSrvc.depositToday\n    .subscribe( \n      (res:DepositDailyModel[]) => {\n        console.log('sent')\n        //total withdraw variable\n        console.log(res)\n        if(res.length > 0){\n          //sort result\n            res.sort((a,b)=>  { return b.Amount - a.Amount} )\n          //getting the percentage variables\n            let max = res[0].Amount\n            let min = 0\n          let totalDeposit = 0 \n          for(let i = 0; i <= res.length - 1; i++){\n            res[i].Percentage = ((res[i].Amount - min) / (max - min) ) * 100;\n            totalDeposit += Number(res[i].Amount);\n            this.AverageRanking[3].Values[i] = res[i]\n          }\n          console.log(res)\n          this.AverageRanking[3].IsReady = true\n          this.Stats[3].Value2 = totalDeposit.toString()\n        }\n\n        //assign result to depositRankingDaily\n          // this.AverageRanking[3].Values = res\n          this.depositRankingDaily = res\n\n      },\n      error => {\n      console.log(error['status'])\n      }\n    )\n  }\n  getWithdrawRankingDaily(){\n    this.dashboardSrvc.withdrawToday\n    .subscribe(\n      (res:WithdrawDailyModel[]) =>{ \n        if(res.length > 0){\n          //total withdraw variable\n          let totalwithdraw = 0\n          for(let i = 0; i <= res.length - 1; i++){\n            totalwithdraw += Number(res[i].Amount)\n            this.AverageRanking[4].Values[i] = res[i]\n          }\n          \n          this.AverageRanking[4].IsReady = true\n          this.totalWithdrawToday = totalwithdraw\n        }\n        //assign result to withdrawRankingDaily\n          this.withdrawRankingDaily = res\n\n        this.withdrawRankingLoading = false\n      },\n      error => {\n        console.log('error' + error)\n        this.withdrawRankingLoading = true\n      }\n    )\n  }\n\n  getWithdrawDepositToday(){\n    this.dashboardSrvc.getDepositWithdrawToday()\n    .subscribe(\n      (res) =>{ \n        if(res.length > 0){\n          this.Stats[3].Value2 = res[0]['TotalDepositToday']? res[0]['TotalDepositToday'] : 0 \n          this.Stats[4].Value2 = res[0]['TotalWithdrawToday']? res[0]['TotalWithdrawToday'] : 0\n        }\n      },\n      error => {\n        console.log('error' + error)\n      }\n    )\n  }\n//charts end\n\n//at the top statistics\n\n  getEmittedTotalRegisteredUser(){\n    this.dashboardSrvc.totalMemberObservable\n      .subscribe( \n        (res) => {\n          this.Stats[0].Value2 = res? res : '0'\n          // this.totalRegisteredUser = res\n      },\n        error => {console.log('error' + error)}\n      )\n  }\n\n  getEmittedTotalRegisteredUserToday(){\n    this.dashboardSrvc.totalRegisteredTodayObservable\n      .subscribe( \n        (res) => {\n          this.Stats[1].Value2 = res? res : '0'\n          // this.totalRegisteredUserToday = res\n      },\n        error => {console.log('error' + error)}\n      )\n  }\n\n  getEmittedConnectingMembers(){\n    this.dashboardSrvc.connectingMembersObservable\n      .subscribe( \n        (res:string) => {\n          // this.totalConnectingMembers = res\n          this.Stats[2].Value2 = res\n      },\n        error => {console.log('error' + error)}\n      )\n  }\n\n  getEmittedTotalWithdrawToday(){\n    this.dashboardSrvc.totalWithdrawTodayObservable\n      .subscribe( \n        (res:string) => {\n          // this.totalConnectingMembers = res\n          this.Stats[4].Value2 = res\n      },\n        error => {console.log('error' + error)}\n      )\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<mat-card class=\\\"card\\\" >\\r\\n  <div *ngIf=\\\"backLoading\\\" class=\\\"loading-shade\\\">\\r\\n    <mat-spinner color=\\\"accent\\\"></mat-spinner>\\r\\n  </div>\\r\\n\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Deposit List</mat-card-title>\\r\\n    <button mat-icon-button \\r\\n            color=\\\"accent\\\" \\r\\n            style=\\\"right:0; top:0; margin-top:10px; position: absolute;\\\" \\r\\n            (click)=\\\"reload()\\\"\\r\\n            matTooltip=\\\"sync\\\"><mat-icon matBadge=\\\"22\\\" matBadgePosition=\\\"above after\\\" matBadgeSize=\\\"medium\\\">sync</mat-icon></button>\\r\\n\\r\\n  </mat-card-header>\\r\\n\\r\\n  <mat-divider></mat-divider>\\r\\n  <form style=\\\"display: flex; justify-content: flex-end; margin-top: 10px;\\\">\\r\\n    <div style=\\\"max-width: 1500px;\\\">\\r\\n      <button *ngIf=\\\"showBackButton\\\"\\r\\n              mat-flat-button \\r\\n              color=\\\"primary\\\"\\r\\n              style=\\\"margin-right:5px;\\\" \\r\\n              (click)=\\\"reload();\\\"><mat-icon>arrow_back</mat-icon></button>\\r\\n              \\r\\n      <mat-form-field style=\\\"width:120px;\\\">\\r\\n        <input matInput \\r\\n              [matDatepicker]=\\\"fromDate\\\" \\r\\n              placeholder=\\\"From date\\\" \\r\\n              (dateChange)=\\\"dateValueChanged($event)\\\"\\r\\n              id=\\\"from\\\">\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"fromDate\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #fromDate></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field style=\\\"width:90px; margin: 5px 5px 0;\\\">\\r\\n        <mat-select [(value)]=\\\"startTime\\\">\\r\\n          <mat-option *ngFor=\\\"let t of timeopts\\\" value=\\\"{{t.value}}\\\">{{t.name}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      \\r\\n      <mat-form-field style=\\\"width:120px;\\\">\\r\\n        <input matInput \\r\\n              [matDatepicker]=\\\"toDate\\\" \\r\\n              placeholder=\\\"To date\\\"\\r\\n              (dateChange)=\\\"dateValueChanged($event)\\\"\\r\\n              id=\\\"to\\\">\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"toDate\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #toDate></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field style=\\\"width:90px; margin: 5px 5px 0;\\\">\\r\\n        <mat-select [(value)]=\\\"endTime\\\">\\r\\n          <mat-option *ngFor=\\\"let t of timeopts\\\" value=\\\"{{t.value}}\\\">{{t.name}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field style=\\\"width:90px; margin: 5px 5px 0;\\\">\\r\\n        <input matInput\\r\\n              [(ngModel)]=\\\"searchValue\\\"\\r\\n              [ngModelOptions]=\\\"{standalone: true}\\\" \\r\\n              placeholder=\\\"Screen Name\\\" \\r\\n              id=\\\"from\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <button mat-button (click)=\\\"searchList()\\\"><mat-icon>search</mat-icon></button>\\r\\n    </div>\\r\\n  </form>\\r\\n  <mat-card-content style=\\\"overflow:auto;\\\" class=\\\"mat-elevation-z6\\\">\\r\\n    <div style=\\\"width:1500px;\\\">\\r\\n      <!-- member list table -->\\r\\n      <table  mat-table matSort \\r\\n              [dataSource]=\\\"depositList\\\"\\r\\n              style=\\\"width:100%\\\" \\r\\n              (matSortChange)=\\\"sortData($event)\\\">\\r\\n\\r\\n        <!-- no. -->\\r\\n        <ng-container matColumnDef=\\\"ID\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>No.</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.ID | number}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- HeadOfficeID  -->\\r\\n        <ng-container matColumnDef=\\\"HeadOfficeID\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"HeadOfficeID\\\">HO ID </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.HeadOfficeID}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- DistributorID  -->\\r\\n        <ng-container matColumnDef=\\\"DistributorID\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"DistributorID\\\">DistributorID </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.DistributorID}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- ShopID -->\\r\\n        <ng-container matColumnDef=\\\"ShopID\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ShopID\\\">ShopID</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.ShopID}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!--UserName  -->\\r\\n        <ng-container matColumnDef=\\\"UserName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"UserName\\\">UserName</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.UserName}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- ScreenName  -->\\r\\n        <ng-container matColumnDef=\\\"ScreenName\\\" >\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ScreenName\\\">ScreenName </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.ScreenName}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Name -->\\r\\n        <ng-container matColumnDef=\\\"Name\\\" >\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Name\\\">Name</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.Name}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- PhoneNumber -->\\r\\n        <ng-container matColumnDef=\\\"PhoneNumber\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"PhoneNumber\\\">PhoneNumber</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.PhoneNumber}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Amount -->\\r\\n        <ng-container matColumnDef=\\\"Amount\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Amount\\\">Amount</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.Amount | number}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- TransactionStatus  -->\\r\\n        <ng-container matColumnDef=\\\"TransactionStatus\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"TransactionStatus\\\">Status </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.TransactionStatus }} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- RequestedDateTime -->\\r\\n        <ng-container matColumnDef=\\\"RequestedDateTime\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"RequestedDateTime\\\">RequestedDateTime</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.RequestedDateTime | date : 'medium'}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- ApprovedDateTime  -->\\r\\n        <ng-container matColumnDef=\\\"ApprovedDateTime\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ApprovedDateTime\\\">ApprovedDateTime </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.ApprovedDateTime  | date : 'medium'}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- ApprovedDateTime  -->\\r\\n        <ng-container matColumnDef=\\\"Management\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef >Management </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" >\\r\\n            <div [ngClass]=\\\"{'hide': element.TransactionStatus == 'approved'}\\\">\\r\\n              <button mat-flat-button \\r\\n                      color=\\\"accent\\\" \\r\\n                      style=\\\"margin:5px\\\"\\r\\n                      matTooltip=\\\"cancel\\\"\\r\\n                      matTooltipPosition=\\\"left\\\"\\r\\n                      (click)=\\\"updateDeposit(element.UserTransactionID)\\\"><mat-icon>cancel</mat-icon></button>\\r\\n              <button mat-flat-button \\r\\n                      color=\\\"warn\\\" \\r\\n                      style=\\\"margin:5px\\\"\\r\\n                      matTooltip=\\\"delete\\\"\\r\\n                      matTooltipPosition=\\\"above\\\"><mat-icon>delete_outline</mat-icon></button> \\r\\n              <button mat-flat-button \\r\\n                      color=\\\"primary\\\" \\r\\n                      style=\\\"margin:5px\\\"\\r\\n                      matTooltip=\\\"approved\\\"\\r\\n                      (click)=\\\"approveDeposit(element.UserTransactionID, element.UserAccountID, element.Amount);\\\"\\r\\n                      matTooltipPosition=\\\"right\\\"><mat-icon>check</mat-icon></button>\\r\\n            </div> \\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"pageEvent\\\">\\r\\n      <mat-paginator  [length]=\\\"pageEvent.length\\\"\\r\\n                      [pageSize]=\\\"pageEvent.pageSize\\\"\\r\\n                      [pageSizeOptions]=\\\"pageSizeOptions\\\"\\r\\n                      showFirstLastButtons=\\\"true\\\"\\r\\n                      (page)=\\\"pageEvent = $event; reload()\\\"> </mat-paginator>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<button (click)=\\\"sampleexcel()\\\">test</button>\"","import { Component, OnInit, Inject, LOCALE_ID } from '@angular/core';\nimport { CommonService } from '../../../services/common/common.service'\nimport { environment } from '../../../../environments/environment.prod';\nimport { MoneytransactionsService } from '../../../services/moneytransactions/moneytransactions.service'\nimport { FormsService } from '../../../services/utilities/forms.service'\nimport {PageEvent, Sort} from '@angular/material';\nimport { DepositModel } from '../../../interfaces/DepositModel'\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\nimport { formatDate } from '@angular/common';\nimport {UserAuthService} from '../../../services/UserAuth/user-auth.service';\nimport { ExcelService } from '../../../services/excel/excel.service';\n\n@Component({\n  selector: 'app-deposit-management',\n  templateUrl: './deposit-management.component.html',\n  styleUrls: ['./deposit-management.component.css']\n})\nexport class DepositManagementComponent implements OnInit {\n  // remote port is 8080\n  ws = new WebSocket(\"ws://localhost:3000/?UserAccountID=d31a6484-5249-4faa-b7d3-aa6f93419d8c\");\n  // private ws = new WebSocket(\"ws://httpsserver-socket-server-socket.4b63.pro-ap-southeast-2.openshiftapps.com/?UserAccountID=1571028c-eec2-47ac-a1bf-0a62086551d2\");\n  // private ws = new WebSocket('wss://'+this.userAuthSrvc.server.slice(this.userAuthSrvc.server.search('/') + 2 , this.userAuthSrvc.server.length )+'/?UserAccountID=cdf61833-66e1-4a92-a46c-0782ed77c203')\n\n  constructor(private commonSrvc:CommonService, \n              private moneyTransactionsSrvc:MoneytransactionsService,\n              private formSrvc:FormsService,\n              private excel:ExcelService,\n              @Inject(LOCALE_ID) private locale: string) {\n\n   }\n\n  //service variables\n    pageIndex:number = 0\n  //table variables\n    depositList:DepositModel[]\n\n    displayedColumns:string[] =[  \n      'ID',\n      'HeadOfficeID',\n      'DistributorID',\n      'ShopID',\n      'UserName',\n      'ScreenName',\n      'Name',\n      'PhoneNumber',\n      'Amount',\n      'TransactionStatus',\n      'Management',\n      'RequestedDateTime',\n      'ApprovedDateTime'\n    ]\n\n    tableSort:Sort = {active : 'TransactionStatus', direction : 'desc'}\n\n    // MatPaginator\n      // input\n      pageSizeOptions: number[] = environment.pageSizeOptions;\n\n      // Output\n      pageEvent: PageEvent = { pageIndex : 0, pageSize : environment.pageSizeOptions[0], previousPageIndex : 0, length: 0};\n\n  //search variables\n    showBackButton:boolean = false\n    backLoading:boolean = true\n\n    timeopts:any[]\n\n    //screean name value\n      searchValue:string = 'player1'\n    // date\n      startDate:string = '2018-12-26';\n      endDate:string = '2019-12-26';\n\n    // time\n      startTime:string =' 00:00:00';\n      endTime:string = ' 23:59:59';\n  // table variables\n    currentManageButton:number\n    hideManageButton:boolean = true\n  //lifecycle hooks\n    ngOnInit() {\n\n      this.timeopts = this.formSrvc.timeOptions\n      // this.ws.on()\n      this.ws.onopen = function(openSocket){\n        console.log(openSocket.type)\n      }\n      \n      this.ws.onmessage = function(event){\n        var received_msg = event.data;\n          console.log(JSON.parse(received_msg));\n      }\n\n      this.getListAndPageCount()\n\n    }\n    ngOnDestroy() {\n      this.ws.close()\n      console.log('you leave deposit list')\n    }\n\n  //lifecycle hooks end\n\n  AcceptDepositWebSocket(receiver,amount,depositID){\n\n    if (\"WebSocket\" in window) {\n\n      var MessageReceiver = receiver;\n      var Amount =\"\";//for pop up message in game only\n      var DepositUUID = depositID;\n      var DepositNotice = \"Deposit Approved Amount \"+amount;\n      var message = \"{\\\"Type\\\":\\\"NotifyPlayerDeposit\\\",\\\"MessageReceiver\\\" :\\\"\" + MessageReceiver +\n          \"\\\",\\\"DepositNotice\\\":\\\"\" + DepositNotice + \"\\\",\\\"DepositUUID\\\":\\\"\" + DepositUUID + \"\\\"}\";\n          console.log(\"Notify Player\");\n          \n      this.ws.send(message);\n\n  } else {\n      alert(\"WebSocket NOT supported by your Browser!\");\n  }\n    // this.ws.o\n    // if(\"WebSocket\" in window){\n    //   var DepositNotice = \"Deposit Approved Amount \"+amount;\n    //   var message = \"{\\\"Type\\\":\\\"NotifyPlayerDeposit\\\",\\\"MessageReceiver\\\" :\\\"\" + receiver +\n    //       \"\\\",\\\"DepositNotice\\\":\\\"\" + DepositNotice + \"\\\",\\\"DepositUUID\\\":\\\"\" + depositID + \"\\\"}\";\n    //   this.ws.send(message)\n    // }else{\n    //   alert('your web browser doesnt support websocket')\n    // }\n  }\n\n  getListAndPageCount(){\n    Promise.all([this.getDepositList()]).then(function() {\n    // Promise.all([this.getDepositList(),this.getPageCount()]).then(function() {\n      console.log('get list and page count successful');\n      }, function(){ //if promise or promise2 fail\n      console.log('something went wrong')\n    })\n  }\n\n  getDepositList(){\n    let promise = new Promise((resolve,reject) => {\n      this.commonSrvc.getList3( this.pageIndex, \n                                this.pageEvent.pageIndex * this.pageEvent.pageSize, //ofset\n                                this.pageEvent.pageSize, // limit\n                                this.tableSort.active, // order by\n                                this.tableSort.direction)\n      .subscribe(\n        (result :DepositModel[]) => {\n          console.log(result)\n          //show No results found if 0 result else dont show\n          if(result.length > 0){\n            //set artificial index\n            let row_number_new = 0\n            for(let i = 0; i <= result.length - 1; i++){\n              row_number_new += 1;\n              result[i].ID = row_number_new\n            }\n\n            this.depositList = result\n            this.backLoading = false\n          }else{\n          }\n\n          resolve()\n        },\n        error => {\n          console.log('deposit error ' + error)\n          console.log('get support list error')\n          reject()\n        }\n      )\n\n    })\n\n    return promise;\n  }\n\n  getPageCount(){\n    let promise = new Promise ((resolve,reject) => {\n      this.commonSrvc.getPageCount(this.pageIndex)\n      .subscribe(\n        (result) => {\n          this.pageEvent.length = result[0]['ID']\n          resolve()\n        },\n          error => {\n            console.log('key ' + localStorage.getItem(environment.tokenStorageKey));\n            console.log(error);\n            reject()\n          }\n      )\n    })\n    return promise;\n  }\n\n  searchList(){\n    this.showBackButton = true\n    this.depositList = []\n    this.moneyTransactionsSrvc.searchDeposit(this.startDate + this.startTime ,this.endDate + this.endTime, this.searchValue)\n      .subscribe(\n        (result:DepositModel[]) => {\n          console.log(result)\n          if(result.length > 0){\n            this.depositList = result\n            console.log('results found')\n          }else{\n            console.log('no results found')\n          }\n        },\n        error => {\n          console.log('this is the error --> '+ error['status'])\n          // console.log()\n          if(error['status'] == 404){\n\n            //empty list\n            this.depositList = []\n          }\n        }\n      )\n  }\n\n  reload(){\n    this.backLoading = true\n    this.getListAndPageCount()\n  }\n  \n  updateDeposit(UserTransactionID:string){\n    this.hideManageButton = false\n    if(UserTransactionID){\n      this.moneyTransactionsSrvc.archivedDeposit(UserTransactionID)\n      .subscribe( \n        result => {\n          console.log(result)\n          this.hideManageButton = true\n          alert('delete successful')\n          }\n        )\n    }\n  }\n\n  approveDeposit(UserTransactionID:string, UserAccountID:string, Amount){\n    this.hideManageButton = false\n    this.moneyTransactionsSrvc.approveDeposit(UserTransactionID, UserAccountID)\n    .subscribe( \n      result => {\n        this.reload()\n        if(result.toString() == 'true'){\n          this.AcceptDepositWebSocket(UserAccountID, Amount, UserTransactionID)\n          // alert('approved successfully')\n        }\n        \n        if(result['AlreadyApproved'] == true){\n          alert('already approved')\n          this.currentManageButton = 0\n        }\n        \n        this.hideManageButton = true\n      },\n      error => {\n        console.log(error)\n        alert('something went wrong')\n      }\n      )\n  }\n\n  sortData(sort: Sort){\n    this.tableSort = { active : sort.active, direction : sort.direction}\n    if(this.tableSort.direction){\n      this.reload()\n    }\n  }\n\n  dateValueChanged(event: MatDatepickerInputEvent<Date>){\n    if(event.targetElement.id == 'from'){\n      this.startDate = formatDate(event.value,'yyyy-MM-dd', this.locale).toString()\n    }else if(event.targetElement.id == 'to'){\n      this.endDate = formatDate(event.value, 'yyyy-MM-dd',this.locale).toString()\n    }else{\n      console.log('invalid target ID')\n    }\n\n  }\n\n  WebSocketTest() {\n\n    if (\"WebSocket\" in window) {\n       // alert(\"WebSocket is supported by your Browser!\");\n        // Let us open a web socket\n\n        this.ws.onopen = function () {\n            // Web Socket is connected, send data using send()\n           // ws.send(\"Message to send\");\n          //  alert(\"Message is sent...\");\n        };\n        this.ws.onmessage = function (evt) {\n            var received_msg = evt.data;\n            console.log(received_msg);\n        };\n        this.ws.onclose = function () {\n            // websocket is closed.\n           // alert(\"Connection is closed...\");\n        };\n    } else {\n\n        // The browser doesn't support WebSocket\n        alert(\"WebSocket NOT supported by your Browser!\");\n    }\n  }\n\n  sampleexcel():void{\n    this.excel.exportAsExcelFile(this.depositList, 'sample')\n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-card class=\\\"card\\\" >\\r\\n    <div *ngIf=\\\"backLoading\\\" class=\\\"loading-shade\\\">\\r\\n      <mat-spinner color=\\\"accent\\\"></mat-spinner>\\r\\n    </div>\\r\\n  \\r\\n    <mat-card-header>\\r\\n      <mat-card-title>Withdraw List</mat-card-title>\\r\\n      <button mat-icon-button \\r\\n              color=\\\"accent\\\" \\r\\n              style=\\\"right:0; top:0; margin-top:10px; position: absolute;\\\" \\r\\n              (click)=\\\"reload()\\\"\\r\\n              matTooltip=\\\"sync\\\"><mat-icon>sync</mat-icon></button>\\r\\n  \\r\\n    </mat-card-header>\\r\\n  \\r\\n    <mat-divider></mat-divider>\\r\\n    <form style=\\\"display: flex; justify-content: flex-end; margin-top: 10px;\\\">\\r\\n      <div style=\\\"max-width: 1500px;\\\">\\r\\n        <button *ngIf=\\\"showBackButton\\\"\\r\\n                mat-flat-button \\r\\n                color=\\\"primary\\\"\\r\\n                style=\\\"margin-right:5px;\\\" \\r\\n                (click)=\\\"reload();\\\"><mat-icon>arrow_back</mat-icon></button>\\r\\n                \\r\\n        <mat-form-field style=\\\"width:120px;\\\">\\r\\n          <input matInput \\r\\n                [matDatepicker]=\\\"fromDate\\\" \\r\\n                placeholder=\\\"From date\\\" \\r\\n                (dateChange)=\\\"dateValueChanged($event)\\\"\\r\\n                id=\\\"from\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"fromDate\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #fromDate></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n  \\r\\n        <mat-form-field style=\\\"width:90px; margin: 5px 5px 0;\\\">\\r\\n          <mat-select [(value)]=\\\"startTime\\\">\\r\\n            <mat-option *ngFor=\\\"let t of timeopts\\\" value=\\\"{{t.value}}\\\">{{t.name}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        \\r\\n        <mat-form-field style=\\\"width:120px;\\\">\\r\\n          <input matInput \\r\\n                [matDatepicker]=\\\"toDate\\\" \\r\\n                placeholder=\\\"To date\\\"\\r\\n                (dateChange)=\\\"dateValueChanged($event)\\\"\\r\\n                id=\\\"to\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"toDate\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #toDate></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n  \\r\\n        <mat-form-field style=\\\"width:90px; margin: 5px 5px 0;\\\">\\r\\n          <mat-select [(value)]=\\\"endTime\\\">\\r\\n            <mat-option *ngFor=\\\"let t of timeopts\\\" value=\\\"{{t.value}}\\\">{{t.name}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n  \\r\\n        <mat-form-field style=\\\"width:90px; margin: 5px 5px 0;\\\">\\r\\n          <input matInput\\r\\n                [(ngModel)]=\\\"searchValue\\\"\\r\\n                [ngModelOptions]=\\\"{standalone: true}\\\" \\r\\n                placeholder=\\\"Screen Name\\\" \\r\\n                id=\\\"from\\\">\\r\\n        </mat-form-field>\\r\\n  \\r\\n        <button mat-button (click)=\\\"searchList()\\\"><mat-icon>search</mat-icon></button>\\r\\n      </div>\\r\\n    </form>\\r\\n    <mat-card-content style=\\\"overflow:auto;\\\" class=\\\"mat-elevation-z6\\\">\\r\\n      <div style=\\\"width:1500px;\\\">\\r\\n        <!-- member list table -->\\r\\n        <table  mat-table matSort \\r\\n                [dataSource]=\\\"withdrawList\\\"\\r\\n                style=\\\"width:100%\\\" \\r\\n                (matSortChange)=\\\"sortData($event)\\\">\\r\\n  \\r\\n          <!-- no. -->\\r\\n          <ng-container matColumnDef=\\\"ID\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>No.</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.ID | number}} </td>\\r\\n          </ng-container>\\r\\n  \\r\\n          <!-- HeadOfficeID  -->\\r\\n          <ng-container matColumnDef=\\\"HeadOfficeID\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"HeadOfficeID\\\">HO ID </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.HeadOfficeID}} </td>\\r\\n          </ng-container>\\r\\n  \\r\\n          <!-- DistributorID  -->\\r\\n          <ng-container matColumnDef=\\\"DistributorID\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"DistributorID\\\">DistributorID </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.DistributorID}} </td>\\r\\n          </ng-container>\\r\\n  \\r\\n          <!-- ShopID -->\\r\\n          <ng-container matColumnDef=\\\"ShopID\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ShopID\\\">ShopID</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.ShopID}} </td>\\r\\n          </ng-container>\\r\\n  \\r\\n          <!--UserName  -->\\r\\n          <ng-container matColumnDef=\\\"PlayerID\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"PlayerID\\\">PlayerID</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.PlayerID}} </td>\\r\\n          </ng-container>\\r\\n  \\r\\n          <!-- ScreenName  -->\\r\\n          <ng-container matColumnDef=\\\"ScreenName\\\" >\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ScreenName\\\">ScreenName </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.ScreenName}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <!-- BankName  -->\\r\\n          <ng-container matColumnDef=\\\"BankName\\\" >\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"BankName\\\">BankName </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.BankName}} </td>\\r\\n          </ng-container>\\r\\n  \\r\\n          <!-- Name -->\\r\\n          <ng-container matColumnDef=\\\"AccountNumber\\\" >\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"AccountNumber\\\">AccountNumber</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.AccountNumber}} </td>\\r\\n          </ng-container>\\r\\n  \\r\\n          <!-- Name -->\\r\\n          <ng-container matColumnDef=\\\"Name\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Name\\\">Name</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.Name}} </td>\\r\\n          </ng-container>\\r\\n  \\r\\n          <!-- ContactNumber -->\\r\\n          <ng-container matColumnDef=\\\"ContactNumber\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ContactNumber\\\">ContactNumber</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.ContactNumber}} </td>\\r\\n          </ng-container>\\r\\n  \\r\\n          <!-- ExistingAmount  -->\\r\\n          <ng-container matColumnDef=\\\"ExistingAmount\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ExistingAmount\\\">ExistingAmount </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.ExistingAmount | number }} </td>\\r\\n          </ng-container>\\r\\n  \\r\\n          <!-- RequestedDateTime -->\\r\\n          <ng-container matColumnDef=\\\"ApplicationAmount\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ApplicationAmount\\\">ApplicationAmount</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.ApplicationAmount | number}} </td>\\r\\n          </ng-container>\\r\\n  \\r\\n          <!-- RemainingAmount  -->\\r\\n          <ng-container matColumnDef=\\\"RemainingAmount\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"RemainingAmount\\\">RemainingAmount </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.RemainingAmount  | number}} </td>\\r\\n          </ng-container>\\r\\n          <!-- ApprovedDateTime  -->\\r\\n          <ng-container matColumnDef=\\\"TransactionStatus\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"TransactionStatus\\\">TransactionStatus </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.TransactionStatus}} </td>\\r\\n          </ng-container>\\r\\n          <!-- ApprovedDateTime  -->\\r\\n          <ng-container matColumnDef=\\\"RequestedDateTime\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"RequestedDateTime\\\">RequestedDateTime </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">{{element.RequestedDateTime  | date : 'medium'}} </td>\\r\\n          </ng-container>\\r\\n  \\r\\n          <!-- ApprovedDateTime  -->\\r\\n          <ng-container matColumnDef=\\\"Management\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef >Management </th>\\r\\n            <td mat-cell *matCellDef=\\\"let e\\\" >\\r\\n              <div [ngClass]=\\\"{'hide': e.TransactionStatus == 'approved'}\\\">\\r\\n                <button mat-flat-button \\r\\n                        color=\\\"accent\\\" \\r\\n                        style=\\\"margin:5px\\\"\\r\\n                        matTooltip=\\\"hold\\\"\\r\\n                        matTooltipPosition=\\\"left\\\"><mat-icon>cancel</mat-icon></button>\\r\\n                <button mat-flat-button \\r\\n                        color=\\\"warn\\\" \\r\\n                        style=\\\"margin:5px\\\"\\r\\n                        matTooltip=\\\"delete\\\"\\r\\n                        matTooltipPosition=\\\"above\\\"><mat-icon>delete_outline</mat-icon></button> \\r\\n                <button mat-flat-button \\r\\n                        color=\\\"primary\\\" \\r\\n                        style=\\\"margin:5px\\\"\\r\\n                        matTooltip=\\\"approved\\\"\\r\\n                        matTooltipPosition=\\\"right\\\"\\r\\n                        (click)=\\\"approvedWithdraw(e.UserTransactionID, e.UserAccountID)\\\"><mat-icon>check</mat-icon></button>\\r\\n              </div> \\r\\n            </td>\\r\\n          </ng-container>\\r\\n  \\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n      </div>\\r\\n  \\r\\n      <div *ngIf=\\\"pageEvent\\\">\\r\\n        <mat-paginator  [length]=\\\"pageEvent.length\\\"\\r\\n                        [pageSize]=\\\"pageEvent.pageSize\\\"\\r\\n                        [pageSizeOptions]=\\\"pageSizeOptions\\\"\\r\\n                        showFirstLastButtons=\\\"true\\\"\\r\\n                        (page)=\\\"pageEvent = $event; reload()\\\"> </mat-paginator>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\"","import { Component, OnInit, Inject, LOCALE_ID } from '@angular/core';\nimport { CommonService } from '../../../services/common/common.service'\nimport { environment } from '../../../../environments/environment.prod';\nimport {PageEvent, Sort} from '@angular/material';\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\nimport { FormsService } from '../../../services/utilities/forms.service'\nimport { formatDate } from '@angular/common';\nimport { MoneytransactionsService } from '../../../services/moneytransactions/moneytransactions.service'\ninterface withdrawModel{\n  ID:number\n  UserTransactionID:string\n  UserAccountID:string\n  HeadOfficeID:string\n  DistributorID:string\n  ShopID:string\n  PlayerID:string\n  ScreenName:string\n  Name:string\n  ContactNumber:string\n  ExistingAmount:string\n  ApplicationAmount:string\n  RemainingAmount:string\n  TransactionStatus:string\n  RequestedDateTime:string\n\n  BankName:string\n  AccountNumber:string\n  AccountHolder:string\n\n}\n@Component({\n  selector: 'app-withdraw-management',\n  templateUrl: './withdraw-management.component.html',\n  styleUrls: ['./withdraw-management.component.css']\n})\nexport class WithdrawManagementComponent implements OnInit {\n  constructor(private commonSrvc:CommonService, \n              private formSrvc:FormsService,\n              private moneyTransactionsSrvc:MoneytransactionsService,\n              @Inject(LOCALE_ID) private locale: string) { }\n\n  //service variables\n    pageIndex:number = 6\n  //table variables\n    withdrawList:withdrawModel[]\n\n    displayedColumns:string[] =[  \n      'ID',\n      'HeadOfficeID',\n      'DistributorID',\n      'ShopID',\n      'PlayerID',\n      'ScreenName',\n      'BankName',\n      'AccountNumber',\n      'Name',\n      'ContactNumber',\n      'ExistingAmount',\n      'ApplicationAmount',\n      'RemainingAmount',\n      'TransactionStatus',\n      'Management',\n      'RequestedDateTime'\n    ]\n\n    tableSort:Sort = {active : 'TransactionStatus', direction : 'desc'}\n\n    // MatPaginator\n      // input\n      pageSizeOptions: number[] = environment.pageSizeOptions;\n\n      // Output\n      pageEvent: PageEvent = { pageIndex : 0, pageSize : environment.pageSizeOptions[0], previousPageIndex : 0, length: 0};\n      \n  //search variables\n    showBackButton:boolean = false\n    backLoading:boolean = true\n    protected continuousHTTPRequest:boolean = true\n\n    timeopts:any[]\n\n    //screean name value\n      searchValue:string = 'player1'\n    // date\n      startDate:string = '2018-12-26';\n      endDate:string = '2019-12-26';\n\n    // time\n      startTime:string =' 00:00:00';\n      endTime:string = ' 23:59:59';\n  //on component variables\n    currentManageButton:number\n    hideManageButton:boolean = true\n\n\n  //lifecycle hooks\n  ngOnInit() {\n    this.timeopts = this.formSrvc.timeOptions\n    this.getListAndPageCount()\n  }\n  ngOnDestroy() {\n    console.log('you leave withdraw list')\n  }\n\n//lifecycle hooks end\n\ngetListAndPageCount(){\n  Promise.all([this.getSupportList(),this.getPageCount()]).then(function() {\n    console.log('get list and page count successful');\n    \n    }, function(){ //if promise or promise2 fail\n    console.log('something went wrong')\n  })\n}\n\ngetSupportList(){\n  let promise = new Promise((resolve,reject) => {\n    this.commonSrvc.getList3( this.pageIndex, \n                              this.pageEvent.pageIndex * this.pageEvent.pageSize, //ofset\n                              this.pageEvent.pageSize, // limit\n                              this.tableSort.active, // order by\n                              this.tableSort.direction)\n    .subscribe(\n      (result :withdrawModel[]) => {\n        console.log(result)\n        if(result.length > 0){\n          //set artificial index\n          let row_number_new = 0\n          for(let i = 0; i <= result.length - 1; i++){\n            row_number_new += 1;\n            result[i].ID = row_number_new\n          }\n\n          this.withdrawList = result\n          this.backLoading = false\n        }else{\n          console.log('no result')\n        }\n\n        resolve()\n      },\n      error => {\n        console.log(error)\n        reject()\n      }\n    )\n\n  })\n\n  return promise;\n}\n\ngetPageCount(){\n  let promise = new Promise ((resolve,reject) => {\n    this.commonSrvc.getPageCount(this.pageIndex)\n    .subscribe(\n      (result) => {\n        this.pageEvent.length = result[0]['ID']\n        resolve()\n      },\n        error => {\n          console.log('key ' + localStorage.getItem(environment.tokenStorageKey));\n          console.log(error);\n          reject()\n        }\n    )\n  })\n  return promise;\n}\n\n  searchList(event){\n    event.preventDefault();\n    let target = event.target;\n                \n    let column = target.querySelector('#column').value\n    let value = (target.querySelector('#value').value) ? target.querySelector('#value').value : environment.ifSearchVariableEmpty\n\n    this.commonSrvc.searchList(this.pageIndex,column,value)\n    .subscribe(\n      (result:withdrawModel[]) => {\n        if(result.length > 0){\n          \n          this.withdrawList = result\n          console.log('results found')\n        }\n      },\n      error => {\n        if(error['statusText'] == 'Not Found'){\n          //empty list\n          this.withdrawList = []\n        }\n      }\n    )\n  }\n\n  approvedWithdraw(UserTransactionID, UserAccountID){\n    this.hideManageButton = false\n\n    this.moneyTransactionsSrvc.approveWithdraw(UserTransactionID,UserAccountID)\n      .subscribe(\n        (res) => {\n          console.log(res)\n          this.hideManageButton = true\n          this.reload()\n        }\n      )\n  }\n\n  reload(){\n    this.backLoading = true\n    this.getListAndPageCount()\n\n  }\n\n  sortData(sort: Sort){\n    this.tableSort = { active : sort.active, direction : sort.direction}\n    if(this.tableSort.direction){\n      this.reload()\n    }\n  }\n\n  dateValueChanged(event: MatDatepickerInputEvent<Date>){\n    if(event.targetElement.id == 'from'){\n      this.startDate = formatDate(event.value,'yyyy-MM-dd', this.locale).toString()\n    }else if(event.targetElement.id == 'to'){\n      this.endDate = formatDate(event.value, 'yyyy-MM-dd',this.locale).toString()\n    }else{\n      console.log('invalid target ID')\n    }\n\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<mat-card class=\\\"card\\\">\\n  <div *ngIf=\\\"backLoading\\\" class=\\\"loading-shade\\\">\\n    <mat-spinner color=\\\"accent\\\"></mat-spinner>\\n  </div>\\n\\n  <mat-card-header>\\n    <mat-card-title>Game log</mat-card-title>\\n    <button mat-icon-button \\n            color=\\\"accent\\\" \\n            style=\\\"right:0; top:0; margin-top:10px; position: absolute;\\\" \\n            (click)=\\\"getListAndPageCount()\\\"\\n            matTooltip=\\\"sync\\\"><mat-icon>sync</mat-icon></button>\\n  </mat-card-header>\\n  \\n  <mat-divider></mat-divider>\\n\\n  <!-- search form -->\\n  <form [formGroup]=\\\"searchForm\\\" style=\\\"display: flex; justify-content: flex-end; margin-top: 10px;\\\">\\n    <div>\\n      <!-- <mat-form-field appearance=\\\"standard\\\" style=\\\"margin-right:5px;\\\">\\n        <mat-select placeholder=\\\"search in\\\" formControlName=\\\"option\\\" disabled=\\\"true\\\">\\n          <mat-option value=\\\"primary\\\">Primary</mat-option>\\n          <mat-option value=\\\"accent\\\">Accent</mat-option>\\n          <mat-option value=\\\"warn\\\">Warn</mat-option>\\n        </mat-select>\\n      </mat-form-field> -->\\n  \\n      <mat-form-field appearance=\\\"standard\\\">\\n        <mat-label><mat-icon>search</mat-icon>Screen Name</mat-label>\\n        <input  matInput \\n                placeholder=\\\"ScreenName\\\" \\n                formControlName=\\\"value\\\"\\n                [(ngModel)]=\\\"searchValue\\\">\\n        <button *ngIf=\\\"searchValue\\\" \\n                matSuffix \\n                mat-icon-button \\n                color=\\\"accent\\\"\\n                (click)=\\\"searchList()\\\"><mat-icon>search</mat-icon></button>\\n      </mat-form-field>\\n    </div>\\n  </form>\\n\\n  <mat-card-content style=\\\"overflow:auto;\\\" class=\\\"mat-elevation-z6\\\" >\\n    <!-- game log table -->\\n    <table  mat-table \\n            matSort\\n            [dataSource]=\\\"gameLogList\\\" \\n            style=\\\"width : 100%\\\"\\n            (matSortChange)=\\\"sortData($event)\\\">\\n            \\n      <ng-container matColumnDef=\\\"row_number\\\">\\n        <th mat-header-cell *matHeaderCellDef>No.</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.row_number}} </td>\\n      </ng-container>\\n    \\n      <ng-container matColumnDef=\\\"ScreenName\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ScreenName\\\">Screen Name</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.ScreenName}} </td>\\n      </ng-container>\\n    \\n      <ng-container matColumnDef=\\\"DateTime\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"DateTime\\\">Date &amp; Time</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.DateTime |date : 'medium'}} </td>\\n      </ng-container>\\n    \\n      <ng-container matColumnDef=\\\"GameType\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"GameType\\\">Game</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.GameType}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Rank\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Rank\\\">Rank</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Rank}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"BeforePoints\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"BeforePoints\\\">Before Amount</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.BeforePoints | number}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"WinPoints\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"WinPoints\\\">Won Amount</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.WinPoints | number}} </td>\\n      </ng-container>\\n      \\n      <ng-container matColumnDef=\\\"AfterPoints\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"AfterPoints\\\">After Amount</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.AfterPoints | number}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"HandHistory\\\">\\n        <th mat-header-cell *matHeaderCellDef>HandHistory</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          <button mat-flat-button color=\\\"primary\\\" (click)=\\\"getHandHistory(element.SeasonID)\\\">details</button>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Status\\\">\\n        <th mat-header-cell *matHeaderCellDef>Status</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> 0 </td>\\n      </ng-container>\\n    \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n    </table>\\n\\n    <div *ngIf=\\\"pageEvent\\\">\\n        <mat-paginator  [length]=\\\"pageEvent.length\\\"\\n                        [pageSize]=\\\"pageEvent.pageSize\\\"\\n                        [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n                        showFirstLastButtons=\\\"true\\\"\\n                        (page)=\\\"pageEvent = $event; backLoading = true\\\"> </mat-paginator>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\\n\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {MatBottomSheet, MatDialog, MatDialogRef, MAT_DIALOG_DATA, Sort} from '@angular/material';\nimport { GameLogService } from '../../../services/log/gameLog/game-log.service';\nimport { CommonService } from '../../../services/common/common.service'\nimport { environment } from '../../../../environments/environment.prod';\nimport {PageEvent} from '@angular/material';\nimport {GameLogListModel} from '../../../interfaces/GameLogListModel'\nimport {HandHistoryModel} from '../../../interfaces/HandHistoryModel'\n\n\n@Component({\n  selector: 'app-game-log',\n  templateUrl: './game-log.component.html',\n  styleUrls: ['./game-log.component.css']\n})\nexport class GameLogComponent implements OnInit {\n  \n  //service variables\n    pageIndex:number = 2\n  //table variables\n    gameLogList : GameLogListModel[]\n    currenHandHistory : HandHistoryModel[]\n    currentGameNo : string\n    displayedColumns:string[] =[  'row_number',\n                                  'ScreenName',\n                                  'DateTime',\n                                  'GameType',\n                                  'Rank',\n                                  'BeforePoints',\n                                  'WinPoints',\n                                  'AfterPoints',\n                                  'HandHistory',\n                                  'Status'\n                                ]\n  //angular material search variables\n    searchForm:FormGroup;\n    searchValue:string;\n\n    tableSort:Sort = {active : 'DateTime', direction : 'desc'}\n  // MatPaginator Inputs\n    pageSizeOptions: number[] = environment.pageSizeOptions;\n  \n    // MatPaginator Output\n    pageEvent: PageEvent = { pageIndex : 0, pageSize : environment.pageSizeOptions[0], previousPageIndex : 0, length: 0};\n\n  //search variables\n    backLoading:boolean = true\n\n  constructor(private commonSrvc:CommonService, \n              private gameLogSrvc:GameLogService, \n              fb:FormBuilder,\n              private bottomsheet:MatBottomSheet,\n              public dialog: MatDialog) { \n\n      this.searchForm = fb.group({\n        value: null\n      });\n    \n  }\n  //lifecycle hooks\n    ngOnInit() {\n      this.getListAndPageCount()\n    }\n    ngOnDestroy() {\n      console.log('you leave game log')\n    }\n  //lifecycle hooks end\n\n  getListAndPageCount(){\n    Promise.all([this.getGameLogList(),this.getPageCount()]).then(function() {\n      console.log('get list and page count successful');\n      }, function(){ //if promise or promise2 fail\n      console.log('something went wrong')\n    })\n  }\n\n  getGameLogList(){\n    let promise = new Promise((resolve,reject) => {\n      this.commonSrvc.getList3(this.pageIndex, this.pageEvent.pageIndex * this.pageEvent.pageSize, this.pageEvent.pageSize, this.tableSort.active, this.tableSort.direction)\n      .subscribe(\n        (result :GameLogListModel[]) => {\n          \n          //show No results found if 0 result else dont show\n          if(result.length > 0){\n            //set artificial index\n            let row_number_new = this.pageEvent.pageIndex * this.pageEvent.pageSize\n            for(let i = 0; i < result.length; i++){\n              row_number_new += 1;\n              result[i].row_number = row_number_new\n            }\n            //set artificial index end\n            this.gameLogList = result\n            this.backLoading = false\n          }else{\n\n          }\n          resolve()\n        },\n        error => {\n          console.log(error)\n          reject()\n        }\n      )\n\n    })\n\n    return promise;\n  }\n\n  getPageCount(){\n    let promise = new Promise ((resolve,reject) => {\n      this.commonSrvc.getPageCount(this.pageIndex)\n      .subscribe(\n        (result) => {\n          this.pageEvent.length = result[0]['ID']\n          resolve()\n        },\n          error => {\n            console.log('key ' + localStorage.getItem(environment.tokenStorageKey));\n            console.log(error);\n            reject()\n          }\n      )\n    })\n    return promise;\n  }\n\n\n\n  //hand history\n  getHandHistory(seasonID:string){\n\n    this.currentGameNo = seasonID\n    this.gameLogSrvc.getHandHistory(seasonID)\n    .subscribe(\n      (result : HandHistoryModel[]) => {\n        \n        const handHistoryDialog = this.dialog.open(HandHistoryDialog, {\n          width: '50%',\n          data : result\n        });\n    \n        handHistoryDialog.afterClosed().subscribe(\n          () =>{\n            console.log('handhistory closed')\n          }\n        )\n        this.currenHandHistory = result\n       },\n     error => {\n         console.log(error['status'])\n       }\n     )\n  }\n\n\n  searchList(){\n    this.commonSrvc.searchList(this.pageIndex,'ScreenName',this.searchValue)\n    .subscribe(\n      (result:GameLogListModel[]) => {\n        \n        //if there's result\n        if(result.length > 0){\n          this.gameLogList = result\n\n          console.log('results found')\n        }else{\n          console.log('no results found')\n        }\n      },\n      error => {\n        if(error['statusText'] == 'Not Found'){\n          this.openSearchNoResultFound()\n\n          //empty list\n          this.gameLogList = []\n        }\n      }\n    )\n  }\n\n  openSearchNoResultFound(){\n    this.bottomsheet.open(NoResultBottomSheet).afterDismissed().subscribe(\n      () => { \n          this.reload()\n          this.searchValue = null;\n        }\n    ) \n  }\n\n  reload(){\n    this.backLoading = true\n    this.getListAndPageCount()\n  }\n\n  sortData(sort: Sort){\n    this.tableSort = { active : sort.active, direction : sort.direction}\n    if(this.tableSort.direction){\n      this.reload()\n    }\n  }\n\n}\n@Component({\n  selector: 'no-result-bottom-sheet',\n  templateUrl: 'no-result-bottom-sheet.html',\n})\nexport class NoResultBottomSheet {\n  constructor() {}\n}\n\n@Component({\n  selector: 'hand-history-dialog',\n  templateUrl: 'hand-history-dialog.html',\n})\nexport class HandHistoryDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<HandHistoryDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: HandHistoryModel[]) {}\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n}","module.exports = \"<h1 mat-dialog-title>hand history</h1>\\r\\n<mat-divider></mat-divider>\\r\\n<div mat-dialog-content>\\r\\n  <mat-nav-list>\\r\\n    <mat-list-item *ngFor=\\\"let d of data\\\">\\r\\n      {{d.MoveHand}}\\r\\n      {{d.HandAmount | number}}\\r\\n      {{d.HandDateTime | date : 'medium'}}\\r\\n    </mat-list-item>\\r\\n  </mat-nav-list>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-raised-button\\r\\n          color=\\\"accent\\\"\\r\\n          style=\\\"width: 100%\\\"  \\r\\n          (click)=\\\"close()\\\">Ok</button>\\r\\n</div>\"","module.exports = \"<p style=\\\"text-align: center;\\\">\\r\\n    <mat-icon color=\\\"warn\\\">warning</mat-icon>\\r\\n    <br>\\r\\n    <br>\\r\\n    <strong style=\\\"font-size: 50px;\\\">no results found</strong>\\r\\n</p>\"","module.exports = \"\"","module.exports = \"<p>\\n  jackpot-log works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-jackpot-log',\n  templateUrl: './jackpot-log.component.html',\n  styleUrls: ['./jackpot-log.component.css']\n})\nexport class JackpotLogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>pending... waiting for the game...</p>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-point-log',\n  templateUrl: './point-log.component.html',\n  styleUrls: ['./point-log.component.css']\n})\nexport class PointLogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-card class=\\\"card\\\" >\\n    <div *ngIf=\\\"backLoading\\\" class=\\\"loading-shade\\\">\\n      <mat-spinner color=\\\"accent\\\"></mat-spinner>\\n    </div>\\n  \\n    <mat-card-header>\\n      <mat-card-title>Transfer log</mat-card-title>\\n      <button mat-icon-button \\n              color=\\\"accent\\\" \\n              style=\\\"right:0; top:0; margin-top:10px; position: absolute\\\" \\n              (click)=\\\"reload()\\\"\\n              matTooltip=\\\"sync\\\"><mat-icon>sync</mat-icon></button>\\n    </mat-card-header>\\n  \\n    <mat-divider></mat-divider>\\n\\n    <form [formGroup]=\\\"searchForm\\\" style=\\\"display: flex; justify-content: flex-end; margin-top: 10px;\\\">\\n      <div >\\n        <mat-form-field style=\\\"width:120px;\\\">\\n          <input matInput \\n                [matDatepicker]=\\\"fromDate\\\" \\n                placeholder=\\\"From date\\\" \\n                (dateInput)=\\\"dateValue($event)\\\" \\n                (dateChange)=\\\"dateValue($event)\\\"\\n                id=\\\"from\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"fromDate\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #fromDate></mat-datepicker>\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width:90px; margin: 5px 5px 0;\\\">\\n          <mat-select [(value)]=\\\"fromTimeValue\\\">\\n            <mat-option *ngFor=\\\"let t of timeopts\\\" value=\\\"{{t.value}}\\\">{{t.name}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        \\n        <mat-form-field style=\\\"width:120px;\\\">\\n          <input matInput \\n                [matDatepicker]=\\\"toDate\\\" \\n                placeholder=\\\"To date\\\"\\n                (dateInput)=\\\"dateValue($event)\\\" \\n                (dateChange)=\\\"dateValue($event)\\\"\\n                id=\\\"to\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"toDate\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #toDate></mat-datepicker>\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width:90px; margin: 5px 5px 0;\\\">\\n          <mat-select [(value)]=\\\"toTimeValue\\\">\\n            <mat-option *ngFor=\\\"let t of timeopts\\\" value=\\\"{{t.value}}\\\">{{t.name}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field style=\\\"width:90px; margin: 5px 5px 0;\\\">\\n          <mat-select [(value)]=\\\"columnValue\\\">\\n            <mat-option *ngFor=\\\"let t of columnOptions\\\" value=\\\"{{t.value}}\\\">{{t.name}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"input here...\\\" \\n                 formControlName=\\\"value\\\"\\n                 [(ngModel)]=\\\"searchValue\\\">\\n          <button *ngIf=\\\"searchValue\\\" \\n                  matSuffix \\n                  mat-icon-button \\n                  color=\\\"accent\\\"\\n                  (click)=\\\"searchList()\\\"><mat-icon>search</mat-icon></button>\\n        </mat-form-field>\\n      </div>\\n    </form>\\n    <mat-card-content style=\\\"overflow:auto;\\\" class=\\\"mat-elevation-z6\\\">\\n\\n      <!-- game log table -->\\n      <table  mat-table matSort \\n              [dataSource]=\\\"transferHistoryList\\\" \\n              style=\\\"width : 100%;\\\"\\n              (matSortChange)=\\\"sortData($event)\\\" >\\n\\n        <ng-container matColumnDef=\\\"row_number\\\">\\n          <th mat-header-cell *matHeaderCellDef >No.</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\" >{{element.row_number}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"USender\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"USender\\\">Sender ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.USender}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Sender\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Sender\\\">Sender screen name</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.Sender}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"UReceiver\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"UReceiver\\\">Receiver ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.UReceiver}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Receiver\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Receiver\\\">Receiver screen name</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.Receiver}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Amount\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Amount\\\">Amount</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.Amount | number}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"BalanceAfterTransfer\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"BalanceAfterTransfer\\\">Balance(after transfer)</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.BalanceAfterTransfer | number}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"Reason\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Reason\\\">Reason</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.Reason}} </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"TransferedDateTime\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"TransferedDateTime\\\">Date</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.TransferedDateTime | date : 'medium'}} </td>\\n        </ng-container>\\n      \\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      </table>\\n  \\n      <div *ngIf=\\\"pageEvent\\\">\\n          <mat-paginator  [length]=\\\"pageEvent.length\\\"\\n                          [pageSize]=\\\"pageEvent.pageSize\\\"\\n                          [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n                          showFirstLastButtons=\\\"true\\\"\\n                          (page)=\\\"pageEvent = $event; reload()\\\"> </mat-paginator>\\n      </div>\\n    </mat-card-content>\\n  </mat-card>\\n  \\n  \"","import { Component, OnInit,Inject,LOCALE_ID } from '@angular/core';\nimport { TransferHistoryModel } from '../../../interfaces/TransferHistoryModel'\nimport { CommonService } from '../../../services/common/common.service'\nimport { environment } from '../../../../environments/environment.prod';\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {OptionModel} from '../../../interfaces/OptionModel'\nimport { formatDate } from '@angular/common';\nimport {MatBottomSheet, PageEvent, Sort} from '@angular/material';\nimport { FormsService } from '../../../services/utilities/forms.service'\nimport { NoResultBottomSheet2 } from '../../../utilities/NoResultBottomSheet/NoResultBottomSheet2'\n\n@Component({\n  selector: 'app-transfer-log',\n  templateUrl: './transfer-log.component.html',\n  styleUrls: ['./transfer-log.component.css']\n})\nexport class TransferLogComponent implements OnInit {\n\n  constructor(private commonSrvc:CommonService,\n              fb:FormBuilder,\n              private bottomsheet:MatBottomSheet,\n              private formSrvc:FormsService,\n              @Inject(LOCALE_ID) private locale: string) { \n\n    this.searchForm = fb.group({\n      value: null\n    });  \n\n  }\n  //service variables\n  pageIndex:number = 8\n  //table variables\n    transferHistoryList:TransferHistoryModel[]\n    displayedColumns:string[] =[  \n      'row_number',\n      'USender',\n      'Sender',\n      'UReceiver',\n      'Receiver',\n      'Amount',\n      'BalanceAfterTransfer',\n      'Reason',\n      'TransferedDateTime'\n    ]\n\n    tableSort:Sort = {active : 'TransferedDateTime', direction : 'desc'}\n  // MatPaginator\n    // input\n    pageSizeOptions: number[] = environment.pageSizeOptions;\n\n    // Output\n    pageEvent: PageEvent = { pageIndex : 0, pageSize : environment.pageSizeOptions[0], previousPageIndex : 0, length: 0};\n\n  //angular material search variables\n    searchForm:FormGroup;\n    searchValue:string;\n\n  //search variables\n    backLoading:boolean = true\n    timeopts:any[]\n\n    fromTimeValue:string;\n    toTimeValue:string;\n\n    columnOptions:OptionModel[]= [\n      {value : '0', name : 'Sent UserName'}, //USender\n      {value : '1', name : 'Sent ScreenName'}, //Sender\n      {value : '2', name : 'Received UserName'}, //UReceiver\n      {value : '3', name : 'Received Screen Name'} //Receiver\n    ]\n\n    columnValue:string = '0'\n\n    fromDateValue:string\n    toDateValue:string\n\n\n  //lifecycle hooks\n    ngOnInit() {\n      this.timeopts = this.formSrvc.timeOptions\n      this.getListAndPageCount()\n    }\n    ngOnDestroy() {\n      console.log('you leave transfer log')\n    }\n\n  //lifecycle hooks end\n\n\n  getListAndPageCount(){\n    Promise.all([this.getSupportList(),this.getPageCount()]).then(function() {\n      console.log('get list and page count successful');\n      }, function(){ //if promise or promise2 fail\n      console.log('something went wrong')\n    })\n  }\n\n  getSupportList(){\n    let promise = new Promise((resolve,reject) => {\n      this.commonSrvc.getList3(this.pageIndex, this.pageEvent.pageIndex * this.pageEvent.pageSize, this.pageEvent.pageSize, this.tableSort.active, this.tableSort.direction)\n      .subscribe(\n        (result :TransferHistoryModel[]) => {\n          //show No results found if 0 result else dont show\n          if(result.length > 0){\n            //set artificial index\n              let row_number_new = this.pageEvent.pageIndex * this.pageEvent.pageSize\n              for(let i = 0; i <= result.length - 1; i++){\n                row_number_new += 1;\n                result[i].row_number = row_number_new\n              }\n            //set artificial index end\n            this.transferHistoryList = result\n            this.backLoading = false\n          }else{\n          }\n          resolve()\n        },\n        error => {\n          console.log(error)\n          reject()\n        }\n      )\n\n    })\n\n    return promise;\n  }\n\n  getPageCount(){\n    let promise = new Promise ((resolve,reject) => {\n      this.commonSrvc.getPageCount(this.pageIndex)\n      .subscribe(\n        (result) => {\n          this.pageEvent.length = result[0]['ID']\n          resolve()\n        },\n          error => {\n            console.log('key ' + localStorage.getItem(environment.tokenStorageKey));\n            console.log(error);\n            reject()\n          }\n      )\n    })\n    return promise;\n  }\n\n  searchList(){\n    this.commonSrvc.searchListWithDate(this.pageIndex,this.columnValue,this.searchValue,this.fromDateValue + this.fromTimeValue,this.toDateValue + this.toTimeValue)\n    .subscribe(\n      (result:TransferHistoryModel[]) => {\n        console.log(result)\n        //if there's result\n        if(result.length > 0){\n          this.transferHistoryList = result\n\n          console.log('results found')\n        }else{\n          console.log('no results found')\n        }\n      },\n      error => {\n        if(error['statusText'] == 'Not Found'){\n          //empty list\n          this.transferHistoryList = []\n\n          this.openSearchNoResultFound()\n        }\n      }\n    )\n  }\n\n  // reload() is called after the bottomsheet \"no results found\" is dismissed\n  reload(){\n    this.backLoading = true\n    this.getListAndPageCount()\n  }\n\n  sortData(sort: Sort){\n    this.tableSort = { active : sort.active, direction : sort.direction}\n    if(this.tableSort.direction){\n      this.reload()\n\n    }\n  }\n\n  dateValue(event: MatDatepickerInputEvent<Date>){\n\n    if(event.targetElement.id == 'from'){\n      // console.log(formatDate(event.value,'yyyy-MM-dd', this.locale))\n      this.fromDateValue = formatDate(event.value,'yyyy-MM-dd', this.locale)\n\t\t\tconsole.log('​TransferLogComponent -> dateValue -> fromDateValue', this.fromDateValue)\n    }else if(event.targetElement.id == 'to'){\n      this.toDateValue = formatDate(event.value, 'yyyy-MM-dd',this.locale)\n\t\t\tconsole.log('​TransferLogComponent -> dateValue -> toDateValue', this.toDateValue)\n    }else{\n      console.log('invalid target ID')\n    }\n\n  }\n  \n  openSearchNoResultFound(){\n    this.bottomsheet.open(NoResultBottomSheet2,{\n      data : {  value : this.searchValue, \n                column : this.columnValue, \n                fromDate : this.fromDateValue,\n                fromTime : this.fromTimeValue,\n                toDate : this.toDateValue,\n                toTime : this.toTimeValue \n              }\n    })\n      .afterDismissed().subscribe(\n        () => { \n            console.log('dismissed');\n            this.reload()\n            this.searchValue = null;\n          }\n      ) \n  }\n\n}\n","module.exports = \".middle{\\r\\n    position:absolute;\\r\\n    top:50%;\\r\\n    left:50%;\\r\\n    -webkit-transform:translate(-50%,-50%);\\r\\n            transform:translate(-50%,-50%);\\r\\n    -ms-transform:translate(-50%,-50%)\\r\\n}\\r\\n\\r\\n.center{\\r\\n    display:inline-block;\\r\\n    width:auto;\\r\\n}\\r\\n\\r\\n.logincard{\\r\\n    background-color: rgba(255, 255, 255, 0.932); \\r\\n    padding:10px; \\r\\n    border-radius: 2%; \\r\\n    width: 390px;\\r\\n}\\r\\n\\r\\nmat-form-field{\\r\\n    width: 100%\\r\\n}\"","module.exports = \"<!-- <img src=\\\"../../../assets//bg_CreateRoom.jpg\\\" style=\\\"position: relative;\\\"> -->\\r\\n\\r\\n<div class=\\\"middle\\\" style=\\\"width:40%;\\\">\\r\\n  <div style=\\\"display:flex; justify-content: center\\\">\\r\\n    <img src=\\\"../../../assets//DreamLogo.png\\\" style=\\\"padding:10px;\\\">\\r\\n  </div>\\r\\n  <div style=\\\"display:flex; justify-content: center;\\\">\\r\\n    <div class=\\\"logincard\\\">\\r\\n      <p style=\\\"text-align: center\\\">\\r\\n        <strong *ngIf=\\\"!isCredentialsvalid\\\" style=\\\"color:red\\\">wrong username or password</strong>\\r\\n      </p>\\r\\n      <p>\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>username</mat-label>\\r\\n          <input matInput [(ngModel)]=\\\"username\\\">\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>password</mat-label>\\r\\n          <input  matInput \\r\\n                  type=\\\"password\\\" \\r\\n                  [(ngModel)]=\\\"password\\\"\\r\\n                  [type]=\\\"hidePassword ? 'password' : 'text'\\\">\\r\\n                  <mat-icon matSuffix (click)=\\\"hidePassword = !hidePassword\\\">{{hidePassword ? 'visibility_off' : 'visibility'}}</mat-icon>\\r\\n        </mat-form-field>\\r\\n      </p>\\r\\n      <p>\\r\\n        <button mat-raised-button \\r\\n                style=\\\"width: 100%\\\" \\r\\n                color=\\\"primary\\\"\\r\\n                (click)=\\\"login()\\\">login</button>\\r\\n      </p>\\r\\n\\r\\n      <div *ngIf=\\\"productionMode\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-label>choose server:</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"server\\\">\\r\\n            <mat-option *ngFor=\\\"let s of serverMode\\\" [value]=\\\"s.value\\\">{{s.name}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      \\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { UserAuthService } from '../../services/UserAuth/user-auth.service'\nimport { Router } from '@angular/router';\nimport { environment } from '../../../environments/environment.prod';\nimport { OptionModel } from '../../interfaces/OptionModel'\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  protected username:string = 'user20'\n  protected password:string = 'user20'\n  protected hidePassword:boolean = true\n  protected isCredentialsvalid = true\n  // production variables\n    protected productionMode:boolean\n    protected server:string = 'https://tester-holdem-server.4b63.pro-ap-southeast-2.openshiftapps.com'\n    protected serverMode:OptionModel[] =[\n    { value:'https://tester-holdem-server.4b63.pro-ap-southeast-2.openshiftapps.com', name:'remote'},\n    { value:'http://192.168.254.100:8080', name:'localhost-100'},\n    { value:'http://192.168.254.101:8080', name:'localhost-101'},\n    { value:'http://192.168.254.102:8080', name:'localhost-102'},\n    { value:'http://192.168.254.103:8080', name:'localhost-103'},\n    { value:'http://192.168.254.104:8080', name:'localhost-104'},\n    { value:'http://192.168.254.105:8080', name:'localhost-105'},\n    { value:'http://192.168.254.106:8080', name:'localhost-106'},\n    { value:'http://192.168.254.107:8080', name:'localhost-107'},\n    { value:'http://192.168.254.108:8080', name:'localhost-108'},\n    { value:'http://192.168.254.109:8080', name:'localhost-109'},\n    { value:'http://192.168.254.110:8080', name:'localhost-110'},\n  ]\n\n  constructor(private userAuthSrvc: UserAuthService, private router:Router) {\n    this.productionMode = environment.production\n  }\n\n  ngOnInit() {\n    if(environment.koreanStartUp){\n      localStorage.setItem('language','korean')\n    }else{\n      localStorage.setItem('language','english')\n    }\n    console.log('this should be empty/null : ' + localStorage.getItem(environment.tokenStorageKey))\n  }\n\n  login(){\n    this.userAuthSrvc.server = this.server\n\n    this.userAuthSrvc.login(this.username, this.password)\n      .subscribe( \n        res => {\n          console.log('login return : ' + JSON.stringify(res))\n\n          this.userAuthSrvc.storeToken(res['token'])\n          this.router.navigate(['/admin'])\n        },\n        error => {\n        console.log('error' + error)\n        this.isCredentialsvalid = false\n        this.userAuthSrvc.setLoggedIn(false)\n        localStorage.clear()\n        }\n      )\n  }\n\n  printUserToken(){\n    console.log(localStorage.getItem(environment.tokenStorageKey))\n  }\n\n  clearToken(){\n    localStorage.clear();\n  }\n}\n","module.exports = \"\\r\\n/* If the screen size is 601px wide or more, set the font-size of <div> to 80px */\\r\\n@media screen and (min-width: 1025px) {\\r\\n    a.sideNavButtonLinks {\\r\\n      font-size: 20px;\\r\\n    }\\r\\n\\r\\n    .matside{\\r\\n        width: 17%;\\r\\n    }\\r\\n  }\\r\\n/* If the screen size is 1023px wide or less, set the font-size of <div> to 30px */\\r\\n@media screen and (max-width: 1024px) {\\r\\n    a.sideNavButtonLinks {\\r\\n        font-size: 23px;\\r\\n    }\\r\\n\\r\\n    .matside{\\r\\n        width: 23%;\\r\\n    }\\r\\n}\\r\\n.matside{\\r\\n    height: 100%;\\r\\n}\\r\\n.sidepanelButton{\\r\\n    width:100%;\\r\\n    text-align : left;\\r\\n    font-size: 20px;\\r\\n}\\r\\n.sideNavButtonLinks{\\r\\n    text-decoration: none;\\r\\n    text-align: left;\\r\\n    width: 100%;\\r\\n}\\r\\n.sideNavButtonLinkActive{\\r\\n    text-decoration: none;\\r\\n    color:blue;\\r\\n}\\r\\n.sideNavBottomStats{\\r\\n    font-size:15px; \\r\\n    margin:auto;\\r\\n}\\r\\n.sideNavLogo{\\r\\n    width:55%; \\r\\n    display: block; \\r\\n    margin-left: auto; \\r\\n    margin-right: auto; \\r\\n    margin-top: 15px;\\r\\n}\\r\\n.logout {\\r\\n    padding: 0 14px;\\r\\n}\\r\\n.spacer {\\r\\n    flex: 1 1 auto;\\r\\n}\\r\\n.example-container {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n}\\r\\n.expansion-title{\\r\\n    margin-top: auto; \\r\\n    margin-bottom: auto\\r\\n}\\r\\n.overlay {\\r\\n    position: fixed;\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    top: 0;\\r\\n    right: 0;\\r\\n    left:0;\\r\\n    bottom: 0;\\r\\n    /* background-color: rgba(0,0,0,0.5); */\\r\\n    z-index: 3;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n.overlaycontent{\\r\\n    position: absolute;\\r\\n    z-index: 4;\\r\\n    top: 60px;\\r\\n    right: 50px;\\r\\n    font-size: 50px;\\r\\n    color: white;\\r\\n    /* transform: translate(-50%,-50%);\\r\\n    -ms-transform: translate(-50%,-50%); */\\r\\n  }\\r\\n\"","module.exports = \"<div [ngClass]=\\\"{'dark-theme': nightMode, 'light-theme' : nightMode}\\\">\\n\\n  <mat-sidenav-container class=\\\"example-container\\\">\\n    <mat-sidenav #sidenav mode=\\\"side\\\" opened class=\\\"matside\\\">\\n      <a routerLink=\\\"/admin\\\">\\n      <img class=\\\"sideNavLogo\\\" src=\\\"../../../assets//DreamLogo.png\\\" >\\n      </a>\\n      <p style=\\\"text-align: center\\\">\\n      <strong>\\n      {{user?.AccountType}}\\n      </strong>\\n      </p>\\n      <!-- dropdowns -->\\n      <mat-accordion>\\n        <!-- sales -->\\n        <mat-expansion-panel  (opened)=\\\"panelOpenState = true\\\"\\n                              (closed)=\\\"panelOpenState = false\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              <mat-icon>home</mat-icon>&nbsp;<span class=\\\"expansion-title\\\">Sales</span>\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n\\n          <div *ngFor=\\\"let s of SalesLinks\\\">\\n            <a mat-button class=\\\"sideNavButtonLinks\\\" [routerLink]=\\\"s.link\\\" routerLinkActive=\\\"accent\\\">{{s.title}}</a>\\n          </div>\\n        </mat-expansion-panel>\\n        <!-- sales end -->\\n\\n        <!-- Calculate Management -->\\n        <mat-expansion-panel  (opened)=\\\"panelOpenState = true\\\"\\n                              (closed)=\\\"panelOpenState = false\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              <mat-icon>credit_card</mat-icon>&nbsp;<span class=\\\"expansion-title\\\">Calculate Management</span> \\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n\\n          <div *ngFor=\\\"let c of CalculateLinks\\\">\\n            <a mat-button class=\\\"sideNavButtonLinks\\\" [routerLink]=\\\"c.link\\\" routerLinkActive=\\\"primary\\\">{{c.title}}</a>\\n          </div>\\n        </mat-expansion-panel>\\n        <!-- Calculate Management end -->\\n\\n        <!-- User -->\\n        <mat-expansion-panel  (opened)=\\\"panelOpenState = true\\\"\\n                              (closed)=\\\"panelOpenState = false\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              <mat-icon>person</mat-icon>&nbsp;<span class=\\\"expansion-title\\\">User</span> \\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n\\n          <div *ngFor=\\\"let u of UserLinks\\\">\\n            <a mat-button class=\\\"sideNavButtonLinks\\\" [routerLink]=\\\"u.link\\\" routerLinkActive=\\\"primary\\\">{{u.title}}</a>\\n          </div>\\n        </mat-expansion-panel>\\n        <!-- User end -->\\n\\n        <!-- Deposit And Withdraw -->\\n        <mat-expansion-panel  (opened)=\\\"panelOpenState = true\\\"\\n                              (closed)=\\\"panelOpenState = false\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n                <mat-icon>money</mat-icon>&nbsp;<span class=\\\"expansion-title\\\">Deposit &amp; Withdraw</span>\\n            </mat-panel-title>\\n                \\n          </mat-expansion-panel-header>\\n\\n          <div *ngFor=\\\"let dw of DepositWithdrawLinks\\\">\\n            <a mat-button class=\\\"sideNavButtonLinks\\\" [routerLink]=\\\"dw.link\\\" routerLinkActive=\\\"primary\\\">{{dw.title}}</a>\\n          </div>\\n        </mat-expansion-panel>\\n        <!-- Deposit And Withdraw end -->\\n\\n        <!-- Notice -->\\n        <mat-expansion-panel  (opened)=\\\"panelOpenState = true\\\"\\n                              (closed)=\\\"panelOpenState = false\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              <mat-icon>add_alert</mat-icon>&nbsp;<span class=\\\"expansion-title\\\">Notice</span>\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n\\n          <div *ngFor=\\\"let n of NoticeLinks\\\">\\n            <a mat-button class=\\\"sideNavButtonLinks\\\" [routerLink]=\\\"n.link\\\" routerLinkActive=\\\"primary\\\">{{n.title}}</a>\\n          </div>\\n        </mat-expansion-panel>\\n        <!-- Notice end -->\\n\\n        <!-- Log -->\\n        <mat-expansion-panel  (opened)=\\\"panelOpenState = true\\\"\\n                              (closed)=\\\"panelOpenState = false\\\">\\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n              <mat-icon>history</mat-icon>&nbsp;<span class=\\\"expansion-title\\\">Log</span> \\n              <!-- <mat-icon matBadge=\\\"22\\\" matBadgePosition=\\\"above after\\\" matBadgeSize=\\\"medium\\\" matBadgeOverlap=\\\"true\\\">history</mat-icon>&nbsp;<span class=\\\"expansion-title\\\">Log</span>  -->\\n            </mat-panel-title>\\n\\n          </mat-expansion-panel-header>\\n\\n          <div *ngFor=\\\"let n of LogLinks\\\">\\n            <a mat-button class=\\\"sideNavButtonLinks\\\" [routerLink]=\\\"n.link\\\" routerLinkActive=\\\"primary\\\">{{n.title}}</a>\\n          </div>\\n        </mat-expansion-panel>\\n        <!-- Log end -->\\n\\n      </mat-accordion>\\n      <!-- dropdowns end -->\\n      <br>\\n      <mat-card style=\\\"margin:10px\\\">\\n        <mat-card-content>\\n          <p class=\\\"sideNavBottomStats\\\">&nbsp;<span>deposit application</span>&nbsp;:&nbsp;<strong>705</strong>건</p>\\n          <p class=\\\"sideNavBottomStats\\\">&nbsp;<span>total member</span>&nbsp;:&nbsp;<strong>{{totalRegisteredUser | number}}</strong>명</p>\\n          <p class=\\\"sideNavBottomStats\\\">&nbsp;<span>today joined members</span>&nbsp;:&nbsp;<strong>{{totalRegisteredUserToday | number}}</strong>원</p>\\n          <p class=\\\"sideNavBottomStats\\\">&nbsp;<span>connecting members</span>&nbsp;:&nbsp;<strong>{{totalConnectingMembers.OnlineStatusCount | number}}</strong>원</p>\\n          <p class=\\\"sideNavBottomStats\\\">&nbsp;<span>deposit</span>&nbsp;:&nbsp;<strong>{{totalDepositToday | number}}</strong>원</p>\\n          <p class=\\\"sideNavBottomStats\\\">&nbsp;<span>withdraw</span>&nbsp;:&nbsp;<strong>{{totalWithdrawToday | number}}</strong>원</p>\\n          <p class=\\\"sideNavBottomStats\\\">&nbsp;<span>profit and loss</span>&nbsp;:&nbsp;<strong>{{profitAndLoss | number}}</strong>원</p>\\n          <p class=\\\"sideNavBottomStats\\\">&nbsp;<span>members</span>&nbsp;:&nbsp;<strong>705,940,329</strong>원</p>\\n          <p class=\\\"sideNavBottomStats\\\">&nbsp;<span>sales</span>&nbsp;:&nbsp;<strong>705,940,329</strong>원</p>\\n        </mat-card-content>\\n      </mat-card>\\n\\n    </mat-sidenav>\\n\\n    <mat-sidenav-content>\\n      <mat-toolbar>\\n        <button *ngIf=\\\"sidenav.opened\\\" mat-icon-button (click)=\\\"sidenav.close()\\\"><mat-icon>close</mat-icon></button>\\n        <button *ngIf=\\\"!sidenav.opened\\\" mat-icon-button (click)=\\\"sidenav.open()\\\"><mat-icon>menu</mat-icon></button>\\n        {{server}}\\n        <span class=\\\"spacer\\\"></span>\\n        \\n        <button mat-icon-button class=\\\"icon\\\" (click)=\\\"settings();\\\"><mat-icon>apps</mat-icon></button>\\n      </mat-toolbar>\\n\\n      <router-outlet></router-outlet>\\n    </mat-sidenav-content>\\n  </mat-sidenav-container>\\n</div>\"","import { Component, OnInit, HostListener } from '@angular/core';\r\nimport { MatDialog } from '@angular/material'\r\nimport { interval, Subscription } from 'rxjs';\r\nimport { environment } from '../../../environments/environment.prod';\r\n// services\r\nimport { CommonService} from '../../services/common/common.service';\r\nimport { SettingsService } from '../../services/settings/settings.service';\r\nimport { DashboardService } from '../../services/dashboard/dashboard.service';\r\nimport { UserCredentialsService } from '../../services/user-credentials.service';\r\nimport { UserAuthService } from '../../services/UserAuth/user-auth.service';\r\n// models\r\nimport { UserModel } from '../../interfaces/UserModel';\r\nimport { LinkModel } from '../../interfaces/LinkModel';\r\nimport { DepositDailyModel } from '../../interfaces/DepositDailyModel';\r\nimport { WithdrawDailyModel } from '../../interfaces/WithdrawDailyModel';\r\n// utilities\r\nimport { SettingsDialog } from '../../utilities/SettingsDialog/SettingsDialog'\r\n\r\nimport { Location } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\ninterface connectingMembersModel{\r\n  OnlineStatus?:string,\r\n  OnlineStatusCount?:string\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-master-page',\r\n  templateUrl: './master-page.component.html',\r\n  styleUrls: ['./master-page.component.css']\r\n})\r\n\r\nexport class MasterPageComponent implements OnInit {\r\n  server:string\r\n  SalesLinks:LinkModel[] = [\r\n    { title:'office list', link: '/admin/headOfficeList'},\r\n    { title:'member list', link: '/admin/memberList'}\r\n  ];\r\n\r\n  CalculateLinks:LinkModel[] = [\r\n    { title : 'Calculate Manage', link : '/admin/calculateManage'},\r\n    { title : 'User Profit', link : '/admin/userProfit' }\r\n  ];\r\n\r\n  UserLinks:LinkModel[] = [\r\n    { title : 'Connecting User', link : '/admin/connectingUser'},\r\n    { title : 'Black List', link : '/admin/blackList' },\r\n    { title : 'IP Inquire', link : '/admin/IPinquire' }\r\n  ];\r\n\r\n  DepositWithdrawLinks:LinkModel[] = [\r\n    { title : 'Deposit Management', link : '/admin/depositManagement'},\r\n    { title : 'Withdraw Management', link : '/admin/withdrawManagement' }\r\n  ];\r\n  \r\n  NoticeLinks:LinkModel[] = [\r\n    { title : 'Lobby Notice', link : '/admin/lobbyNotice'},\r\n    { title : 'In Gaming Table', link : '/admin/inGamingTable' },\r\n    { title : '1:1 Support', link : '/admin/1on1support' }\r\n  ];\r\n\r\n  LogLinks:LinkModel[] = [\r\n    { title : 'Game Log', link : '/admin/gameLog'},\r\n    { title : 'Jackpot Log', link : '/admin/jackpotLog' },\r\n    { title : 'Transfer Log', link : '/admin/transferLog' },\r\n    { title : 'Point Log', link : '/admin/pointLog' }\r\n  ];\r\n\r\n  route: string;\r\n  user:UserModel\r\n  constructor(private commonSrvc:CommonService, \r\n              private settingsSrvc:SettingsService, \r\n              private dashboardSrvc:DashboardService, \r\n              location: Location, \r\n              router: Router, \r\n              private userCredentialsSrvc:UserCredentialsService,\r\n              private userAuthSrvc:UserAuthService,\r\n              private dialog:MatDialog){\r\n    this.server = this.userAuthSrvc.server\r\n    router.events.subscribe((val) => {\r\n      if(location.path() != ''){\r\n        this.route = location.path();\r\n      } else {\r\n        this.route = 'Home'\r\n      }\r\n    });\r\n\r\n  }\r\n  //http requests variables\r\n      //every 3 seconds\r\n        httpRequestSubscription: Subscription\r\n        httpUpdate = interval(environment.updateTimeDashboard)\r\n\r\n  //setting variables\r\n    korean:boolean\r\n    english:boolean\r\n    audioModel:boolean = true\r\n    nightMode:boolean\r\n  //sidepanel stats\r\n    totalRegisteredUser: string\r\n    totalRegisteredUserToday: string\r\n    totalConnectingMembers:connectingMembersModel = {}\r\n    //deposit and withdraw ranking\r\n      profitAndLoss:number\r\n\r\n      depositRankingDaily:DepositDailyModel[] = []\r\n      depositRankingLoading:boolean = true\r\n      totalDepositToday:number\r\n    \r\n      withdrawRankingDaily:WithdrawDailyModel[] = []\r\n      withdrawRankingLoading:boolean = true\r\n      totalWithdrawToday:number\r\n\r\n  //user active/inactive variables and events\r\n    updateSubscription : Subscription\r\n    update = interval(1000)\r\n    userIsOnScreen:boolean = true\r\n  \r\n\r\n  @HostListener('mouseleave', ['$event'])\r\n  onmouseleave(event) {\r\n    if(event.clientY <= 0 || event.clientX <= 0 || (event.clientX >= window.innerWidth || event.clientY >= window.innerHeight))\r\n    {\r\n      this.restartTimer()\r\n      this.userIsOnScreen = false\r\n    }\r\n  }\r\n  \r\n  @HostListener('mouseenter')\r\n  onmouseenter() {\r\n    this.userIsOnScreen = true\r\n    if(!this.commonSrvc.userActive){\r\n      this.updateSubscription.unsubscribe()\r\n      this.commonSrvc.setUserActive(true)\r\n    }\r\n  }\r\n\r\n  //user active/inactive variables and events end\r\n\r\n  //user start, stop and reset \r\n  restartTimer(){\r\n\r\n    if(environment.consoleToggle){\r\n      console.log('timer restart')\r\n    }\r\n\r\n    this.updateSubscription = this.update.subscribe(count=>{\r\n      if(this.userIsOnScreen){\r\n        count = 0\r\n      }else{\r\n        if(count == environment.httpRequestTimeout){\r\n          if(environment.consoleToggle){\r\n            console.log('time out')\r\n          }\r\n          //set user active to false in common service after 3 mins and 14 seconds of inactiveness\r\n          this.commonSrvc.setUserActive(false)\r\n          this.updateSubscription.unsubscribe()\r\n        }\r\n      }\r\n    })\r\n\r\n    //updateSubscription end\r\n\r\n  }\r\n  //user start, stop and reset end\r\n\r\n\r\n  ngOnInit() {\r\n    this.settingsSrvc.isDarkTheme.next(false)\r\n    this.settingsSrvc.isDarkTheme.subscribe(\r\n      (res:boolean) => { this.nightMode = res},\r\n      err => { console.log(err) }\r\n    )\r\n    this.printUserToken()\r\n    this.audioToggle(true)\r\n    // this.sidebarIsOn()\r\n    \r\n    // this.activateSidePanelStats()\r\n    if(localStorage.getItem('language') == 'korean'){\r\n      this.korean = true\r\n    }else if(localStorage.getItem('language') == 'english'){\r\n      this.english = true\r\n    }else{\r\n      this.korean = true\r\n    }\r\n    \r\n    this.decryptToken()\r\n\r\n  }\r\n\r\n  OnDestroy(){\r\n    // localStorage.clear()\r\n    this.httpRequestSubscription.unsubscribe()\r\n  }\r\n\r\n  toggleFullScreen() {\r\n    var elem = document.body\r\n    let methodToBeInvoked \r\n    // let methodToBeInvoked = elem.requestFullscreen || elem.webkitRequestFullScreen || elem['mozRequestFullscreen'] || elem['msRequestFullscreen']; \r\n    if(elem.requestFullscreen){\r\n      methodToBeInvoked  = elem.requestFullscreen\r\n    }\r\n    // else if(elem.webkitRequestFullScreen){\r\n    //   methodToBeInvoked  = elem.webkitRequestFullScreen\r\n    // }\r\n    else if(elem['mozRequestFullscreen']){\r\n      methodToBeInvoked  = elem['mozRequestFullscreen']\r\n    }else if(elem['msRequestFullscreen']){\r\n      methodToBeInvoked = elem['msRequestFullscreen']\r\n    }\r\n     if(methodToBeInvoked) methodToBeInvoked.call(elem)\r\n  }\r\n\r\n  audioToggle(value) {\r\n   this.settingsSrvc.toggleMute(value)\r\n   this.audioModel = value\r\n  }\r\n\r\n  toKorean(){\r\n    localStorage.setItem('language','korean')\r\n    window.location.reload();\r\n  }\r\n\r\n  toEnglish(){\r\n    localStorage.setItem('language','english')\r\n    window.location.reload();\r\n  }\r\n\r\n  //sidepanel stats\r\n    activateSidePanelStats(){\r\n     \r\n        // console.log('on screen')\r\n        this.httpRequestSubscription = this.httpUpdate.subscribe(\r\n          () =>{\r\n            if(this.userIsOnScreen){\r\n              this.getTotalRegisteredUser()\r\n              this.getTotalRegisteredUserToday()\r\n              this.getConnectingMembers()\r\n\r\n              this.getWithdrawRankingDaily()\r\n              this.getDepositRankingDaily()\r\n\r\n              this.profitAndLoss = this.totalDepositToday - this.totalWithdrawToday\r\n            }\r\n          }\r\n        )\r\n    }\r\n\r\n    getTotalRegisteredUser(){\r\n      this.dashboardSrvc.getTotalRegisteredUser()\r\n        .subscribe( \r\n          res => {\r\n            this.totalRegisteredUser = res['TotalRegistered'];\r\n            // console.log('result'+res['TotalRegistered'])\r\n            this.dashboardSrvc.emitTotalMember(res['TotalRegistered'])\r\n\r\n            // this.emitTotalMember(res['TotalRegistered'])\r\n        },\r\n          error => {console.log('error' + error)}\r\n        )\r\n    }\r\n\r\n    getTotalRegisteredUserToday(){\r\n      this.dashboardSrvc.getTotalRegisteredUserToday()\r\n        .subscribe( \r\n          res => {\r\n            this.totalRegisteredUserToday = res['TotalRecentRegistered'];\r\n            this.dashboardSrvc.emitTotaRegisteredToday(res['TotalRecentRegistered'])\r\n        },\r\n          error => {console.log('error' + error)}\r\n        )\r\n    }\r\n\r\n    getConnectingMembers(){\r\n      this.dashboardSrvc.getConnectingMembers()\r\n        .subscribe( \r\n          (res:connectingMembersModel[]) => {\r\n            this.totalConnectingMembers = res[0]\r\n            this.dashboardSrvc.emitConnectingMembers(res[0].OnlineStatusCount)\r\n        },\r\n          error => {console.log('error' + error)}\r\n        )\r\n    }\r\n\r\n    \r\n    getWithdrawRankingDaily(){\r\n      this.dashboardSrvc.getWithdrawRankingDaily()\r\n      .subscribe( \r\n        (res:WithdrawDailyModel[]) => {\r\n\r\n          if(res.length > 0){\r\n            //sort values\r\n            res.sort((a,b)=> { return b.Amount - a.Amount})\r\n          //total withdraw variable\r\n            let totalwithdraw = 0 \r\n          //getting the percentage variables\r\n            let max = res[0].Amount\r\n            let min = 0\r\n  \r\n            for(let i = 0; i <= res.length - 1; i++){\r\n              res[i].Percentage = ((res[i].Amount - min) / (max - min) ) * 100\r\n              totalwithdraw += Number(res[i].Amount)\r\n            }\r\n  \r\n          //assign result to WithdrawRankingDaily\r\n            this.dashboardSrvc.emitWithrawToday(res)\r\n            this.withdrawRankingDaily = res\r\n            this.totalWithdrawToday = totalwithdraw\r\n  \r\n          // console.log(res)\r\n          this.withdrawRankingLoading = false\r\n          }\r\n        },\r\n        error => {\r\n        console.log('error' + error)\r\n        this.withdrawRankingLoading = true\r\n      }\r\n      )\r\n    }\r\n\r\n    getDepositRankingDaily(){\r\n      this.dashboardSrvc.getDepositRankingDaily()\r\n      .subscribe( \r\n        (res:DepositDailyModel[]) => {\r\n          if(res.length > 0){\r\n            //sort values\r\n              res.sort((a,b)=> { return b.Amount - a.Amount})\r\n            //total withdraw variable\r\n              let totalDeposit = 0 \r\n            //getting the percentage variables\r\n              let max = res[0].Amount\r\n              let min = 0\r\n    \r\n            for(let i = 0; i <= res.length - 1; i++){\r\n              res[i].Percentage = ((res[i].Amount - min) / (max - min) ) * 100;\r\n              totalDeposit += Number(res[i].Amount);\r\n            }\r\n            //assign result to depositRankingDaily\r\n              this.dashboardSrvc.emitDepositToday(res)\r\n              this.depositRankingDaily = res\r\n              this.totalDepositToday = totalDeposit\r\n    \r\n            this.depositRankingLoading = false\r\n          }\r\n        },\r\n        error => {\r\n        console.log(error['status'])\r\n        this.depositRankingLoading = true\r\n        }\r\n      )\r\n    }\r\n  //sidepanel stats end\r\n\r\n  printUserToken(){\r\n    console.log(localStorage.getItem(environment.tokenStorageKey))\r\n  }\r\n  clearToken(){\r\n    localStorage.clear();\r\n  }\r\n  disableRequests(){\r\n    alert('click ok to enable...')\r\n  }\r\n\r\n  decryptToken(){\r\n    this.userCredentialsSrvc.getPrivileges( localStorage.getItem(environment.tokenStorageKey))\r\n      .subscribe(\r\n        (res:UserModel) => { \r\n          this.user = res;\r\n          // console.log('user credentials' + JSON.stringify(res))\r\n          this.userCredentialsSrvc.emitUserCredentials(res);\r\n        }\r\n      )\r\n  }\r\n\r\n  settings(){\r\n    const settingsDialog = this.dialog.open(SettingsDialog, {\r\n      width: '220px',\r\n      backdropClass:'background',\r\n      position: {top: '60px', right: '20px'},\r\n      data : {blacklistmode : [true,false,false]}\r\n    });\r\n\r\n    settingsDialog.afterClosed().subscribe(\r\n      () =>{\r\n        console.log('settings closed')\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>pending... waiting for the game...</p>\"","import { Component, OnInit } from '@angular/core';\nimport { NotificationService } from '../../../services/notice/notification/notification.service'\n@Component({\n  selector: 'app-in-gaming-table',\n  templateUrl: './in-gaming-table.component.html',\n  styleUrls: ['./in-gaming-table.component.css']\n})\nexport class InGamingTableComponent implements OnInit {\n  protected title:string\n\n  constructor(private notificationSrvc:NotificationService) { }\n\n  ngOnInit() {\n  }\n\n  notifyRoom(){\n    this.notificationSrvc.notifyAllRooms(this.title)\n      .subscribe(\n        (res) =>{ \n          if(res['status'] == 200){\n            alert('notice posted')\n          }else{\n            alert('something went wrong')\n          }\n        },\n        err =>{\n          alert('something went wrong' + err)\n        }\n      )\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  pending... waiting for the game...\\n</p>\"","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../../../services/common/common.service'\nimport { environment } from '../../../../environments/environment.prod';\nimport {PageEvent, Sort, MatBottomSheet} from '@angular/material';\n\n@Component({\n  selector: 'app-lobby-notice',\n  templateUrl: './lobby-notice.component.html',\n  styleUrls: ['./lobby-notice.component.css']\n})\nexport class LobbyNoticeComponent implements OnInit {\n\n  //table variables\n    displayedColumns:string[] =[  \n      'row_number',\n      'HOID',\n      'DistributorID',\n      'ShopID',\n      'PlayerID',\n      'ScreenName',\n      'IP',\n      'LoginDateTime'\n    ]\n    \n    tableSort:Sort = {active : 'LoginDateTime', direction : 'desc'}\n\n    // MatPaginator\n      // input\n      pageSizeOptions: number[] = environment.pageSizeOptions;\n\n      // Output\n      pageEvent: PageEvent = { pageIndex : 0, pageSize : environment.pageSizeOptions[0], previousPageIndex : 0, length: 0};\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-card class=\\\"card\\\" >\\n  <div *ngIf=\\\"backLoading\\\" class=\\\"loading-shade\\\">\\n    <mat-spinner color=\\\"accent\\\"></mat-spinner>\\n  </div>\\n\\n  <mat-card-header>\\n    <mat-card-title>1:1 support list</mat-card-title>\\n    <button mat-icon-button \\n            color=\\\"accent\\\" \\n            style=\\\"right:0; top:0; margin-top:10px; position: absolute;\\\" \\n            (click)=\\\"reload()\\\"\\n            matTooltip=\\\"sync\\\"><mat-icon>sync</mat-icon></button>\\n\\n  </mat-card-header>\\n\\n  <mat-divider></mat-divider>\\n\\n  <div  style=\\\"display: flex; justify-content: flex-end; margin-top: 10px;\\\">\\n    <div>\\n      <button *ngIf=\\\"showBackButton\\\"\\n              mat-flat-button \\n              color=\\\"primary\\\" \\n              (click)=\\\"reload(); showBackButton = false;\\\"><mat-icon>arrow_back</mat-icon></button>\\n\\n      <mat-form-field style=\\\"width:90px; margin: 5px 5px 0;\\\">\\n        <mat-select [(ngModel)]=\\\"optionValue\\\">\\n          <mat-option *ngFor=\\\"let t of columnOptions\\\" value=\\\"{{t.value}}\\\">{{t.name}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field>\\n        <input matInput [(ngModel)]=\\\"searchValue\\\" placeholder=\\\"input here...\\\" >\\n      </mat-form-field>\\n      \\n      <button matSuffix \\n              mat-icon-button \\n              color=\\\"accent\\\"\\n              (click)=\\\"searchList()\\\"><mat-icon>search</mat-icon></button>\\n    </div>\\n  </div>\\n  <mat-card-content style=\\\"overflow:auto;\\\" class=\\\"mat-elevation-z6\\\">\\n    <div style=\\\"width:1500px;\\\">\\n      <!-- member list table -->\\n      <table  mat-table matSort \\n              [dataSource]=\\\"supportList\\\"\\n              style=\\\"width:100%\\\" \\n              (matSortChange)=\\\"sortData($event)\\\">\\n\\n        <!-- no. -->\\n        <ng-container matColumnDef=\\\"row_number\\\">\\n          <th mat-header-cell *matHeaderCellDef>No.</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.row_number | number}} </td>\\n        </ng-container>\\n\\n        <!-- no. -->\\n        <ng-container matColumnDef=\\\"HeadOfficeID\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"HeadOfficeID\\\">HO ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.HeadOfficeID}} </td>\\n        </ng-container>\\n\\n        <!-- no. -->\\n        <ng-container matColumnDef=\\\"DistributorID\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"DistributorID\\\">Distributor ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.DistributorID}} </td>\\n        </ng-container>\\n\\n        <!-- no. -->\\n        <ng-container matColumnDef=\\\"ShopID\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ShopID\\\">Shop ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.ShopID}} </td>\\n        </ng-container>\\n\\n        <!-- no. -->\\n        <ng-container matColumnDef=\\\"PlayerID\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"PlayerID\\\">User ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.PlayerID}} </td>\\n        </ng-container>\\n\\n        <!-- no. -->\\n        <ng-container matColumnDef=\\\"ScreenName\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ScreenName\\\">Screen Name</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.ScreenName}} </td>\\n        </ng-container>\\n\\n        <!-- no. -->\\n        <ng-container matColumnDef=\\\"Title\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Title\\\">Title</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.Title}} </td>\\n        </ng-container>\\n\\n        <!-- no. -->\\n        <ng-container matColumnDef=\\\"Status\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Status\\\">Status</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.Status}} </td>\\n        </ng-container>\\n\\n        <!-- Management -->\\n        <ng-container matColumnDef=\\\"Management\\\">\\n          <th mat-header-cell *matHeaderCellDef >Management</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\n            <button mat-flat-button \\n                    color=\\\"warn\\\" \\n                    style=\\\"margin:5px\\\"\\n                    matTooltip=\\\"delete\\\"\\n                    matTooltipPosition=\\\"above\\\"><mat-icon>delete_outline</mat-icon></button> \\n            <button mat-flat-button \\n                    color=\\\"primary\\\" \\n                    style=\\\"margin:5px\\\"\\n                    matTooltip=\\\"approved\\\"\\n                    matTooltipPosition=\\\"right\\\"\\n                    (click)=\\\"getWriteNotice(element.PlayerUserAccountID, element.SupportTicketID)\\\"><mat-icon>create</mat-icon></button>\\n          </td>\\n        </ng-container>\\n\\n        <!-- no. -->\\n        <ng-container matColumnDef=\\\"RegisteredDateTime\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"RegisteredDateTime\\\">Registration Date</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.RegisteredDateTime | date : 'medium'}} </td>\\n        </ng-container>\\n\\n        <!-- no. -->\\n        <ng-container matColumnDef=\\\"AnswerDateTime\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"AnswerDateTime\\\">Answering Date</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.AnswerDateTime | date : 'medium'}} </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      </table>\\n    </div>\\n\\n    <div *ngIf=\\\"pageEvent\\\">\\n      <mat-paginator  [length]=\\\"pageEvent.length\\\"\\n                      [pageSize]=\\\"pageEvent.pageSize\\\"\\n                      [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n                      showFirstLastButtons=\\\"true\\\"\\n                      (page)=\\\"pageEvent = $event; reload()\\\"> </mat-paginator>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport {SupportService} from '../../../services/notice/support/support.service'\nimport {CommonService} from '../../../services/common/common.service'\nimport { environment } from '../../../../environments/environment.prod';\nimport { SupportModel } from '../../../interfaces/SupportModel'\nimport { OptionModel } from '../../../interfaces/OptionModel'\nimport {PageEvent, Sort, MatDialog, MatBottomSheet} from '@angular/material';\nimport {AnswerSupportDialog} from '../../../utilities/AnswerSupportDialog/AnswerSupportDialog'\nimport { NoResultBottomSheet2 } from '../../../utilities/NoResultBottomSheet/NoResultBottomSheet2'\n\n@Component({\n  selector: 'app-one-on-one-support',\n  templateUrl: './one-on-one-support.component.html',\n  styleUrls: ['./one-on-one-support.component.css']\n})\nexport class OneOnOneSupportComponent implements OnInit {\n\n  constructor(private supportSrvc:SupportService, \n              private commonSrvc:CommonService,\n              private bottomsheet:MatBottomSheet,\n              public dialog: MatDialog){ }\n\n  //service variables\n    pageIndex:number = 4\n\n  //table variables\n    supportList:SupportModel[]\n\n    displayedColumns:string[] =[  \n      'row_number',\n      'HeadOfficeID',\n      'DistributorID',\n      'ShopID',\n      'PlayerID',\n      'ScreenName',\n      'Title',\n      'Status',\n      'Management',\n      'RegisteredDateTime',\n      'AnswerDateTime'\n    ]\n\n    tableSort:Sort = {active : 'Status', direction : 'desc'}\n\n  // MatPaginator\n    // input\n    pageSizeOptions: number[] = environment.pageSizeOptions;\n\n    // Output\n    pageEvent: PageEvent = { pageIndex : 0, pageSize : environment.pageSizeOptions[0], previousPageIndex : 0, length: 0};\n\n  //search variables\n    showBackButton:boolean = false\n    backLoading:boolean = true\n\n    optionValue:string = 'PlayerID'\n    searchValue:string\n\n    columnOptions:OptionModel[]= [\n      {value : 'PlayerID', name : 'User ID'},\n      {value : 'ScreenName', name : 'Screen Name'},\n      {value : 'Title', name : 'Title'},\n      {value : 'Reason', name : 'Contents'}\n    ]\n\n  //lifecycle hooks\n    ngOnInit() {\n      this.getListAndPageCount()\n    }\n\n    ngOnDestroy() {\n      console.log('you leave 1on1 support')\n    }\n\n  //lifecycle hooks end\n\n  getListAndPageCount(){\n    Promise.all([this.getSupportList(),this.getPageCount()]).then(function() {\n      console.log('get list and page count successful');\n      }, function(){ //if promise or promise2 fail\n      console.log('something went wrong')\n    })\n  }\n\n  getSupportList(){\n    let promise = new Promise((resolve,reject) => {\n      this.commonSrvc.getList3(this.pageIndex, this.pageEvent.pageIndex * this.pageEvent.pageSize, this.pageEvent.pageSize, this.tableSort.active, this.tableSort.direction)\n      .subscribe(\n        (result :SupportModel[]) => {\n          //show No results found if 0 result else dont show\n          if(result.length > 0){\n            //set artificial index\n            let row_number_new = 0\n            for(let i = 0; i <= result.length - 1; i++){\n              row_number_new += 1;\n              result[i].row_number = row_number_new\n            }\n            this.supportList = result\n            this.backLoading = false\n          }else{\n            console.log('result not found')\n          }\n          resolve()\n        },\n        error => {\n          if(error['status'] == 403){\n            this.commonSrvc.logout()\n          }\n          reject()\n        }\n      )\n\n    })\n\n    return promise;\n  }\n\n  getPageCount(){\n    let promise = new Promise ((resolve,reject) => {\n      this.commonSrvc.getPageCount(this.pageIndex)\n      .subscribe(\n        (result) => {\n          this.pageEvent.length = result[0]['ID']\n          resolve()\n        },\n          error => {\n            console.log('key ' + localStorage.getItem(environment.tokenStorageKey));\n            console.log(error);\n            reject()\n          }\n      )\n    })\n    return promise;\n  }\n\n  // will activate after the answer button in table is clicked\n  getWriteNotice(userID:string, supportID:string){\n    this.supportSrvc.getWriteNotice(userID,supportID)\n    .subscribe(\n      (result) => {\n        if(result){\n          this.AnswerSupport(result[0])\n        }\n       },\n     error => {\n         console.log(error)\n       }\n     )\n  }\n\n\n  searchList(){\n    this.commonSrvc.searchList(this.pageIndex,this.optionValue,this.searchValue)\n    .subscribe(\n      (result:SupportModel[]) => {\n        console.log(result)\n        //if there's result\n        if(result.length > 0){\n          this.supportList = result\n          console.log('results found')\n        }else{\n          console.log('no results found')\n        }\n        this.showBackButton = true\n      },\n      error => {\n        if(error['statusText'] == 'Not Found'){\n          let icon = '';\n          switch(this.optionValue) { \n            case \"PlayerID\": { \n               icon = 'credit_card';\n               break; \n            } \n            case \"ScreenName\": { \n               icon = 'person';\n               break; \n            } \n            case \"Title\": {\n               icon = 'title' ;\n               break;    \n            } \n            default: { \n              icon = 'code'; \n               break;              \n            } \n         }\n          //empty list\n          this.supportList = []\n          this.openSearchNoResultFound(this.optionValue, icon)\n        }else{\n          this.commonSrvc.logout()\n        }\n      }\n    )\n  }\n\n\n  //we call this function when the user interact with paginator or clicked the refresh button\n  reload(){\n    this.backLoading = true; \n    this.getListAndPageCount()\n  }\n\n  sortData(sort: Sort){\n    this.tableSort = { active : sort.active, direction : sort.direction}\n    if(this.tableSort.direction){\n      this.reload()\n\n    }\n  }\n\n  AnswerSupport(writenotice){\n    const handHistoryDialog = this.dialog.open(AnswerSupportDialog, {\n      width: '30%',\n      data : writenotice\n    });\n\n    handHistoryDialog.afterClosed().subscribe(\n      () =>{\n        this.getListAndPageCount()\n      }\n    )\n  }\n\n  openSearchNoResultFound(columnName:string, icon:string){\n    this.bottomsheet.open(NoResultBottomSheet2,{\n      data : [\n        {value : this.searchValue, column : columnName, icon : icon} \n      ]\n    })\n      .afterDismissed().subscribe(\n        () => {\n            this.getListAndPageCount()\n          }\n      ) \n  }\n  \n}\n","module.exports = \"table {\\r\\n  min-width: 1264px; \\r\\n  width: 100%\\r\\n}\"","module.exports = \"<!-- table's card -->\\n<mat-card class=\\\"card\\\">\\n\\n  <div *ngIf=\\\"backLoading\\\" class=\\\"loading-shade\\\">\\n    <mat-spinner color=\\\"accent\\\"></mat-spinner>\\n  </div>\\n  <mat-card-header>\\n    <mat-card-title>\\n      <span *ngIf=\\\"pageIndex == 2\\\">Head office list</span>\\n      <span *ngIf=\\\"pageIndex == 1\\\">Distributor list</span>\\n      <span *ngIf=\\\"pageIndex == 0\\\">Shop list</span>\\n    </mat-card-title>\\n    <button mat-icon-button \\n            color=\\\"accent\\\" \\n            style=\\\"right:0; top:0; margin-top:10px; position: absolute\\\" \\n            (click)=\\\"reload()\\\"\\n            matTooltip=\\\"sync\\\"><mat-icon>sync</mat-icon></button>\\n  </mat-card-header>\\n\\n  <mat-divider></mat-divider>\\n  <button mat-raised-button\\n          (click)=\\\"uprank()\\\"\\n          color=\\\"primary\\\"\\n          [disabled]=\\\"pageIndex == maxUpstep\\\"\\n          style=\\\"margin:10px;\\\"><mat-icon *ngIf=\\\"pageIndex != maxUpstep\\\">subdirectory_arrow_left</mat-icon>&nbsp;{{currentUserName}}</button>\\n  <br>\\n\\n  <mat-card-content style=\\\"overflow:auto;\\\" class=\\\"mat-elevation-z6\\\">\\n    <table mat-table [dataSource]=\\\"officeList\\\" >\\n\\n      <ng-container matColumnDef=\\\"row_number\\\" >\\n        <th mat-header-cell *matHeaderCellDef> No. </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.row_number}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"OfficeID\\\" >\\n        <th mat-header-cell *matHeaderCellDef> \\n          <span *ngIf=\\\"pageIndex == 2\\\">HO</span> \\n          <span *ngIf=\\\"pageIndex == 1\\\">Distributor</span> \\n          <span *ngIf=\\\"pageIndex == 0\\\">store</span> ID \\n        </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.OfficeID}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Name\\\">\\n        <th mat-header-cell *matHeaderCellDef>Name</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.Name}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Commission\\\">\\n        <th mat-header-cell *matHeaderCellDef>Commission</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.Commission | number}}%</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"holdingMoney\\\">\\n        <th mat-header-cell *matHeaderCellDef>Holding Money</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.holdingMoney | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"TotalHoldingMoney\\\">\\n        <th mat-header-cell *matHeaderCellDef>Total Holding Money</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.TotalHoldingMoney | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"MembersMoney\\\">\\n        <th mat-header-cell *matHeaderCellDef>Members Money</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.MembersMoney | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"TotalMoney\\\">\\n        <th mat-header-cell *matHeaderCellDef>Total Money</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.TotalMoney | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"distributorsCount\\\">\\n        <th mat-header-cell \\n            *matHeaderCellDef\\n            [ngClass]=\\\"{'hide': pageIndex <= 1}\\\">Distributor</th>\\n        <td mat-cell \\n            *matCellDef=\\\"let element\\\"\\n            [ngClass]=\\\"{'hide': pageIndex <= 1}\\\">{{element.distributorsCount | number}}</td>\\n      </ng-container>\\n    \\n      <ng-container matColumnDef=\\\"shopsCount\\\">\\n        <th mat-header-cell \\n            *matHeaderCellDef\\n            [ngClass]=\\\"{'hide': pageIndex == 0}\\\">Store</th>\\n        <td mat-cell \\n            *matCellDef=\\\"let element\\\"\\n            [ngClass]=\\\"{'hide': pageIndex == 0}\\\">{{element.shopsCount | number}}</td>\\n      </ng-container>\\n    \\n      <ng-container matColumnDef=\\\"playersCount\\\">\\n        <th mat-header-cell *matHeaderCellDef>Members</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.playersCount | number}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Lowrank\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              [ngClass]=\\\"{'hide': pageIndex == 0}\\\">\\n            <span *ngIf=\\\"pageIndex == 2\\\">distributor</span> \\n            <span *ngIf=\\\"pageIndex == 1\\\">store</span>&nbsp; \\n            list\\n          </th>\\n          <td mat-cell \\n              *matCellDef=\\\"let element\\\"\\n              [ngClass]=\\\"{'hide': pageIndex == 0}\\\"> \\n            <button mat-icon-button \\n                    color=\\\"primary\\\"\\n                    matTooltip=\\\"lowrank\\\"\\n                    matTooltipPosition=\\\"right\\\"\\n                    (click)=\\\"lowrank(element.UserAccountID, element.Commission, element.OfficeID)\\\"><mat-icon>subdirectory_arrow_right</mat-icon></button>  \\n          </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"Management\\\">\\n        <th mat-header-cell *matHeaderCellDef>Management</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> \\n          <button mat-flat-button \\n                  color=\\\"accent\\\" \\n                  style=\\\"margin:5px\\\"\\n                  matTooltip=\\\"hold\\\"\\n                  matTooltipPosition=\\\"left\\\"><mat-icon>pause</mat-icon></button>\\n          <button mat-flat-button \\n                  color=\\\"warn\\\" \\n                  style=\\\"margin:5px\\\"\\n                  matTooltip=\\\"delete\\\"\\n                  matTooltipPosition=\\\"above\\\"><mat-icon>delete_outline</mat-icon></button> \\n          <button mat-flat-button \\n                  color=\\\"primary\\\" \\n                  style=\\\"margin:5px\\\"\\n                  matTooltip=\\\"accept\\\"\\n                  matTooltipPosition=\\\"right\\\"><mat-icon>check</mat-icon></button>\\n          <button mat-stroked-button\\n                  style=\\\"margin:5px\\\"\\n                  matTooltip=\\\"check other infos\\\"\\n                  matTooltipPosition=\\\"right\\\"\\n                  (click)=\\\"OpenOfficeOtherInfo( element.Password, \\n                                                element.RegisteredDateTime, \\n                                                element.PhoneNumber, \\n                                                element.Name, \\n                                                element.OfficeID)\\\"><mat-icon>info_outlined</mat-icon></button>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"OfficeListColumns\\\"></tr>\\n      <tr mat-row\\n          class=\\\"element-row\\\" \\n          *matRowDef=\\\"let element; columns: OfficeListColumns;\\\"></tr>\\n    </table>\\n    <div *ngIf=\\\"pageEvent\\\">\\n      <mat-paginator  [length]=\\\"pageEvent.length\\\"\\n                      [pageSize]=\\\"pageEvent.pageSize\\\"\\n                      [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n                      showFirstLastButtons=\\\"true\\\"\\n                      (page)=\\\"pageEvent = $event; reload()\\\"> </mat-paginator>\\n    </div>\\n  </mat-card-content>\\n  <mat-card-actions>\\n  </mat-card-actions>\\n  \\n</mat-card>\\n\\n<!-- <mat-accordion style=\\\"margin:5px; position: absolute; right:20px;\\\"> -->\\n<mat-accordion class=\\\"card\\\" style=\\\"display: flex; justify-content: flex-end\\\">\\n  <mat-expansion-panel style=\\\"width:450px;\\\">\\n    <mat-expansion-panel-header>\\n      <mat-panel-title>\\n        <mat-icon color=\\\"accent\\\">add_box</mat-icon>&nbsp;add&nbsp; \\n          <span *ngIf=\\\"pageIndex == 2\\\">head office </span>\\n          <span *ngIf=\\\"pageIndex == 1\\\">distributor </span>\\n          <span *ngIf=\\\"pageIndex == 0\\\">shop</span>\\n      </mat-panel-title>\\n      <!-- <mat-panel-description>\\n      </mat-panel-description> -->\\n    </mat-expansion-panel-header>\\n    <form [formGroup]=\\\"addForm\\\">\\n      <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"80px\\\">\\n        <!-- ID and button -->\\n        <mat-grid-tile colspan=\\\"1\\\" rowspan=\\\"1\\\" >\\n          <mat-form-field appearance=\\\"outline\\\" style=\\\"width:95%\\\">\\n            <mat-label>ID/Username</mat-label>\\n            <input  matInput \\n                    placeholder=\\\"ID/Username\\\"\\n                    formControlName=\\\"UserName\\\"\\n                    >\\n          </mat-form-field>\\n        </mat-grid-tile>\\n        <mat-grid-tile colspan=\\\"1\\\">\\n          <button mat-raised-button \\n                  color=\\\"accent\\\" \\n                  style=\\\"width:90%; margin-bottom:20px;\\\"\\n                  (click)=\\\"officeIDCheck()\\\"><mat-icon>search</mat-icon>inquire</button>\\n        </mat-grid-tile>\\n        \\n        <!-- name -->\\n        <mat-grid-tile colspan=\\\"1\\\">\\n          <mat-form-field appearance=\\\"outline\\\" style=\\\"width:95%\\\">\\n            <mat-label>Name</mat-label>\\n            <input  matInput \\n                    placeholder=\\\"Name\\\"\\n                    formControlName=\\\"Name\\\"\\n                    >\\n          </mat-form-field>\\n        </mat-grid-tile>\\n        \\n        <!-- contact no -->\\n        <mat-grid-tile colspan=\\\"1\\\">\\n          <mat-form-field appearance=\\\"outline\\\" style=\\\"width:95%\\\">\\n            <mat-label>Contact No.</mat-label>\\n            <input  matInput\\n                    type=\\\"number\\\"\\n                    placeholder=\\\"Contact No.\\\"\\n                    formControlName=\\\"PhoneNumber\\\">\\n          </mat-form-field>\\n        </mat-grid-tile>\\n        \\n        <!-- password -->\\n        <mat-grid-tile colspan=\\\"2\\\">\\n          <mat-form-field appearance=\\\"outline\\\" style=\\\"width:95%\\\">\\n            <mat-label>Password</mat-label>\\n            <mat-error></mat-error>\\n            <input  matInput \\n                    type=\\\"password\\\" \\n                    placeholder=\\\"Password\\\"\\n                    [type]=\\\"hidePassword ? 'password' : 'text'\\\">\\n                    <mat-icon matSuffix (click)=\\\"hidePassword = !hidePassword\\\">{{hidePassword ? 'visibility_off' : 'visibility'}}</mat-icon>\\n          </mat-form-field>\\n        </mat-grid-tile>\\n        \\n        <!-- commission -->\\n        <mat-grid-tile colspan=\\\"2\\\">\\n          <mat-label>Commission&nbsp;<strong class=\\\"w3-center\\\">{{addOfficeCommisionValue}}%</strong></mat-label>\\n          <mat-slider color=\\\"primary\\\" \\n                      formControlName=\\\"Commission\\\"\\n                      style=\\\"width:98%; \\\" \\n                      min=\\\"0\\\" \\n                      [max]=\\\"currentCommission\\\" \\n                      step=\\\"0.1\\\" \\n                      value=\\\"currentCommission\\\" \\n                      thumbLabel=\\\"true\\\"></mat-slider>\\n        </mat-grid-tile>\\n  \\n        <!-- actions -->\\n        <mat-grid-tile colspan=\\\"2\\\">\\n          <button mat-raised-button \\n                  color=\\\"primary\\\"\\n                  style=\\\"width:100%\\\"\\n                  (click)=\\\"addHeadOffice()\\\">\\n            <mat-icon>save_alt</mat-icon>&nbsp;save</button>\\n        </mat-grid-tile>\\n      </mat-grid-list>\\n\\n    </form>\\n  </mat-expansion-panel>\\n</mat-accordion>\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { OfficeListService } from '../../../services/sales/office-list.service';\nimport { CommonService } from '../../../services/common/common.service';\nimport { UserCredentialsService } from '../../../services/user-credentials.service';\nimport { environment } from '../../../../environments/environment.prod';\nimport { UserModel } from '../../../interfaces/UserModel';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatBottomSheet, PageEvent} from '@angular/material';\nimport {FormBuilder, FormGroup, Validators, FormControl} from '@angular/forms';\n\ninterface officeModel{\n  row_number: number,\n  UserAccountID:string,\n  OfficeID: string,\n  Password: string,\n  Name: string,\n  RegisteredDateTime: string,\n  PhoneNumber: string,\n  TelephoneNumber: string,\n  Commission: number,\n  holdingMoney: number,\n  TotalHoldingMoney: number,\n  MembersMoney: number,\n  TotalMoney: number,\n  playersCount: number,\n  shopsCount: number,\n  distributorsCount: number,\n  ParentID: string\n}\n\n\n@Component({\n  selector: 'app-head-office-list',\n  templateUrl: './head-office-list.component.html',\n  styleUrls: ['./head-office-list.component.css']\n})\nexport class HeadOfficeListComponent implements OnInit {\n  addForm:FormGroup;\n  constructor(private commonSrvc:CommonService, \n              private officeListSrvc:OfficeListService, \n              private userCredentialsSrvc:UserCredentialsService,\n              public dialog: MatDialog,\n              private bottomsheet:MatBottomSheet,\n              fb:FormBuilder,) { \n    this.addForm = fb.group({\n      Name: new FormControl('', Validators.required),\n      PhoneNumber: new FormControl('', Validators.required),\n      UserName: new FormControl('', Validators.required),\n      Password: new FormControl('', Validators.required),\n      Commission: new FormControl(this.addOfficeCommisionValue, Validators.required),\n      ParentUserAccountID: ''\n    });\n  }\n\n  //service variables\n    // unlike the other components... pageIndex will depend on who the user is operatingheadoffice/headoffice/distributor/shop and it is editable through here\n    protected pageIndex:number = 0\n  //table variables\n    hidePassword:boolean = true\n    officeList :officeModel[] = []\n\n    OfficeListColumns: string[] =  [\n      'row_number',\n      'OfficeID',\n      'Name',\n      'Commission',\n      'holdingMoney',\n      'TotalHoldingMoney',\n      'MembersMoney',\n      'TotalMoney',\n      'playersCount',\n      'shopsCount',\n      'distributorsCount',\n      'Lowrank',\n      'Management'\n    ];\n\n    userCredentials:UserModel\n\n    // MatPaginator\n      //Input\n      pageSizeOptions: number[] = environment.pageSizeOptions;\n      //Output\n      pageEvent: PageEvent = { pageIndex : 0, pageSize : environment.pageSizeOptions[0], previousPageIndex : 0, length: 0};\n    \n    // lowrank uprank variables\n      // we use this if the user goes back\n      maxUpstep:number\n      commissionDefaultValue:number\n      //commission's max value after user select its low rank and default is user's commission\n      protected currentParentID:string \n      protected currentUserName:string \n      protected currentCommission:number\n\n    //key to html elements\n    protected key:boolean[] = [\n      false,//distributor\n      false,//headoffice\n      false//operating\n    ]\n    \n    protected parentIDHistory:string[] =[] \n    \n    // add office variables\n      addOfficeCommisionValue:number = 0\n\n  //search variables\n    backLoading:boolean = true\n\n  //lifecycle hooks\n    ngOnInit() {\n      if(!this.userCredentials){\n        console.log('requested... ')\n        this.getUserCredentials()\n      }\n      \n    }\n    ngOnDestroy() {\n      console.log('you leave office lists')\n    }\n\n  //lifecycle hooks end\n\n  getListAndPageCount(){\n    Promise.all([this.getOfficeList(),this.getPageCount()]).then(function() {\n      // console.log('get list and page count successful');\n      }, function(){ //if promise or promise2 fail\n      // console.log('something went wrong')\n    })\n  }\n\n  getOfficeList(){\n    let promise = new Promise((resolve,reject) => {\n      this.officeListSrvc.getList(this.pageIndex, this.pageEvent.pageIndex * this.pageEvent.pageSize, this.pageEvent.pageSize, this.currentParentID)\n      .subscribe(\n        (result:officeModel[]) => {\n\t\t\t\t\tconsole.log('​HeadOfficeListComponent -> getOfficeList -> result', result)\n          \n          //show No results found if 0 result else dont show\n          if(result.length > 0){\n            //set artificial index\n            let row_number_new = this.pageEvent.pageIndex * this.pageEvent.pageSize\n            for(let i = 0; i <= result.length - 1; i++){\n              row_number_new += 1;\n              result[i].row_number = row_number_new;\n              result[i].TotalMoney = result[i].TotalHoldingMoney + result[i].MembersMoney;\n            }\n            //set artificial index end\n            this.officeList = result\n            this.backLoading = false\n            resolve()\n          }else{\n          }\n\n        },\n        error => {\n          console.log(error)\n          reject()\n        }\n      )\n\n    })\n\n    return promise;\n  }\n\n  getPageCount(){\n    let promise = new Promise ((resolve,reject) => {\n      this.officeListSrvc.getPageCount(this.pageIndex)\n      .subscribe(\n        (result) => {\n          this.pageEvent.length = result[0]['ID']\n          resolve()\n        },\n          error => {\n            console.log('key ' + localStorage.getItem(environment.tokenStorageKey));\n            console.log(error);\n            reject()\n          }\n      )\n    })\n    return promise;\n  }\n\n\n  getUserCredentials(){\n    this.userCredentialsSrvc.getPrivileges(localStorage.getItem(environment.tokenStorageKey))\n      .subscribe(\n         (res:UserModel) => {\n           console.log(\"​HeadOfficeListComponent -> getUserCredentials -> res\", res)\n          //  console.log(res)\n            this.userCredentials = res\n            this.currentCommission = res.Commission\n            this.currentParentID = res.UserAccountID\n            this.currentUserName = res.UserName\n            this.parentIDHistory.push(res.UserAccountID)\n            let level;\n            if(res.AccountType == \"OperatingHeadOffice\"){\n              level = 3;\n              this.maxUpstep = 2\n              this.pageIndex = 2\n            }else if(res.AccountType == \"HeadOffice\"){\n              level = 2;\n              this.maxUpstep = 1\n              this.pageIndex = 1\n            }else if(res.AccountType == \"Distributor\"){\n              level = 1;\n              this.maxUpstep = 0\n              this.pageIndex = 0\n            }else{\n              // should be logged out because shop or edited account type is not allowed here\n            }\n            console.log('pageindex: ' + this.pageIndex)\n            for(let i = 0; i < level; i++){\n              this.key[i] = true\n            }\n             console.log(this.key)\n\n            this.getListAndPageCount()\n        }\n      )\n  }\n  \n  lowrank(office, lowrankCommission, UserName){\n    // in case user force altered the pageIndex, the set it to 0 \n    if(this.pageIndex != 0){\n\n      this.parentIDHistory.push(this.currentParentID)\n\n\n      this.pageIndex -= 1;\n      this.currentParentID = office;\n      this.currentUserName = UserName;\n      this.currentCommission = lowrankCommission;\n      this.addOfficeCommisionValue = 0;\n      this.officeList = []\n      this.reload()\n\n    }else{\n      this.pageIndex = 0\n    }\n  }\n\n  uprank(){\n    // this will keep pageindex to not step up to its limit.\n    if(this.pageIndex <= 2 ){\n      if(this.maxUpstep != this.pageIndex){\n        this.pageIndex += 1;\n        this.currentParentID = this.parentIDHistory.pop();\n        this.officeList = []\n        this.reload()\n      }\n    }else{\n      console.log('pagindex overlapped')\n    }\n  }\n\n\n\n  // check to all of user accounts\n  officeIDCheck(){\n    console.log(this.addForm.value.UserName)\n    this.commonSrvc.checkIfUserNameExist(this.addForm.value.UserName)\n      .subscribe(\n        res => {\n          if(res){\n            this.addForm.controls['UserName'].setErrors({'invalid':true})\n            alert('already exist')\n          }else{\n            alert('available')\n          }\n        }\n      )\n  }\n\n  samplecheck(){\n    // this.addForm.status\n\t\tconsole.log('​HeadOfficeListComponent -> samplecheck -> this.addForm.status', this.addForm.status)\n    console.log('this.addOfficeCommisionValue', this.addOfficeCommisionValue)\n    console.log('this.currentParentID', this.currentParentID)\n  }\n  addHeadOffice(){\n    this.addForm.value.ParentUserAccountID = this.currentParentID\n\n    if(this.addForm.status == 'VALID'){\n\n      this.officeListSrvc.addOffice(this.addForm.value, this.pageIndex)\n        .subscribe(\n          (res:any) => {\n            console.log('add office result 2 : '+ res )\n  \n            if(res['status']){\n              alert('add office succesful')\n              this.reload()\n            }else{\n              alert('adding office fail')\n            }\n  \n          },\n          err =>{\n            if(err['status'] == 409){\n              alert('username already exist')\n            }else if(err['status'] == 400){\n              alert('please fill up all fields....')\n            }\n            console.log('add office error : ' + err)\n          }\n        )\n    }else{\n      console.log('addform status : '+this.addForm.status)\n      alert('please fill up the boxes correctly...')\n    }\n  }\n\n  OpenOfficeOtherInfo(password, regDate, phoneNumber, officeName, officeID){\n    const handHistoryDialog = this.dialog.open(OfficeInfoDialog, {\n      width: '40%',\n      data : {pass : password,\n              registrationDate : regDate,\n              contactno : phoneNumber,\n              name : officeName,\n              id : officeID}\n    });\n\n    handHistoryDialog.afterClosed().subscribe(\n      () =>{\n        console.log('handhistory closed')\n      }\n    )\n  }\n\n  //we call this function when the user interact with paginator \n  // or clicked the refresh button\n  // or uprank and lowrank\n  reload(){\n    this.backLoading = true;\n    this.getListAndPageCount()\n  }\n\n  openSearchNoResultFound(){\n    this.bottomsheet.open(UserNameCheckSalesBottomSheet)\n      .afterDismissed().subscribe(\n        () => { \n            console.log('dismissed');\n          }\n      ) \n  }\n}\n@Component({\n  selector: 'office-info-dialog',\n  templateUrl: 'office-info-dialog.html',\n})\nexport class OfficeInfoDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<OfficeInfoDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n}\n@Component({\n  selector: 'user-name-check-sales-bottom-sheet',\n  templateUrl: 'user-name-check-bottom-sheet.html',\n})\nexport class UserNameCheckSalesBottomSheet {\n\n  constructor() {}\n\n}","module.exports = \"<h1 mat-dialog-title>{{data.name}}</h1>\\r\\n<mat-divider></mat-divider>\\r\\n<div mat-dialog-content>\\r\\n  <mat-nav-list>\\r\\n    <mat-list-item><strong>ID :</strong>&nbsp;{{data.id}}</mat-list-item>\\r\\n    <mat-list-item><strong>Password :</strong>&nbsp;{{data.pass}}</mat-list-item>\\r\\n    <mat-list-item><strong>Registration Date :</strong>&nbsp;{{data.registrationDate | date : 'medium'}}</mat-list-item>\\r\\n    <mat-list-item><strong>Contact Number :</strong>&nbsp;{{data.contactno}}</mat-list-item>\\r\\n  </mat-nav-list>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-raised-button\\r\\n          color=\\\"accent\\\"\\r\\n          style=\\\"width: 100%\\\"  \\r\\n          (click)=\\\"close()\\\">Ok</button>\\r\\n</div>\"","module.exports = \"<p style=\\\"text-align: center;\\\">\\r\\n    <mat-icon color=\\\"warn\\\">warning</mat-icon>\\r\\n    <br>\\r\\n    <br>\\r\\n    <strong style=\\\"font-size: 50px; color:crimson\\\">no results found</strong>\\r\\n    \\r\\n</p>\"","module.exports = \"<h1 mat-dialog-title>{{data.screenname}}</h1>\\r\\n<mat-divider></mat-divider>\\r\\n<div mat-dialog-content>\\r\\n  <mat-nav-list>\\r\\n    <mat-list-item><strong>ID :</strong>&nbsp;{{data.id}}</mat-list-item>\\r\\n    <mat-list-item><strong>Registration Date :</strong>&nbsp;{{data.registrationDate | date : 'medium'}}</mat-list-item>\\r\\n    <mat-list-item><strong>Contact Number :</strong>&nbsp;{{data.contactno}}</mat-list-item>\\r\\n  </mat-nav-list>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-raised-button\\r\\n          color=\\\"accent\\\"\\r\\n          style=\\\"width: 100%\\\"  \\r\\n          (click)=\\\"close()\\\">Ok</button>\\r\\n</div>\"","module.exports = \"\"","module.exports = \"<mat-card class=\\\"card\\\" >\\r\\n  <div *ngIf=\\\"backLoading\\\" class=\\\"loading-shade\\\">\\r\\n    <mat-spinner color=\\\"accent\\\"></mat-spinner>\\r\\n    <button mat-button>retry</button>\\r\\n  </div>\\r\\n\\r\\n  <mat-card-header>\\r\\n    <mat-card-title>Member List</mat-card-title>\\r\\n    <button mat-icon-button \\r\\n            color=\\\"accent\\\" \\r\\n            style=\\\"right:0; top:0; margin-top:10px; position: absolute\\\" \\r\\n            (click)=\\\"reload()\\\"\\r\\n            matTooltip=\\\"sync\\\"><mat-icon>sync</mat-icon></button>\\r\\n  </mat-card-header>\\r\\n\\r\\n  <mat-divider></mat-divider>\\r\\n  <form [formGroup]=\\\"searchForm\\\" style=\\\"display: flex; justify-content: flex-end; margin-top: 10px;\\\">\\r\\n    <div>\\r\\n      <button *ngIf=\\\"showBackButton\\\"\\r\\n              mat-flat-button \\r\\n              color=\\\"primary\\\" \\r\\n              (click)=\\\"reload(); showBackButton = false;\\\"><mat-icon>arrow_back</mat-icon></button>\\r\\n\\r\\n      <mat-form-field style=\\\"width:90px; margin: 5px 5px 0;\\\">\\r\\n        <mat-select formControlName=\\\"column\\\">\\r\\n          <mat-option *ngFor=\\\"let t of columnOptions\\\" value=\\\"{{t.value}}\\\">{{t.name}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"input here...\\\" \\r\\n                formControlName=\\\"searchValue\\\">\\r\\n      </mat-form-field>\\r\\n      \\r\\n      <button *ngIf=\\\"searchForm.value.searchValue\\\"\\r\\n              matSuffix \\r\\n              mat-icon-button \\r\\n              color=\\\"accent\\\"\\r\\n              (click)=\\\"searchList()\\\"><mat-icon>search</mat-icon></button>\\r\\n    </div>\\r\\n  </form>\\r\\n  <mat-card-content style=\\\"overflow:auto;\\\" class=\\\"mat-elevation-z6\\\">\\r\\n    <div style=\\\"width:1500px;\\\">\\r\\n      <!-- member list table -->\\r\\n      <table mat-table matSort  [dataSource]=\\\"memberList\\\" style=\\\"width:100%\\\" (matSortChange)=\\\"sortData($event)\\\">\\r\\n    \\r\\n        <ng-container matColumnDef=\\\"row_number\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef >No.</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" >{{element.row_number}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"HeadOfficeID\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"HeadOfficeID\\\" >HO</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.HeadOfficeID}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"DistributorID\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"DistributorID\\\">Distributor</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.DistributorID}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"ShopID\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ShopID\\\">Store</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.ShopID}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"PlayerID\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"PlayerID\\\">ID</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.PlayerID}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"ScreenName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ScreenName\\\">Screen Name</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.ScreenName}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Money\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Money\\\">Money</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.Money | number}} </td>\\r\\n        </ng-container>\\r\\n        \\r\\n        <ng-container matColumnDef=\\\"CurrentPoints\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"CurrentPoints\\\">Points</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.CurrentPoints | number}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"TotalPoints\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"TotalPoints\\\">Total</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.TotalPoints | number}} </td>\\r\\n        </ng-container>\\r\\n        \\r\\n        <ng-container matColumnDef=\\\"OnlineStatus\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"OnlineStatus\\\">Status</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.OnlineStatus}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"LastLogin\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"LastLogin\\\">Last Login</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.LastLogin | date : 'medium'}} </td>\\r\\n        </ng-container>\\r\\n        \\r\\n        <ng-container matColumnDef=\\\"BlackListStatus\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Black list</th>\\r\\n          <td mat-cell *matCellDef=\\\"let e\\\">\\r\\n            <button mat-flat-button\\r\\n                    *ngIf=\\\"e.BlackListStatus == 'Blocked'\\\"\\r\\n                    color=\\\"accent\\\" \\r\\n                    style=\\\"margin:2px;\\\"\\r\\n                    matTooltip=\\\"relased\\\"\\r\\n                    matTooltipPosition=\\\"left\\\"\\r\\n                    (click)=\\\"openBlacklist(e.PlayerID)\\\"><mat-icon>check_circle</mat-icon></button>\\r\\n            <button mat-flat-button \\r\\n                    *ngIf=\\\"e.BlackListStatus != 'Blocked'\\\"\\r\\n                    color=\\\"warn\\\" \\r\\n                    style=\\\"margin:2px;\\\"\\r\\n                    matTooltip=\\\"block\\\"\\r\\n                    matTooltipPosition=\\\"above\\\"\\r\\n                    (click)=\\\"openBlacklist(e.PlayerID)\\\"><mat-icon>block</mat-icon></button>\\r\\n            <button mat-flat-button \\r\\n                    color=\\\"primary\\\" \\r\\n                    style=\\\"margin:2px;\\\"\\r\\n                    matTooltip=\\\"white\\\"\\r\\n                    matTooltipPosition=\\\"right\\\"><mat-icon>star</mat-icon></button></td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"Management\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Management</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <button mat-flat-button \\r\\n                      color=\\\"accent\\\" \\r\\n                      style=\\\"margin:2px\\\"\\r\\n                      matTooltip=\\\"hold\\\"\\r\\n                      matTooltipPosition=\\\"left\\\"><mat-icon>pause</mat-icon></button>\\r\\n              <button mat-flat-button \\r\\n                      color=\\\"warn\\\" \\r\\n                      style=\\\"margin:2px;\\\"\\r\\n                      matTooltip=\\\"delete\\\"\\r\\n                      matTooltipPosition=\\\"above\\\"><mat-icon>delete_outline</mat-icon></button> \\r\\n              <button mat-flat-button \\r\\n                      color=\\\"primary\\\" \\r\\n                      style=\\\"margin:2px;\\\"\\r\\n                      matTooltip=\\\"accept\\\"\\r\\n                      matTooltipPosition=\\\"above\\\"><mat-icon>check</mat-icon></button>\\r\\n              <button mat-icon-button\\r\\n                      style=\\\"margin:2px\\\"\\r\\n                      matTooltip=\\\"check other infos\\\"\\r\\n                      matTooltipPosition=\\\"right\\\"\\r\\n                      (click)=\\\"OpenMemberOtherInfo( element.RegisteredDateTime, \\r\\n                                                    element.PhoneNumber, \\r\\n                                                    element.ScreenName, \\r\\n                                                    element.PlayerID)\\\"><mat-icon>info_outlined</mat-icon></button>\\r\\n          </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"pageEvent\\\">\\r\\n      <mat-paginator  [length]=\\\"pageEvent.length\\\"\\r\\n                      [pageSize]=\\\"pageEvent.pageSize\\\"\\r\\n                      [pageSizeOptions]=\\\"pageSizeOptions\\\"\\r\\n                      showFirstLastButtons=\\\"true\\\"\\r\\n                      (page)=\\\"pageEvent = $event; reload()\\\"> </mat-paginator>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n  \"","import { Component, OnInit, Inject } from '@angular/core';\nimport {CommonService} from '../../../services/common/common.service'\nimport { environment } from '../../../../environments/environment.prod';\nimport { OptionModel } from '../../../interfaces/OptionModel'\nimport {PageEvent, MatDialog, MatDialogRef, MAT_DIALOG_DATA, Sort} from '@angular/material';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {BlackListDialog} from '../../../utilities/BlackListDialog/BlackListDialog'\ninterface memberListModel{\n  row_number:number,\n  HeadOfficeID: string,\n  DistributorID: string,\n  ShopID: string,\n  PlayerID: string,\n  ScreenName: string\n  BlackListStatus: string,\n  CurrentPoints: number,\n  TotalPoints: number,\n  LastLogin: string,\n  Money: number,\n  OnlineStatus: string,\n  PhoneNumber: string,\n  RegisteredDateTime: string\n}\n\n@Component({\n  selector: 'app-member-list',\n  templateUrl: './member-list.component.html',\n  styleUrls: ['./member-list.component.css']\n})\nexport class MemberListComponent implements OnInit {\n  constructor(private commonSrvc:CommonService,\n              public dialog: MatDialog,\n              fb:FormBuilder,) {\n\n    this.searchForm = fb.group({\n      searchValue: null,\n      column: '0'\n    });\n\n  }\n\n  //service variables\n    pageIndex:number = 5\n  //table variables\n    memberList:memberListModel[]\n\n    displayedColumns:string[] =[  \n      'row_number',\n      'HeadOfficeID',\n      'DistributorID',\n      'ShopID',\n      'PlayerID',\n      'ScreenName'  ,\n      'Money',\n      'CurrentPoints',\n      'TotalPoints',\n      'OnlineStatus',\n      'LastLogin',\n      'BlackListStatus',\n      'Management'\n    ]\n\n    tableSort:Sort = {active : 'LastLogin', direction : 'desc'}\n  //angular material search variables\n    searchForm:FormGroup;\n\n    columnOptions:OptionModel[]= [\n      {value : '0', name : 'User ID'},\n      {value : '1', name : 'Screen Name'},\n      {value : '2', name : 'Store ID'}\n    ]\n  //search variables\n    showBackButton:boolean = false\n    backLoading:boolean = true\n\n  // MatPaginator\n    // input\n    pageSizeOptions: number[] = environment.pageSizeOptions;\n\n    // Output\n    pageEvent: PageEvent = { pageIndex : 0, pageSize : environment.pageSizeOptions[0], previousPageIndex : 0, length: 0};\n\n  //lifecycle hooks\n    ngOnInit() {\n      this.getListAndPageCount()\n    }\n    ngOnDestroy() {\n      console.log('you leave member list')\n    }\n  //lifecycle hooks end\n\n\n  getListAndPageCount(){\n    Promise.all([this.getSupportList(),this.getPageCount()]).then(function() {\n      console.log('get list and page count successful');\n      }, function(){ //if promise or promise2 fail\n      console.log('something went wrong')\n    })\n  }\n\n  getSupportList(){\n    let promise = new Promise((resolve,reject) => {\n      this.commonSrvc.getList3(this.pageIndex, this.pageEvent.pageIndex * this.pageEvent.pageSize, this.pageEvent.pageSize, this.tableSort.active, this.tableSort.direction)\n      .subscribe(\n        (result :memberListModel[]) => {\n          //set artificial index\n          if(result.length > 0){\n            let row_number_new = this.pageEvent.pageIndex * this.pageEvent.pageSize\n            for(let i = 0; i <= result.length - 1; i++){\n              row_number_new += 1;\n              result[i].row_number = row_number_new\n            }\n            \n            this.memberList = result\n            this.backLoading = false\n          }else{\n          //show No results found if 0 result else dont show\n          }\n          resolve()\n        },\n        error => {\n          console.log(error)\n          reject()\n        }\n      )\n\n    })\n\n    return promise;\n  }\n\n  getPageCount(){\n    let promise = new Promise ((resolve,reject) => {\n      this.commonSrvc.getPageCount(this.pageIndex)\n      .subscribe(\n        (result) => {\n          this.pageEvent.length = result[0]['ID']\n          resolve()\n        },\n          error => {\n            console.log('key ' + localStorage.getItem(environment.tokenStorageKey));\n            console.log(error);\n            reject()\n          }\n      )\n    })\n    return promise;\n  }\n\n\n  searchList(){\n\n    this.commonSrvc.searchList(this.pageIndex,this.searchForm.value.column,this.searchForm.value.searchValue)\n    .subscribe(\n      (result:memberListModel[]) => {\n        console.log(result)\n        //if there's result\n        if(result.length > 0){\n          this.memberList = result\n\n          console.log('results found')\n        }else{\n          console.log('member list search no result')\n        }\n      },\n      error => {\n        if(error['statusText'] == 'Not Found'){\n\n          //empty list\n          this.memberList = []\n        }\n      }\n    )\n    this.showBackButton = true\n  }\n\n  reload(){\n    this.backLoading = true\n    this.getListAndPageCount()\n  }\n\n\n  OpenMemberOtherInfo(regDate, phoneNumber, sname, username){\n    const handHistoryDialog = this.dialog.open(MemberInfoDialog, {\n      width: '40%',\n      data : {\n              registrationDate : regDate,\n              contactno : phoneNumber,\n              screenname : sname,\n              id : username}\n    });\n\n    handHistoryDialog.afterClosed().subscribe(\n      () =>{\n        console.log('handhistory closed')\n      }\n    )\n  }\n\n  openBlacklist(value){\n    const blacklistDialog = this.dialog.open(BlackListDialog, {\n      width: '30%',\n      data : {blacklistmode : [false,true,false], value : value}\n    });\n\n    blacklistDialog.afterClosed().subscribe(\n      () =>{\n        this.reload()\n      }\n    )\n  }\n\n  sortData(sort: Sort){\n    this.tableSort = { active : sort.active, direction : sort.direction}\n    if(this.tableSort.direction){\n      this.reload()\n    }\n  }\n  \n\n}\n\n@Component({\n  selector: 'member-info-dialog',\n  templateUrl: 'member-info-dialog.html',\n})\nexport class MemberInfoDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<MemberInfoDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n}","module.exports = \"\"","module.exports = \"<mat-card class=\\\"card\\\" >\\n  <div *ngIf=\\\"backLoading\\\" class=\\\"loading-shade\\\">\\n    <mat-spinner color=\\\"accent\\\"></mat-spinner>\\n  </div>\\n\\n  <mat-card-header>\\n    <mat-card-title>Black list</mat-card-title>\\n    <button mat-icon-button \\n            color=\\\"accent\\\" \\n            style=\\\"right:0; top:0; margin-top:10px; position: absolute;\\\" \\n            (click)=\\\"getListAndPageCount()\\\"\\n            matTooltip=\\\"sync\\\"><mat-icon>sync</mat-icon></button>\\n\\n  </mat-card-header>\\n\\n  <mat-divider></mat-divider>\\n\\n  <form style=\\\"display: flex; justify-content: flex-end; margin-top: 10px;\\\">\\n    <div>\\n      <button *ngIf=\\\"showBackButton\\\"\\n              mat-flat-button \\n              color=\\\"primary\\\"\\n              style=\\\"margin-right:5px;\\\" \\n              (click)=\\\"getListAndPageCount(); showBackButton = false;\\\"><mat-icon>arrow_back</mat-icon></button>\\n\\n      <mat-form-field>\\n        <mat-select placeholder=\\\"search option\\\" [(value)]=\\\"optionValue\\\">\\n          <mat-option *ngFor=\\\"let p of playeropts\\\" [value]=\\\"p.value\\\">{{p.name}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field style=\\\"margin: 5px 5px 0;\\\">\\n        <input matInput\\n              [(ngModel)]=\\\"searchValue\\\"\\n              [ngModelOptions]=\\\"{standalone: true}\\\" \\n              placeholder=\\\"\\\" \\n              id=\\\"from\\\">\\n      </mat-form-field>\\n\\n      <button mat-button (click)=\\\"searchList()\\\"><mat-icon>search</mat-icon></button>\\n    </div>\\n  </form>\\n\\n  <mat-card-content style=\\\"overflow:auto;\\\" class=\\\"mat-elevation-z6\\\">\\n    <div style=\\\"width:1500px; margin:10px;\\\">\\n      <!-- member list table -->\\n      <table  mat-table \\n              matSort\\n              multiTemplateDataRows=\\\"true\\\" \\n              [dataSource]=\\\"blackList\\\"\\n              style=\\\"width:100%\\\" \\n              (matSortChange)=\\\"sortData($event)\\\">\\n\\n        <!-- no. -->\\n        <ng-container matColumnDef=\\\"row_number\\\">\\n          <th mat-header-cell *matHeaderCellDef >No.</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.row_number | number}} </td>\\n        </ng-container>\\n\\n        <!-- HeadOfficeID -->\\n        <ng-container matColumnDef=\\\"HeadOfficeID\\\" >\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"HeadOfficeID\\\">HO ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.HeadOfficeID}} </td>\\n        </ng-container>\\n\\n        <!-- DistributorID -->\\n        <ng-container matColumnDef=\\\"DistributorID\\\" >\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"DistributorID\\\">Distributor ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.DistributorID}} </td>\\n        </ng-container>\\n\\n        <!-- ShopID -->\\n        <ng-container matColumnDef=\\\"ShopID\\\" >\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ShopID\\\">Shop ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.ShopID}} </td>\\n        </ng-container>\\n\\n        <!-- user ID -->\\n        <ng-container matColumnDef=\\\"UserAccountID\\\" >\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"UserAccountID\\\">user ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.UserAccountID}} </td>\\n        </ng-container>\\n\\n        <!-- ScreenName -->\\n        <ng-container matColumnDef=\\\"ScreenName\\\" >\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ScreenName\\\">Screen Name</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.ScreenName}} </td>\\n        </ng-container>\\n\\n        <!--RegisteredDateTime -->\\n        <ng-container matColumnDef=\\\"RegisteredDateTime\\\" >\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"RegisteredDateTime\\\">Registration Date</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.RegisteredDateTime | date : 'medium'}} </td>\\n        </ng-container>\\n\\n        <!-- ReleaseDate -->\\n        <ng-container matColumnDef=\\\"ReleaseDate\\\" >\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ReleaseDate\\\">Release Date</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.ReleaseDate | date : 'medium'}} </td>\\n        </ng-container>\\n\\n        <!-- Reason -->\\n        <ng-container matColumnDef=\\\"Reason\\\" >\\n          <th mat-header-cell  mat-sort-header=\\\"Reason\\\" style=\\\"max-width:100px;\\\" *matHeaderCellDef>Reason</th>\\n          <td mat-cell style=\\\"max-width:100px;\\\" *matCellDef=\\\"let element\\\">{{element.Reason}} </td>\\n        </ng-container>\\n\\n        <!-- Status -->\\n        <ng-container matColumnDef=\\\"Status\\\" >\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"Status\\\">Status</th>\\n          <td mat-cell *matCellDef=\\\"let e\\\">\\n            <!-- {{e.Status}}  -->\\n            <!-- <br> -->\\n            <button mat-flat-button\\n                    *ngIf=\\\"e.Status == 'Blocked'\\\"\\n                    color=\\\"accent\\\" \\n                    style=\\\"margin:2px;\\\"\\n                    matTooltip=\\\"relased\\\"\\n                    matTooltipPosition=\\\"left\\\"\\n                    (click)=\\\"openBlacklist(e.UserAccountID)\\\"><mat-icon>check_circle</mat-icon></button>\\n            <button mat-flat-button \\n                    *ngIf=\\\"e.Status != 'Blocked'\\\"\\n                    color=\\\"warn\\\" \\n                    style=\\\"margin:2px;\\\"\\n                    matTooltip=\\\"block\\\"\\n                    matTooltipPosition=\\\"above\\\"\\n                    (click)=\\\"openBlacklist(e.UserAccountID)\\\"><mat-icon>block</mat-icon></button>\\n          </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      </table>\\n    </div>\\n\\n  </mat-card-content>\\n    <div *ngIf=\\\"pageEvent\\\">\\n      <mat-paginator  [length]=\\\"pageEvent.length\\\"\\n                      [pageSize]=\\\"pageEvent.pageSize\\\"\\n                      [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n                      showFirstLastButtons=\\\"true\\\"\\n                      (page)=\\\"pageEvent = $event; getListAndPageCount()\\\"> </mat-paginator>\\n    </div>\\n\\n  <mat-card-actions style=\\\"display: flex; justify-content:flex-end\\\">\\n    <button mat-flat-button\\n            color=\\\"primary\\\"\\n            (click)=\\\"blacklistPlayer()\\\"><mat-icon>add_box</mat-icon>&nbsp;black list</button>\\n  </mat-card-actions>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport {CommonService} from '../../../services/common/common.service'\nimport { BlackListService } from '../../../services/user/blackList/black-list.service'\nimport { FormsService } from '../../../services/utilities/forms.service'\nimport { environment } from '../../../../environments/environment.prod';\nimport { BlacklistModel } from '../../../interfaces/BlacklistModel'\nimport { NoResultBottomSheet2 } from '../../../utilities/NoResultBottomSheet/NoResultBottomSheet2'\nimport { BlackListDialog } from '../../../utilities/BlackListDialog/BlackListDialog'\nimport {PageEvent, Sort, MatDialog, MatBottomSheet} from '@angular/material';\n\n@Component({\n  selector: 'app-black-list',\n  templateUrl: './black-list.component.html',\n  styleUrls: ['./black-list.component.css']\n})\n\nexport class BlackListComponent implements OnInit {\n  /* blacklist functions are not here it's in the dialog */\n  constructor(private commonSrvc:CommonService,\n              private blackListSrvc:BlackListService,\n              private bottomsheet:MatBottomSheet,\n              private formSrvc:FormsService,\n              public dialog: MatDialog) { }\n\n  //service variables\n    pageIndex:number = 1\n  //table variables\n    blackList : BlacklistModel[] = []\n\n    displayedColumns:string[] =[  \n      'row_number',\n      'HeadOfficeID',      \n      'DistributorID',\n      'ShopID',\n      'UserAccountID',\n      'ScreenName',\n      'RegisteredDateTime',\n      'ReleaseDate',\n      'Reason',\n      'Status'\n    ]\n\n    tableSort:Sort = {active : 'Status', direction : 'desc'}\n    // MatPaginator\n      // input\n      pageSizeOptions: number[] = environment.pageSizeOptions;\n\n      // Output\n      pageEvent: PageEvent = { pageIndex : 0, pageSize : environment.pageSizeOptions[0], previousPageIndex : 0, length: 0};\n\n  //search variables\n    showBackButton:boolean = false\n    backLoading:boolean = true\n    playeropts:any[]\n    optionValue:string // value of playeroptions\n    searchValue:string\n\n  //lifecycle hooks\n    ngOnInit() {\n      this.playeropts = this.formSrvc.playerOnlySearchOptions\n      this.getListAndPageCount()\n    }\n\n    ngOnDestroy() {\n      console.log('you leave blacklist')\n    }\n\n  //lifecycle hooks end\n\n  getListAndPageCount(){\n    Promise.all([this.getSupportList(),this.getPageCount()]).then(function() {\n      console.log('get list and page count successful');\n        // this.backLoading = false\n      }, function(){ //if promise or promise2 fail\n      console.log('something went wrong')\n    })\n  }\n\n  getSupportList(){\n    let promise = new Promise((resolve,reject) => {\n      this.commonSrvc.getList3(this.pageIndex, this.pageEvent.pageIndex * this.pageEvent.pageSize, this.pageEvent.pageSize, this.tableSort.active, this.tableSort.direction)\n      .subscribe(\n        (result :BlacklistModel[]) => {\n\n          //show No results found if 0 result else dont show\n          if(result.length > 0){\n            //set artificial index\n              let row_number_new = this.pageEvent.pageIndex * this.pageEvent.pageSize\n              for(let i = 0; i <= result.length - 1; i++){\n                row_number_new += 1;\n                result[i].row_number = row_number_new\n              }\n            //set artificial index end\n\n            this.blackList = result\n            this.backLoading = false\n          }else{\n            // this.searchResult = true\n          }\n          \n          resolve()\n        },\n        error => {\n          console.log(error)\n          reject()\n        }\n      )\n\n    })\n\n    return promise;\n  }\n\n  getPageCount(){\n    let promise = new Promise ((resolve,reject) => {\n      this.commonSrvc.getPageCount(this.pageIndex)\n      .subscribe(\n        (result) => {\n          this.pageEvent.length = result[0]['ID']\n          resolve()\n        },\n          error => {\n            console.log('key ' + localStorage.getItem(environment.tokenStorageKey));\n            console.log(error);\n            reject()\n          }\n      )\n    })\n    return promise;\n  }\n\n  searchList(){\n    this.commonSrvc.searchList(this.pageIndex,this.optionValue,this.searchValue)\n    .subscribe(\n      (result:BlacklistModel[]) => {\n        //if there's result\n        if(result.length > 0){\n          this.blackList = result\n          this.showBackButton = true\n        }else{\n          console.log('no results found')\n        }\n      },\n      error => {\n        if(error['statusText'] == 'Not Found'){\n          //stopping getting list for awhile\n          let column = (this.optionValue == 'UserName') ? 'ID' : 'ScreenName'\n          this.openSearchNoResultFound(column)\n          //empty list\n          this.blackList = []\n        }\n      }\n    )\n  }\n\n  reload(){\n    this.backLoading = true\n    this.getListAndPageCount()\n  }\n\n  releaseUser(UserAccountID:string){\n\n    this.blackListSrvc.releaseUser(UserAccountID)\n    .subscribe(\n      result => {\n        this.getListAndPageCount()\n        console.log(result)\n          if(result){\n            alert('user released')\n          }\n      },\n      error => {\n        if(error['status'] == '404'){\n          alert('something went wrong')\n        }\n      }\n    )\n          \n  }\n\n  //we call this function when the user interact with paginator or clicked the refresh button\n  \n  sortData(sort: Sort){\n    this.tableSort = { active : sort.active, direction : sort.direction}\n    if(this.tableSort.direction){\n      this.reload()\n    }\n  }\n\n  blacklistPlayer(){\n\n    const handHistoryDialog = this.dialog.open(BlackListDialog, {\n      width: '30%',\n      data : {blacklistmode : [true,false,false]}\n    });\n\n    handHistoryDialog.afterClosed().subscribe(\n      () =>{\n        this.reload()\n      }\n    )\n  }\n\n  openBlacklist(value){\n    const blacklistDialog = this.dialog.open(BlackListDialog, {\n      width: '30%',\n      data : {blacklistmode : [false,true,false], value : value}\n    });\n\n    blacklistDialog.afterClosed().subscribe(\n      () =>{\n        this.reload()\n      }\n    )\n  }\n\n  openSearchNoResultFound(columnName:string){\n    this.bottomsheet.open(NoResultBottomSheet2,{\n      data : [\n        {value : this.searchValue, column : columnName, icon : 'person'} \n      ]\n    })\n      .afterDismissed().subscribe(\n        () => {\n            this.getListAndPageCount()\n          }\n      ) \n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-card class=\\\"card\\\" >\\n  <div *ngIf=\\\"backLoading\\\" class=\\\"loading-shade\\\">\\n    <mat-spinner color=\\\"accent\\\"></mat-spinner>\\n  </div>\\n\\n  <mat-card-header>\\n    <mat-card-title>Connecting User</mat-card-title>\\n    <mat-card-subtitle>connecting user: {{connectingUserList?.length | number}}</mat-card-subtitle>\\n    <button mat-icon-button \\n            color=\\\"accent\\\" \\n            style=\\\"right:0; top:0; margin-top:10px; position: absolute;\\\" \\n            (click)=\\\"reload()\\\"\\n            matTooltip=\\\"sync\\\"><mat-icon>sync</mat-icon></button>\\n\\n  </mat-card-header>\\n\\n  <mat-divider></mat-divider>\\n  <br>\\n  <mat-card-content style=\\\"overflow:auto;\\\" class=\\\"mat-elevation-z6\\\">\\n    <div style=\\\"width:1800px;\\\">\\n      <!-- member list table -->\\n      <table  mat-table matSort \\n              [dataSource]=\\\"connectingUserList\\\"\\n              style=\\\"width:100%\\\" \\n              (matSortChange)=\\\"sortData($event)\\\">\\n\\n\\n        <!-- game -->\\n        <ng-container matColumnDef=\\\"game\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"game\\\">game</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">pending</td>\\n        </ng-container>\\n\\n        <!-- location -->\\n        <ng-container matColumnDef=\\\"location\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"location\\\">location</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">pending</td>\\n        </ng-container>\\n\\n        <!-- blind -->\\n        <ng-container matColumnDef=\\\"blind\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"blind\\\">blind</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">pending</td>\\n        </ng-container>\\n\\n        <!-- HeadOfficeID -->\\n        <ng-container matColumnDef=\\\"HeadOfficeID\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"HeadOfficeID\\\">HO ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.HeadOfficeID}} </td>\\n        </ng-container>\\n\\n        <!-- DistributorID -->\\n        <ng-container matColumnDef=\\\"DistributorID\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"DistributorID\\\">Distributor ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.DistributorID}} </td>\\n        </ng-container>\\n\\n        <!-- Shop ID -->\\n        <ng-container matColumnDef=\\\"ShopID\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"ShopID\\\">Shop ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.ShopID}} </td>\\n        </ng-container>\\n\\n        <!-- player ID -->\\n        <ng-container matColumnDef=\\\"PlayerID\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"PlayerID\\\">user ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.PlayerID}} </td>\\n        </ng-container>\\n\\n        <!-- screen name-->\\n        <ng-container matColumnDef=\\\"ScreenName\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"ScreenName\\\">Screen Name</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.ScreenName}} </td>\\n        </ng-container>\\n\\n        <!-- deposit -->\\n        <ng-container matColumnDef=\\\"Deposit\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"Deposit\\\">Deposit</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.Deposit | number}} </td>\\n        </ng-container>\\n\\n        <!-- withdraw -->\\n        <ng-container matColumnDef=\\\"Withdraw\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"Withdraw\\\">Withdraw</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.Withdraw | number}} </td>\\n        </ng-container>\\n        \\n        <!-- money -->\\n        <ng-container matColumnDef=\\\"Money\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"Money\\\">Money</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.Money | number}} </td>\\n        </ng-container>\\n        \\n        <!-- points -->\\n        <ng-container matColumnDef=\\\"Points\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"Points\\\">Points</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.Points | number}} </td>\\n        </ng-container>\\n        \\n        <!-- TotalMoney -->\\n        <ng-container matColumnDef=\\\"TotalMoney\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"TotalMoney\\\">Total</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.TotalMoney | number}} </td>\\n        </ng-container>\\n\\n        <!-- UserProfit -->\\n        <ng-container matColumnDef=\\\"UserProfit\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"UserProfit\\\">User Profit</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.UserProfit | number}} </td>\\n        </ng-container>\\n\\n        <!-- BettingAmount -->\\n        <ng-container matColumnDef=\\\"BettingAmount\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"BettingAmount\\\">Betting Amount</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.BettingAmount | number}} </td>\\n        </ng-container>\\n\\n        <!-- Rake -->\\n        <ng-container matColumnDef=\\\"Rake\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"Rake\\\">Rake</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.Rake | number}} </td>\\n        </ng-container>\\n\\n        <!-- OHORake -->\\n        <ng-container matColumnDef=\\\"OHORake\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"OHORake\\\">OHORake</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.OHORake | number}} </td>\\n        </ng-container>\\n\\n        <!-- HORake -->\\n        <ng-container matColumnDef=\\\"HORake\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"HORake\\\">HORake</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.HORake | number}} </td>\\n        </ng-container>\\n\\n        <!-- DRake -->\\n        <ng-container matColumnDef=\\\"DRake\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"DRake\\\">DRake</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.DRake | number}} </td>\\n        </ng-container>\\n\\n        <!-- SRake -->\\n        <ng-container matColumnDef=\\\"SRake\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"SRake\\\">SRake</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.SRake | number}} </td>\\n        </ng-container>\\n\\n        <!-- BlackListStatus -->\\n        <ng-container matColumnDef=\\\"BlackListStatus\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"BlackListStatus\\\">BlackListStatus</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.BlackListStatus}} </td>\\n        </ng-container>\\n\\n        <!-- IP -->\\n        <ng-container matColumnDef=\\\"IP\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"IP\\\">IP</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.IP}} </td>\\n        </ng-container>\\n\\n        <!-- ConnectingTime -->\\n        <ng-container matColumnDef=\\\"ConnectingTime\\\">\\n          <th mat-header-cell \\n              *matHeaderCellDef\\n              mat-sort-header=\\\"ConnectingTime\\\">ConnectingTime</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.ConnectingTime | date : 'medium'}} </td>\\n        </ng-container>\\n\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      </table>\\n    </div>\\n\\n    <!-- <div *ngIf=\\\"pageEvent\\\">\\n      <mat-paginator  [length]=\\\"pageEvent.length\\\"\\n                      [pageSize]=\\\"pageEvent.pageSize\\\"\\n                      [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n                      showFirstLastButtons=\\\"true\\\"\\n                      (page)=\\\"pageEvent = $event; reload()\\\"> </mat-paginator>\\n    </div> -->\\n  </mat-card-content>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../../../services/common/common.service';\nimport { ConnectingUserService } from '../../../services/user/connectingUser/connecting-user.service';\nimport { environment } from '../../../../environments/environment.prod';\nimport { ConnectingUserModel } from '../../../interfaces/ConnectingUserModel';\nimport {PageEvent, Sort} from '@angular/material';\n\n@Component({\n  selector: 'app-connecting-user',\n  templateUrl: './connecting-user.component.html',\n  styleUrls: ['./connecting-user.component.css']\n})\nexport class ConnectingUserComponent implements OnInit {\n\n  constructor(private commonSrvc:CommonService, private connectingUserSrvc:ConnectingUserService) { }\n\n  //service variables\n    pageIndex:number = 3\n\n  //table variables\n    connectingUserList:ConnectingUserModel[]\n\n    displayedColumns:string[] =[\n      'game',\n      'location',\n      'blind',\n      'HeadOfficeID',\n      'DistributorID',\n      'ShopID',\n      'PlayerID',\n      'ScreenName',\n      'Deposit',\n      'Withdraw',\n      'Money',\n      'Points',\n      'TotalMoney',\n      'UserProfit',\n      'BettingAmount',\n      'Rake',\n      'OHORake',\n      'HORake',\n      'DRake',\n      'SRake',\n      'BlackListStatus',\n      'IP',\n      'ConnectingTime'\n    ]\n\n    tableSort:Sort = {active : 'TotalRake', direction : 'desc'}\n  //search variables\n    backLoading:boolean = true\n\n  // MatPaginator\n    // input\n    // pageSizeOptions: number[] = environment.pageSizeOptions;\n\n    // Output\n    // pageEvent: PageEvent = { pageIndex : 0, pageSize : environment.pageSizeOptions[0], previousPageIndex : 0, length: 0};\n\n  //lifecycle hooks\n    ngOnInit() {\n      this.getListAndPageCount()\n    }\n    ngOnDestroy() {\n      console.log('you leave connecting user')\n    }\n\n  //lifecycle hooks end\n\n\n  getListAndPageCount(){\n    // Promise.all([this.getSupportList(),this.getPageCount()]).then(function() {\n    Promise.all([this.getSupportList()]).then(function() {\n      console.log('get list and page count successful');\n      }, function(){ //if promise or promise2 fail\n      console.log('something went wrong')\n    })\n  }\n\n  getSupportList(){\n    let promise = new Promise((resolve,reject) => {\n      this.connectingUserSrvc.getConnectingUsers()\n      .subscribe(\n        (result :ConnectingUserModel[]) => {\n          console.log(result)\n          if(result.length > 0){\n            \n            //set artificial index\n              for(let i = 0; i <= result.length - 1; i++){\n                result[i].TotalMoney = result[i].Money + result[i].Points\n                result[i].UserProfit = result[i].Deposit - result[i].Money \n              }\n            //set artificial index end\n  \n            this.connectingUserList = result\n            this.backLoading = false\n          }else{\n\n          }\n          resolve()\n        },\n        error => {\n          console.log(error)\n          reject()\n        }\n      )\n\n    })\n\n    return promise;\n  }\n\n  // getPageCount(){\n  //   let promise = new Promise ((resolve,reject) => {\n  //     this.commonSrvc.getPageCount(this.pageIndex)\n  //     .subscribe(\n  //       (result) => {\n  //         this.pageEvent.length = result[0]['ID']\n  //         resolve()\n  //       },\n  //         error => {\n  //           console.log('key ' + localStorage.getItem(environment.tokenStorageKey));\n  //           console.log(error);\n  //           reject()\n  //         }\n  //     )\n  //   })\n  //   return promise;\n  // }\n\n\n  searchList(event){\n    \n\n    event.preventDefault();\n    let target = event.target;\n                \n    let column = target.querySelector('#column').value\n    let value = (target.querySelector('#value').value) ? target.querySelector('#value').value : environment.ifSearchVariableEmpty\n\n      this.commonSrvc.searchList(this.pageIndex,column,value)\n      .subscribe(\n        (result:ConnectingUserModel[]) => {\n          console.log(result)\n          //if there's result\n          if(result.length > 0){\n            this.connectingUserList = result\n            console.log('results found')\n          }\n        },\n        error => {\n          if(error['statusText'] == 'Not Found'){\n            //empty list\n            this.connectingUserList = []\n          }\n        }\n      )\n\n  }\n\n  reload(){\n    this.backLoading = true\n    this.getListAndPageCount()\n  }\n\n  \n  sortData(sort: Sort){\n    this.tableSort = { active : sort.active, direction : sort.direction}\n    this.reload()\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<mat-card class=\\\"card\\\" >\\n  <div *ngIf=\\\"backLoading\\\" class=\\\"loading-shade\\\">\\n    <mat-spinner color=\\\"accent\\\"></mat-spinner>\\n  </div>\\n\\n  <mat-card-header>\\n    <mat-card-title>IP List</mat-card-title>\\n    <button mat-icon-button \\n            color=\\\"accent\\\" \\n            style=\\\"right:0; top:0; margin-top:10px; position: absolute;\\\" \\n            (click)=\\\"reload()\\\"\\n            matTooltip=\\\"sync\\\"><mat-icon>sync</mat-icon></button>\\n\\n  </mat-card-header>\\n\\n  <mat-divider></mat-divider>\\n\\n  <form style=\\\"display: flex; justify-content: flex-end; margin-top: 10px;\\\">\\n    <div >\\n      <button *ngIf=\\\"showBackButton\\\"\\n              mat-flat-button \\n              color=\\\"primary\\\"\\n              style=\\\"margin-right:5px;\\\" \\n              (click)=\\\"reload(); showBackButton = false;\\\"><mat-icon>arrow_back</mat-icon></button>\\n              \\n      <mat-form-field style=\\\"width:90px; margin: 5px 5px 0;\\\">\\n        <mat-select [(value)]=\\\"optionValue\\\">\\n          <mat-option *ngFor=\\\"let t of columnOptions\\\" value=\\\"{{t.value}}\\\">{{t.name}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field style=\\\"margin: 5px 5px 0;\\\">\\n        <input matInput\\n              [(ngModel)]=\\\"searchValue\\\"\\n              [ngModelOptions]=\\\"{standalone: true}\\\" \\n              placeholder=\\\"input here...\\\" \\n              id=\\\"from\\\">\\n      </mat-form-field>\\n\\n      <button mat-button \\n              (click)=\\\"searchList()\\\"\\n              *ngIf=\\\"searchValue\\\"><mat-icon>search</mat-icon></button>\\n    </div>\\n  </form>\\n\\n  <mat-card-content style=\\\"overflow:auto;\\\" class=\\\"mat-elevation-z6\\\">\\n    <div style=\\\"width:1500px;\\\">\\n      <!-- member list table -->\\n      <table  mat-table matSort \\n              [dataSource]=\\\"ipList\\\"\\n              style=\\\"width:100%\\\" \\n              (matSortChange)=\\\"sortData($event)\\\">\\n\\n        <!-- no. -->\\n        <ng-container matColumnDef=\\\"row_number\\\">\\n          <th mat-header-cell *matHeaderCellDef>No.</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.row_number | number}} </td>\\n        </ng-container>\\n\\n        <!-- no. -->\\n        <ng-container matColumnDef=\\\"HOID\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"HOID\\\">HO ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.HOID}} </td>\\n        </ng-container>\\n\\n        <!-- DistributorID -->\\n        <ng-container matColumnDef=\\\"DistributorID\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"DistributorID\\\">Distributor ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.DistributorID}} </td>\\n        </ng-container>\\n\\n        <!-- ShopID -->\\n        <ng-container matColumnDef=\\\"ShopID\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ShopID\\\">Store ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.ShopID}} </td>\\n        </ng-container>\\n\\n        <!-- PlayerID -->\\n        <ng-container matColumnDef=\\\"PlayerID\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"PlayerID\\\">user ID</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.PlayerID}} </td>\\n        </ng-container>\\n\\n        <!-- ScreenName -->\\n        <ng-container matColumnDef=\\\"ScreenName\\\">\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"ScreenName\\\">Screen name</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.ScreenName}} </td>\\n        </ng-container>\\n\\n        <!-- IP -->\\n        <ng-container matColumnDef=\\\"IP\\\" >\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"IP\\\">IP</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.IP}} </td>\\n        </ng-container>\\n\\n        <!-- LoginDateTime -->\\n        <ng-container matColumnDef=\\\"LoginDateTime\\\" >\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header=\\\"LoginDateTime\\\">Connected date</th>\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{element.LoginDateTime | date : 'medium'}} </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      </table>\\n    </div>\\n\\n    <div *ngIf=\\\"pageEvent\\\">\\n      <mat-paginator  [length]=\\\"pageEvent.length\\\"\\n                      [pageSize]=\\\"pageEvent.pageSize\\\"\\n                      [pageSizeOptions]=\\\"pageSizeOptions\\\"\\n                      showFirstLastButtons=\\\"true\\\"\\n                      (page)=\\\"pageEvent = $event; reload()\\\"> </mat-paginator>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from '../../../services/common/common.service'\nimport { environment } from '../../../../environments/environment.prod';\nimport { IPListModel } from '../../../interfaces/IPListModel'\nimport {PageEvent, Sort, MatBottomSheet} from '@angular/material';\nimport { OptionModel } from '../../../interfaces/OptionModel'\nimport { NoResultBottomSheet2 } from '../../../utilities/NoResultBottomSheet/NoResultBottomSheet2'\n@Component({\n  selector: 'app-ipinquire',\n  templateUrl: './ipinquire.component.html',\n  styleUrls: ['./ipinquire.component.css']\n})\nexport class IPinquireComponent implements OnInit {\n  constructor(private commonSrvc:CommonService,\n              public bottomsheet:MatBottomSheet) { }\n\n  //service variables\n    pageIndex:number = 3\n  //table variables\n    ipList:IPListModel[]\n    displayedColumns:string[] =[  \n      'row_number',\n      'HOID',\n      'DistributorID',\n      'ShopID',\n      'PlayerID',\n      'ScreenName',\n      'IP',\n      'LoginDateTime'\n    ]\n\n    tableSort:Sort = {active : 'LoginDateTime', direction : 'desc'}\n\n    // MatPaginator\n      // input\n      pageSizeOptions: number[] = environment.pageSizeOptions;\n\n      // Output\n      pageEvent: PageEvent = { pageIndex : 0, pageSize : environment.pageSizeOptions[0], previousPageIndex : 0, length: 0};\n\n  //search variables\n    showBackButton:boolean = false\n    backLoading:boolean = true\n    searchValue:string = ''\n\n    optionValue:string = '0'\n    columnOptions:OptionModel[]= [\n      {value : '0', name : 'User ID'},\n      {value : '1', name : 'Screen Name'},\n      {value : '2', name : 'IP'}\n    ]\n\n  //lifecycle hooks\n    ngOnInit() {\n      this.getListAndPageCount()\n    }\n\n    ngOnDestroy() {\n      console.log('you leave ip inquire')\n    }\n\n  //lifecycle hooks end\n\n  getListAndPageCount(){\n    Promise.all([this.getSupportList(),this.getPageCount()]).then(function() {\n      console.log('get list and page count successful');\n      }, function(){ //if promise or promise2 fail\n      console.log('something went wrong')\n    })\n  }\n\n  getSupportList(){\n    let promise = new Promise((resolve,reject) => {\n      this.commonSrvc.getList3(this.pageIndex, this.pageEvent.pageIndex * this.pageEvent.pageSize, this.pageEvent.pageSize, this.tableSort.active, this.tableSort.direction)\n      .subscribe(\n        (result :IPListModel[]) => {\n          console.log(result)\n          //show No results found if 0 result else dont show\n          if(result.length > 0){\n            //set artificial index\n              let row_number_new = this.pageEvent.pageIndex * this.pageEvent.pageSize\n              for(let i = 0; i <= result.length - 1; i++){\n                row_number_new += 1;\n                result[i].row_number = row_number_new\n              }\n\n            this.ipList = result\n            this.backLoading = false\n          }else{\n\n          }\n          resolve()\n        },\n        error => {\n          console.log(error)\n          reject()\n        }\n      )\n\n    })\n\n    return promise;\n  }\n\n  getPageCount(){\n    let promise = new Promise ((resolve,reject) => {\n      this.commonSrvc.getPageCount(this.pageIndex)\n      .subscribe(\n        (result) => {\n          this.pageEvent.length = result[0]['ID']\n          resolve()\n        },\n          error => {\n            console.log('key ' + localStorage.getItem(environment.tokenStorageKey));\n            console.log(error);\n            reject()\n          }\n      )\n    })\n    return promise;\n  }\n\n  searchList(){\n    this.commonSrvc.searchList(this.pageIndex,this.optionValue,this.searchValue)\n    .subscribe(\n      (result:IPListModel[]) => {\n        console.log(result)\n        if(result.length > 0){\n          this.ipList = result\n          console.log('results found')\n        }else{\n          console.log('ip search no result')\n        }\n      },\n      error => {\n        if(error['statusText'] == 'Not Found'){\n          let column = (this.optionValue == '0') ? 'ID' : (this.optionValue == '1') ? 'Screen Name' : 'IP'\n          this.openSearchNoResultFound(column)\n          //empty list\n          this.ipList = []\n        }\n      }\n    )\n\n  }\n\n  //we call this function when the user interact with paginator or clicked the refresh button\n  reload(){\n    this.backLoading = true; \n    this.getListAndPageCount()\n  }\n\n  sortData(sort: Sort){\n    this.tableSort = { active : sort.active, direction : sort.direction}\n    if(this.tableSort.direction){\n      this.reload()\n    }\n  }\n\n  openSearchNoResultFound(columnName:string){\n    this.bottomsheet.open(NoResultBottomSheet2,{\n      data : [\n        {value : this.searchValue, column : columnName, icon : 'person'} \n      ]\n    })\n      .afterDismissed().subscribe(\n        () => {\n            this.reload()\n          }\n      ) \n  }\n\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport { CommonService } from './../services/common/common.service'\n@Directive({\n  selector: '[appTranslate]'\n})\nexport class TranslateDirective{\n\n  text:string[][] = [\n    //sales\n    ['Sales', '영업'],\n    ['head office list', '본사 목록'],\n    ['member list', '회원리스트'],\n    //calculate\n    ['Calculate', '정산'],\n    ['calculate manage', '정산관리'],\n    ['user profit', '유저손익관리'],\n    //user\n    ['User', '유저'],\n    ['connecting user', '접속중인 회원'],\n    ['black list', '블랙리스트'],\n    ['IP inquire', 'IP조회'],\n    //deposit and withdraw\n    ['Deposit &amp; Withdraw', '충환전'],\n    ['deposit management', '충전 관리'],\n    ['withdraw management', '환전 관리'],\n    //notice\n    ['Notice', '공지사항'],\n    ['lobby notice', 'web 유저'],\n    ['in gaming table', '게임'],\n    ['1:1 support', '1대1문의'],\n\n    ['Log', '로그'],\n    ['game log', '게임로그'],\n    ['jackpot log', '잭팟로그'],\n    ['transfer log', '선물로그'],\n    ['point log', '포인트로그'],\n  ]\n\n  constructor(private el: ElementRef, private commonSrvc:CommonService) {}\n\n   ngAfterViewInit(){\n    this.translate()\n\n   }\n\n   toKorean(){\n    for(let t of this.text ){\n      if(t[0] == this.el.nativeElement.innerHTML){\n        this.el.nativeElement.innerHTML = t[1]\n      }\n    }\n   }\n\n   toEnglish(){\n    for(let t of this.text ){\n      if(t[1] == this.el.nativeElement.innerHTML){\n        this.el.nativeElement.innerHTML = t[0]\n      }\n    }\n   }\n\n   translate(){\n      if(localStorage.getItem('language') == 'korean'){\n        this.toKorean()\n      }else if(localStorage.getItem('language') == 'english'){\n        this.toEnglish()\n      }else{\n        this.toKorean()\n      }\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { environment } from '../../../environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAuthGuard implements CanActivate {\n  constructor(private router:Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if(environment.enableLogin){\n      if(!localStorage.getItem(environment.tokenStorageKey)){\n        this.router.navigate(['login']);\n        return false;\n      }else{\n        return true;\n      }\n    }else{\n      return true;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from \"rxjs/operators\";\nimport { environment } from '../../../environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAuthService {\n  private authenticated:boolean = false\n\n  private httpOptions:any\n  public server:string = 'http://192.168.254.109:8080'\n\n  constructor(private http:Http) {\n    // environment.production \n    //   ? this.server = 'https://tester-holdem-server.4b63.pro-ap-southeast-2.openshiftapps.com' \n    //   : this.server = 'http://192.168.254.101:8080';\n  }\n\n  get isAuthenticated(){\n    return this.authenticated\n  }\n\n  setLoggedIn(value:boolean){\n    this.authenticated = value\n  }\n\n  storeToken(token:string){\n    localStorage.setItem(environment.tokenStorageKey, token)\n    this.authenticated = true\n  }\n\n  login(UserName, Password){\n    //post these details to API return token if correct credentials\n    console.log('sent')\n    return this.http.post(this.server+'/Api/v1/Admin/Login',{\n      UserName,\n      Password\n    })      \n    .pipe(\n      map(res => {\n        return res.json()\n      })\n    )\n  }\n\n\n  get httpOption(){\n    this.httpOptions = {\n      headers: new Headers({\n        'Content-Type':  'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(environment.tokenStorageKey)}`\n      })\n    };\n\n    return this.httpOptions;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from \"rxjs/operators\";\nimport { environment } from '../../../../environments/environment.prod';\nimport {UserAuthService} from '../../UserAuth/user-auth.service'\n@Injectable({\n  providedIn: 'root'\n})\nexport class LowrankService {\n\n//http request variables\n  page:string[] = [\n    '3', //0\n    '2', //1\n    '1' //2\n  ]\n\n  constructor(private http:Http, private userAuthSrvc:UserAuthService) { }\n  \n  getLowrank(offset:number, office:string, pageindex:number){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/CalculateManage/LowRank/'+this.page[pageindex]\n                                            +'/Office/'+office+'/Limit/'+environment.resultLimit+'/Offset/'+offset+'/', this.userAuthSrvc.httpOption)\n    .pipe(\n      map( res => res.arrayBuffer().byteLength > 0 ? res.json() : {} )\n    )\n  }\n  // pageIndex:number, offset:number, limit:number, orderBy:string, direction:string\n  getLowrank2(pageindex:number, offset:number, limit:number, order:string, direction:string, office:string ){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/CalculateManage/LowRank/'+this.page[pageindex]\n                                            +'/Office/'+office+'/Limit/'+limit+'/Offset/'+offset\n                                            +'/Order/'+order+'/Direction/'+direction, this.userAuthSrvc.httpOption)\n    .pipe(\n      map( res => res.arrayBuffer().byteLength > 0 ? res.json() : {} )\n    )\n  }\n  \n  \n  getPageCount(pageindex:number, office:string){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/CalculateManage/Pagination/'+this.page[pageindex]+'/Office/'+office, this.userAuthSrvc.httpOption)\n    .pipe(\n      map( res => res.arrayBuffer().byteLength > 0 ? res.json() : {} )\n      )\n    }\n    \n  search(pageindex:number, office:string, startDateTime:string, endDateTime:string){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/CalculateManage/Search/LowRank/'+this.page[pageindex]\n                                            +'/Office/'+office+'/StartDateTime/'+startDateTime\n                                            +'/EndDateTime/'+endDateTime, this.userAuthSrvc.httpOption)\n      .pipe(\n        map( res => res.arrayBuffer().byteLength > 0 ? res.json() : {})\n      )\n  }\n\n  get getToken(){\n    return localStorage.getItem(environment.tokenStorageKey);\n  }\n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { map } from \"rxjs/operators\";\nimport { environment } from '../../../environments/environment.prod';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserProfitService {\n\n  constructor(private http:Http) { }\n  \n  httpOptions = {\n    headers: new Headers({\n      'Content-Type':  'application/json',\n      'Authorization': `Bearer ${localStorage.getItem(environment.tokenStorageKey)}`\n    })\n  }\n\n  searchUserProfit(datetimeStart,datetimeEnd, value){\n    return this.http.get(environment.apiUrl + '/Api/v1/UserProfit/Search/ScreenName/'+value+'/StartDate/'+datetimeStart+'/EndDate/'+datetimeEnd)\n      .pipe(\n        map(res => res.json())\n      )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { map } from \"rxjs/operators\";\nimport { environment } from '../../../environments/environment.prod';\n// import { environment } from '../../../environments/environment'\nimport { Router } from '@angular/router';\nimport { UserAuthService } from '../../services/UserAuth/user-auth.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  constructor(private http:Http, private router:Router, private userAuthSrvc:UserAuthService) { }\n\n  //user active/inactive variables\n    private userIsActive:boolean = true\n\n  //http request variables\n  page:string[] = [\n    'DepositList',//0\n    'BlackList',//1\n    'GameLogList',//2\n    'IPList',//3\n    'OneOnOne',//4\n    'MembersList',//5\n    'WithdrawHistoryList',//6\n    'UserProfit',//7\n    'TransferHistoryList'//8\n  ]\n\n\n  logout(){\n    localStorage.clear()\n    this.userAuthSrvc.setLoggedIn(false)\n    this.router.navigate(['/login'])\n  }\n  \n  //for http request every time, if user is not active userIsActive = false\n    setUserActive(value:boolean){\n      this.userIsActive = value\n    }\n\n    get userActive(){\n      return this.userIsActive\n    }\n\n\n  getList(pageIndex:number, offset:number){\n      return this.http.get(this.userAuthSrvc.server + '/Api/v1/'+this.page[pageIndex]+'/Limit/'+environment.resultLimit+'/Offset/'+offset+'/', this.userAuthSrvc.httpOption)\n      .pipe(\n        map( res => res.arrayBuffer().byteLength > 0 ? res.json() : {} )\n      )\n  }\n  \n  getList2(pageIndex:number, offset:number, limit:number){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/'+this.page[pageIndex]+'/Limit/'+limit+'/Offset/'+offset+'/', this.userAuthSrvc.httpOption)\n    .pipe(\n      map( res => res.arrayBuffer().byteLength > 0 ? res.json() : {} )\n      )\n    }\n    \n  getList3(pageIndex:number, offset:number, limit:number, orderBy:string, direction:string){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/'+this.page[pageIndex]+'/Limit/'+limit+'/Offset/'+offset+'/Order/'+orderBy+'/Direction/'+direction, this.userAuthSrvc.httpOption)\n    .pipe(\n      map( res => res.arrayBuffer().byteLength > 0 ? res.json() : {} )\n      )\n    }\n      \n  getList4(pageIndex:number, offset:number, token:string){\n      return this.http.get(this.userAuthSrvc.server + '/Api/v1/'+this.page[pageIndex]+'/Limit/'+environment.resultLimit+'/Offset/'+offset+'/',this.userAuthSrvc.httpOption)\n      .pipe(\n        map( res => res.arrayBuffer().byteLength > 0 ? res.json() : {} )\n      )\n  }\n\n  getPageCount(pageIndex:number){\n    console.log('page count request...')\n\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/Pagination/'+pageIndex, this.userAuthSrvc.httpOption)\n    .pipe(\n      map(res => res.arrayBuffer().byteLength > 0 ? res.json() : {} )\n    )\n  }\n\n  searchList(pageIndex:number,column:string, value:string){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/'+this.page[pageIndex]+'/Search/Column/'+column+'/Value/'+value, this.userAuthSrvc.httpOption)\n    .pipe(\n      map(res => res.arrayBuffer().byteLength > 0 ? res.json() : {} )\n    )\n  }\n\n  searchListWithDate(pageIndex:number,column:string, value:string, startDate:string, endDate:string){\n    return this.http.get(this.userAuthSrvc.server + \n                        '/Api/v1/'+this.page[pageIndex]+'/Search/Column/'+column+'/Value/'+value+'/StartDate/'+startDate+'/EndDate/'+endDate, \n                        this.userAuthSrvc.httpOption)\n    .pipe(\n      map(res => res.arrayBuffer().byteLength > 0 ? res.json() : {} )\n    )\n  }\n\n  checkIfUserNameExist(username:string){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/UserNameCheck/'+username)\n    .pipe(\n      map( res => res.json() )\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http  } from '@angular/http';\nimport { DepositDailyModel } from '../../interfaces/DepositDailyModel'\nimport { WithdrawDailyModel } from '../../interfaces/WithdrawDailyModel'\nimport {UserAuthService } from '../UserAuth/user-auth.service'\nimport { map } from \"rxjs/operators\";\nimport { Subject } from 'rxjs/Rx';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n    //observables\n    withdrawToday = new Subject<WithdrawDailyModel[]>();\n    depositToday = new Subject<DepositDailyModel[]>();\n\n    totalMemberObservable = new Subject<string>();\n    totalRegisteredTodayObservable = new Subject<string>();\n    connectingMembersObservable = new Subject<string>();\n    \n    totalWithdrawTodayObservable = new Subject<string>();\n    totalDepositTodayObservable = new Subject<string>();\n    \n  constructor(private http:Http, private userAuthSrvc:UserAuthService) { }\n\n\n  emitTotalMember(val){\n    this.totalMemberObservable.next(val)\n  }\n\n  emitTotaRegisteredToday(val){\n    this.totalRegisteredTodayObservable.next(val)\n  }\n\n  emitConnectingMembers(val){\n    this.connectingMembersObservable.next(val)\n  }\n\n  emitWithrawToday(val:WithdrawDailyModel[]){\n    this.withdrawToday.next(val)\n  }\n\n  emitDepositToday(val:DepositDailyModel[]){\n    this.depositToday.next(val)\n  }\n\n\n  getTotalRegisteredUser(){\n\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/Dashboard/TotalRegisteredUser', this.userAuthSrvc.httpOption)\n    .pipe(\n      map(res => res.arrayBuffer().byteLength > 0 ? res.json() : {}\n      )\n    )\n  }\n\n  getTotalRegisteredUserToday(){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/Dashboard/TotalRegisteredUsersToday', this.userAuthSrvc.httpOption)\n    .pipe(\n      map(res => res.arrayBuffer().byteLength > 0 ? res.json() : {}\n      )\n    )\n  }\n\n  getDepositWithdrawToday(){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/Dashboard/TotalTransactionRecent/', this.userAuthSrvc.httpOption)\n    .pipe(\n      map(res => res.arrayBuffer().byteLength > 0 ? res.json() : {}\n      )\n    )\n  }\n\n  getConnectingMembers(){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/Dashboard/OnlineStatuses/', this.userAuthSrvc.httpOption)\n    .pipe(\n      map(res => res.arrayBuffer().byteLength > 0 ? res.json() : {}\n      )\n    )\n  }\n\n  //charts\n    getBettingRankingDaily(){\n      return this.http.get(this.userAuthSrvc.server + '/Api/v1/Dashboard/HeadOffice/Betting/Daily', this.userAuthSrvc.httpOption)\n      .pipe(\n        map(res => res.arrayBuffer().byteLength > 0 ? res.json() : {} \n        )\n      )\n    }\n\n    getBettingRankingWeekly(){\n      return this.http.get(this.userAuthSrvc.server + '/Api/v1/Dashboard/HeadOffice/Betting/Weekly', this.userAuthSrvc.httpOption)\n      .pipe(\n        map(res => res.arrayBuffer().byteLength > 0 ? res.json() : {} \n        )\n      )\n    }\n\n    getBettingRankingMonthly(){\n      return this.http.get(this.userAuthSrvc.server + '/Api/v1/Dashboard/HeadOffice/Betting/Monthly', this.userAuthSrvc.httpOption)\n      .pipe(\n        map(res => res.arrayBuffer().byteLength > 0 ? res.json() : {} \n        )\n      )\n    }\n\n    getDepositRankingDaily(){\n      return this.http.get(this.userAuthSrvc.server + '/Api/v1/Dashboard/HeadOffice/Deposit/Daily/', this.userAuthSrvc.httpOption)\n      .pipe(\n        map(res => \n          {\n            return res.arrayBuffer().byteLength > 0 ? res.json() : {}\n          }\n        )\n      )\n    }\n\n    getWithdrawRankingDaily(){\n      return this.http.get(this.userAuthSrvc.server + '/Api/v1/Dashboard/HeadOffice/Withdraw/Daily/', this.userAuthSrvc.httpOption)\n      .pipe(\n        map( res => res.arrayBuffer().byteLength > 0 ? res.json() : {}\n        )\n      )\n    }\n  //charts end\n\n  \n}\n","import { Injectable } from '@angular/core';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\n\nconst EXCEL_TYPE = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\nconst EXCEL_EXTENSION = '.xlsx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExcelService {\n\n  constructor() { }\n\n  exportAsExcelFile(json: any[], excelFileName: string): void {\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\n    const workbook: XLSX.WorkBook = { Sheets: { 'data': worksheet }, SheetNames: ['data'] };\n    const excelBuffer: any = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n    this.saveAsExcelFile(excelBuffer, excelFileName);\n  }\n\n  private saveAsExcelFile(buffer: any, fileName: string): void {\n     const data: Blob = new Blob([buffer], {type: EXCEL_TYPE});\n     FileSaver.saveAs(data, fileName + '_export_' + new  Date().getTime() + EXCEL_EXTENSION);\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { map } from \"rxjs/operators\";\nimport { UserAuthService } from '../../../services/UserAuth/user-auth.service'\n@Injectable({\n  providedIn: 'root'\n})\nexport class GameLogService {\n\n  constructor(private http:Http, private userAuthSrvc:UserAuthService) { }\n\n  getHandHistory(seasonID:string){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/HandHistory/SeasonID/'+seasonID, this.userAuthSrvc.httpOption)\n      .pipe(\n        map(res => { return res.json();})\n      )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { map } from \"rxjs/operators\";\nimport { UserAuthService } from '../../services/UserAuth/user-auth.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MoneytransactionsService {\n\n  constructor(private http:Http, private userAuthSrvc:UserAuthService) { }\n\n  // deposit\n  approveDeposit(UserTransactionID:string, UserAccountID:string){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/DepositHistory/Approved/UserTransactionID/'+UserTransactionID+'/UserAccountID/'+UserAccountID)\n    .pipe(\n      map( res => res.json() )\n    )\n  }\n\n  archivedDeposit(UserTransactionID:string){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/DepositHistory/Archived/UserTransactionID/' + UserTransactionID)\n    .pipe(\n      map( res => res.json() )\n    )      \n  }\n\n  searchDeposit(startDatetime:string, endDatetime:string, value:string){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/DepositList/Search/Column/ScreenName/Value/'+value+'/StartDate/'+startDatetime+'/EndDate/'+endDatetime, this.userAuthSrvc.httpOption)\n    .pipe(\n      map( res => res.json() )\n    )\n  }\n\n  // withdraw\n  approveWithdraw(UserTransactionID:string, UserAccountID:string){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/WithdrawHistory/Update/Status/Approved/WithdrawHistoryID/'+UserTransactionID+'/UserAccountID/'+UserAccountID)\n    .pipe(\n    )\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { UserAuthService } from '../../UserAuth/user-auth.service'\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(private http:Http, private userAuthSrvc:UserAuthService) { }\n\n  notifyAllRooms(title:string){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/Notification/Update/NotificationType/Header/Location/AllRooms/Title/'+title)\n    .pipe()\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { map } from \"rxjs/operators\";\nimport { environment } from '../../../../environments/environment.prod';\nimport { UserAuthService } from '../../UserAuth/user-auth.service'\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupportService {\n\n  constructor(private http:Http, private userAuthSrvc:UserAuthService) { }\n\n  getWriteNotice(userID:string, supportID:string){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/OneOnOne/UserAccountID/'+userID+'/SupportTicketID/'+supportID)\n    .pipe(\n      map(res => res.json())\n      )\n  }\n\n  answerSupport(SupportTicketID:string,UserAccountID:string, Answer:string ){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/OneOnOne/SupportTicketID/'+SupportTicketID+'/UserAccountID/'+UserAccountID+'/Answer/'+Answer, this.userAuthSrvc.httpOption)\n    .pipe(\n      map(res => res.json())\n      )\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { map } from \"rxjs/operators\";\nimport {UserAuthService} from '../UserAuth/user-auth.service'\n@Injectable({\n  providedIn: 'root'\n})\nexport class OfficeListService {\n\n  constructor(private http:Http, private userAuthSrvc:UserAuthService) { }\n\n    //http request variables\n    page:string[] = [\n      'Shop', //0\n      'Distributor', //1\n      'HeadOffice' //2\n    ]\n\n  getList(pageIndex:number, offset:number, limit:number, ParentID:string ){\n\n      return this.http.get(this.userAuthSrvc.server + '/Api/v1/Sales/'+this.page[pageIndex]+'List'+'/ParentID/'+ParentID+'/Limit/'+limit+'/Offset/'+offset)\n      // return this.http.get(this.userAuthSrvc.server + '/Api/v1/'+this.page[pageIndex]+'/ParentID/'+ParentID+'/Limit/'+environment.resultLimit+'/Offset/'+offset+'/', this.userAuthSrvc.httpOption)\n      .pipe(\n        map( res => res.arrayBuffer().byteLength > 0 ? res.json() : {} )\n      )\n  }\n\n  getPageCount(pageIndex:number){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/Sales/Pagination/Page/'+pageIndex, this.userAuthSrvc.httpOption)\n    .pipe(\n      map(res => res.arrayBuffer().byteLength > 0 ? res.json() : {} )\n    )\n  }\n\n  // check to all of user accounts\n  checkIfHeadOfficeExist(username){\n    try{\n      return this.http.get(this.userAuthSrvc.server + '/Api/v1/UserNameCheck/'+username)\n      .pipe(\n        map( res => res.json() )\n      )\n    }catch(error){\n      console.log('http' + error)\n    }\n  }\n  \n  addOffice(addHeadOfficeVariables, pageIndex:number){\n      return this.http.post(this.userAuthSrvc.server + '/Api/v1/'+this.page[pageIndex]+'/Add/',addHeadOfficeVariables);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsService {\n  isDarkTheme = new Subject<boolean>()\n  mastervolume = new Subject<number>()\n  //notification sfx\n    notificationAudio = new Audio()\n    volume:number = 1\n  constructor() {\n    this.mastervolume.subscribe(\n      (res) => {this.volume = res / 100;},\n      err => console.log(err)\n    )\n   }\n\n  notifAudio(){\n\n    this.notificationAudio.src = '../../../assets/notification.mp3'\n    this.notificationAudio.load();\n    this.notificationAudio.volume = this.volume;\n    this.notificationAudio.play();\n  }\n\n  toggleMute(toggle:boolean){\n\n    if (toggle) {\n      this.notificationAudio.volume = 1;\n    } else {\n      this.notificationAudio.volume = 0;\n    }\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { UserModel } from '../interfaces/UserModel';\nimport { environment } from 'src/environments/environment.prod';\nimport { Http, Headers } from '@angular/http';\nimport { map } from \"rxjs/operators\";\nimport * as Rx from 'rxjs/Rx';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserCredentialsService {\n  \n  protected key:boolean[] = [\n    false,//distributor\n    false,//headoffice\n    false//operating\n  ]\n\n  user = new Rx.Subject<UserModel>();\n\n  constructor(private http:Http) {  }\n\n  emitUserCredentials(newValue){\n    this.user.next(newValue);\n  }\n\n  getPrivileges(token:string){\n      return this.http.get(environment.apiUrl + '/Api/v1/Admin/Login/Token',{\n        headers: new Headers({\n          'Content-Type':  'application/json',\n          'Authorization': `Bearer ${token}`\n        })\n      })\n      .pipe(\n        map( res => res.json() )\n      )\n  }\n\n  defineKeys(level:number){\n    \n     console.log('assigned level + ' + level)\n     for(let i = 0; i < level; i++){\n      this.key[i] = true\n      console.log('i : ' + i)\n     }\n    //  console.log(this.key)\n\n     return this.key;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { map } from \"rxjs/operators\";\nimport { UserAuthService } from '../../../services/UserAuth/user-auth.service'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BlackListService {\n\n  constructor(private http:Http,\n              private userAuthService:UserAuthService) { }\n\n  //check\n  userInquire(UserName:string, ScreenName:string){\n    return this.http.get(this.userAuthService.server + '/Api/v1/BlackList/Check/Blocked/UserName/'+UserName+'/ScreenName/'+ScreenName, this.userAuthService.httpOption)\n      .pipe(\n        map( res => res.arrayBuffer().byteLength > 0 ? res.json() : {} )\n      )\n  }\n\n  userInquire2(Column:string, Value:string){\n    return this.http.get(this.userAuthService.server + '/Api/v1/BlackList/Check/Blocked/1/Column/'+Column+'/Value/'+Value, this.userAuthService.httpOption)\n      .pipe(\n        map( res => res.arrayBuffer().byteLength > 0 ? res.json() : {} )\n      )\n  }\n\n  //blacklist user\n  blacklistUser(UserName:string, Reason:string){\n    return this.http.get(this.userAuthService.server + '/Api/v1/BlackList/Add/UserName/'+UserName+'/Reason/'+Reason)\n      .pipe(\n        map( res => res.arrayBuffer().byteLength > 0 ? res.json() : {} )\n      )\n  }\n\n  //blacklist user\n  releaseUser(UserName:string){\n    return this.http.get(this.userAuthService.server + '/Api/v1/BlackList/Release/UserName/'+UserName, this.userAuthService.httpOption)\n      .pipe(\n        map( res => res.arrayBuffer().byteLength > 0 ? res.json() : {} )\n      )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { map } from \"rxjs/operators\";\nimport { UserAuthService } from '../../UserAuth/user-auth.service'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConnectingUserService {\n\n  constructor(private http:Http, private userAuthSrvc:UserAuthService) { }\n\n  getConnectingUsers(){\n    return this.http.get(this.userAuthSrvc.server + '/Api/v1/ConnectingUsers', this.userAuthSrvc.httpOption)\n      .pipe(\n        map( res => res.arrayBuffer().byteLength > 0 ? res.json() : {} )\n      )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { OptionModel } from '../../interfaces/OptionModel'\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormsService {\n  constructor() { }\n\n  timeOptions:OptionModel[]= [\n    { value : ' 00:00:00', name : '12:00 AM'},\n    { value : ' 01:00:00', name : '01:00 AM'},\n    { value : ' 02:00:00', name : '02:00 AM'},\n    { value : ' 03:00:00', name : '03:00 AM'},\n    { value : ' 04:00:00', name : '04:00 AM'},\n    { value : ' 05:00:00', name : '05:00 AM'},\n    { value : ' 06:00:00', name : '06:00 AM'},\n    { value : ' 07:00:00', name : '07:00 AM'},\n    { value : ' 08:00:00', name : '08:00 AM'},\n    { value : ' 09:00:00', name : '09:00 AM'},\n    { value : ' 10:00:00', name : '10:00 AM'},\n    { value : ' 11:00:00', name : '11:00 AM'},\n    { value : ' 12:00:00', name : '12:00 AM'},\n    { value : ' 13:00:00', name : '01:00 PM'},\n    { value : ' 14:00:00', name : '02:00 PM'},\n    { value : ' 15:00:00', name : '03:00 PM'},\n    { value : ' 16:00:00', name : '04:00 PM'},\n    { value : ' 17:00:00', name : '05:00 PM'},\n    { value : ' 18:00:00', name : '06:00 PM'},\n    { value : ' 19:00:00', name : '07:00 PM'},\n    { value : ' 20:00:00', name : '08:00 PM'},\n    { value : ' 21:00:00', name : '09:00 PM'},\n    { value : ' 22:00:00', name : '10:00 PM'},\n    { value : ' 23:00:00', name : '11:00 PM'},\n    { value : ' 23:59:59', name : '11:59 PM'}\n  ]\n\n  playerOnlySearchOptions:OptionModel[] =\n  [\n    {value: 'UserName', name: 'ID'},\n    {value: 'ScreenName', name: 'Screen Name'}\n  ]\n\n}\n","import { Component,Inject } from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\nimport {SupportService} from '../../services/notice/support/support.service'\r\nimport { WriteNoticeModel } from '../../interfaces/WriteNoticeModel'\r\n@Component({\r\n    templateUrl: 'answer-support-dialog.html',\r\n    styleUrls : ['answer-support.css']\r\n  })\r\n\r\nexport class AnswerSupportDialog {\r\n  protected answer:string\r\n  constructor(private supportSrvc:SupportService,\r\n              public dialogRef: MatDialogRef<AnswerSupportDialog>,\r\n              @Inject(MAT_DIALOG_DATA) public data: WriteNoticeModel) {\r\n    this.answer = data.Answer\r\n  }\r\n\r\n  answerSupport(){\r\n    this.supportSrvc.answerSupport(this.data.SupportTicketID, this.data.UserAccountID, this.answer)\r\n    .subscribe(\r\n      (result) => {\r\n       alert('answered successful')\r\n        // console.log(result)\r\n       },\r\n     error => {\r\n         console.log(error)\r\n       }\r\n     )\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n\r\n  cancel(){\r\n    this.dialogRef.close();\r\n\r\n    this.dialogRef.afterClosed().subscribe(\r\n      ()=>{\r\n        console.log('cancelled')\r\n      }\r\n    )\r\n  }\r\n\r\n}","module.exports = \"<h1 mat-dialog-title>write&nbsp;1:1&nbsp;support</h1>\\r\\n<mat-divider></mat-divider>\\r\\n\\r\\n<div mat-dialog-content>\\r\\n    <mat-chip-list style=\\\"margin:10px;\\\">\\r\\n        <mat-chip disableRipple=\\\"true\\\" selectable=\\\"false\\\"><mat-icon>person</mat-icon>Screen Name&nbsp;:&nbsp;<strong>{{data.ScreenName}}</strong></mat-chip>\\r\\n        <mat-chip disableRipple=\\\"true\\\" selectable=\\\"false\\\"><mat-icon>title</mat-icon>Title&nbsp;:&nbsp;<strong>{{data.Title}}</strong></mat-chip>\\r\\n        <mat-chip disableRipple=\\\"true\\\" selectable=\\\"false\\\"><mat-icon>calendar_today</mat-icon>DateTime&nbsp;:&nbsp;<strong>{{data.DateTime | date : 'medium'}}</strong></mat-chip>\\r\\n    </mat-chip-list>\\r\\n    \\r\\n    <mat-card>\\r\\n        <mat-card-subtitle>Contents:</mat-card-subtitle>\\r\\n        <mat-card-content>{{data.Reason}}</mat-card-content>\\r\\n    </mat-card>\\r\\n    <br>\\r\\n\\r\\n    <mat-form-field appearance=\\\"fill\\\">\\r\\n        <mat-label>answer</mat-label>\\r\\n        <textarea matInput maxRows=\\\"5\\\" [(ngModel)]=\\\"answer\\\" [value]=\\\"answer\\\"></textarea>\\r\\n    </mat-form-field>\\r\\n    \\r\\n    <p>\\r\\n        <strong>answer date:</strong><mat-label>&nbsp;{{data.AnswerDateTime | date : 'medium'}}</mat-label>\\r\\n    </p>\\r\\n    \\r\\n</div>\\r\\n\\r\\n<div mat-dialog-actions style=\\\"display: flex; justify-content:flex-end\\\">\\r\\n    <button mat-flat-button\\r\\n            color=\\\"primary\\\"\\r\\n            style=\\\"margin-right: 5px;\\\"\\r\\n            (click)=\\\"answerSupport()\\\"><mat-icon>send</mat-icon></button>\\r\\n    <button mat-flat-button\\r\\n            color=\\\"accent\\\"\\r\\n            (click)=\\\"cancel()\\\">cancel</button>\\r\\n</div>\"","module.exports = \"mat-form-field,mat-chip{\\r\\n    width: 100%\\r\\n}\"","import { Component,Inject } from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\nimport { BlackListService } from '../../services/user/blackList/black-list.service'\r\nimport { OptionModel } from '../../interfaces/OptionModel'\r\n\r\ninterface inquireModel{\r\n  ScreenName: string,\r\n  UserAccountID: string,\r\n  UserName: string,\r\n  newStatus: string\r\n}\r\n\r\n@Component({\r\n    templateUrl: 'black-list-dialog.html',\r\n  })\r\n\r\nexport class BlackListDialog {\r\n\r\n  // inquire variables\r\n    playeropts:OptionModel[] =[\r\n      {value:'0',name:'ID'},\r\n      {value:'1',name:'Screen Name'}\r\n    ]\r\n    optionValue:string = '1'\r\n    searchValue:string = 'player31'\r\n    \r\n    playerDoesNotExist:boolean = false\r\n\r\n  // user info & reason variables\r\n    inquireResult:inquireModel[]\r\n    reason:string = ''\r\n\r\n  //block player variables\r\n    isAlreadyBlocked:boolean = false\r\n  //dialog variables\r\n    blacklistmode:boolean[] = [false,false,false]\r\n    isLoading:boolean = false\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<BlackListDialog>,\r\n    private blacklist:BlackListService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n      this.blacklistmode = this.data.blacklistmode\r\n\r\n      if(this.blacklistmode){\r\n        if(this.blacklistmode[1]){\r\n          this.optionValue = '0'\r\n          this.searchValue = this.data.value\r\n          this.userInquire()\r\n        }else{\r\n          console.log('blacklistmode is empty')\r\n        }\r\n      }else{\r\n        console.log('blacklistmode is empty')\r\n      }\r\n\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  blacklistUser(){\r\n    if(this.inquireResult[0].UserName,this.reason){\r\n      this.blacklist.blacklistUser(this.inquireResult[0].UserName,this.reason)\r\n      .subscribe(\r\n        result => {\r\n          if(result){\r\n            this.blacklistmode = [false,false,true]\r\n            this.inquireResult[0].newStatus = 'Blocked'\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error['status'])\r\n          if(error['status'] == '404'){\r\n            this.isAlreadyBlocked = true\r\n            alert('not registered user or already in black list ')\r\n          }\r\n        }\r\n      )\r\n    }else{\r\n      console.log('invalid credentials')\r\n    }\r\n  }\r\n\r\n  userInquire(){\r\n    this.isLoading = true\r\n    this.blacklist.userInquire2(this.optionValue,this.searchValue)\r\n    .subscribe(\r\n      (result : any)=> {\r\n        this.isLoading = false\r\n        if(result != undefined && result != false ){\r\n          this.inquireResult = result\r\n          this.blacklistmode = [false,true,false]\r\n        }else{\r\n          this.playerDoesNotExist = true\r\n          console.log(result)\r\n        }\r\n\r\n      },\r\n      error => {\r\n        console.log(error['status'])\r\n        console.log(error)\r\n        alert('something went wrong')\r\n      }\r\n    )\r\n  }\r\n\r\n  releaseUser(){\r\n\r\n    this.blacklist.releaseUser(this.inquireResult[0].UserName)\r\n    .subscribe(\r\n      result => {\r\n        console.log(result)\r\n        if(result){\r\n          this.blacklistmode = [false,false,true]\r\n          this.inquireResult[0].newStatus = 'Released'\r\n        }\r\n      },\r\n      error => {\r\n        if(error['status'] == '404'){\r\n          alert('something went wrong')\r\n        }\r\n      }\r\n    )\r\n          \r\n  }\r\n\r\n  back(){\r\n    this.searchValue = ''\r\n    this.inquireResult = null\r\n    this.reason = ''\r\n    this.blacklistmode = [true,false,false]\r\n  }\r\n\r\n  cancel(){\r\n    this.dialogRef.close();\r\n\r\n    this.dialogRef.afterClosed().subscribe(\r\n      ()=>{\r\n        this.searchValue = ''\r\n        this.inquireResult = null\r\n        this.reason = ''\r\n        this.blacklistmode = [false,false,false]\r\n        this.isLoading = false\r\n      }\r\n    )\r\n  }\r\n  test(){\r\n    console.log(this.reason)\r\n  }\r\n}","module.exports = \"\\r\\n<h1 mat-dialog-title>\\r\\n    blacklist&nbsp;player&nbsp;\\r\\n    <span *ngIf=\\\"blacklistmode[0]\\\">-&nbsp;inquire</span>\\r\\n    <span *ngIf=\\\"blacklistmode[1]\\\">-&nbsp;register</span>\\r\\n</h1>\\r\\n<mat-divider></mat-divider>\\r\\n<div mat-dialog-content>\\r\\n    <div *ngIf=\\\"isLoading\\\" style=\\\"display: flex; justify-content:center\\\">\\r\\n        <mat-spinner color=\\\"accent\\\"></mat-spinner>\\r\\n    </div>\\r\\n    <!-- user inquire -->\\r\\n    <div *ngIf=\\\"blacklistmode[0] && !isLoading\\\">\\r\\n    \\r\\n        <mat-grid-list cols=\\\"9\\\" rowHeight=\\\"70px\\\">\\r\\n            <!-- select -->\\r\\n            <mat-grid-tile colspan=\\\"3\\\" rowspan=\\\"1\\\">\\r\\n                <mat-form-field style=\\\"width:100%; margin:5px;\\\">\\r\\n                    <mat-select [(value)]=\\\"optionValue\\\">\\r\\n                        <mat-option *ngFor=\\\"let p of playeropts\\\" [value]=\\\"p.value\\\">{{p.name}}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </mat-grid-tile>\\r\\n            <!-- text -->\\r\\n            <mat-grid-tile colspan=\\\"4\\\" rowspan=\\\"1\\\">\\r\\n                <mat-form-field style=\\\"width:100%; margin:5px;\\\">\\r\\n                    <input matInput [(ngModel)]=\\\"searchValue\\\">\\r\\n                </mat-form-field>\\r\\n            </mat-grid-tile>\\r\\n            <!-- button -->\\r\\n            <mat-grid-tile colspan=\\\"2\\\" rowspan=\\\"1\\\">\\r\\n                <button mat-mini-fab\\r\\n                        color=\\\"primary\\\" \\r\\n                        style=\\\"margin:5px;\\\"\\r\\n                        (click)=\\\"userInquire()\\\"><mat-icon>search</mat-icon></button>\\r\\n            </mat-grid-tile>\\r\\n        </mat-grid-list>\\r\\n        \\r\\n        <h3 *ngIf=\\\"playerDoesNotExist\\\" style=\\\"color:red; text-align: center;\\\">player does not exist or already blocked</h3>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <!-- user info and reason -->\\r\\n    <div *ngIf=\\\"blacklistmode[1] && !isLoading\\\">\\r\\n        <mat-chip-list style=\\\"margin:10px;\\\">\\r\\n            <mat-chip disableRipple=\\\"true\\\"><mat-icon>credit_card</mat-icon>ID : <strong>{{inquireResult[0]?.UserName}}</strong></mat-chip>\\r\\n            <mat-chip disableRipple=\\\"true\\\"><mat-icon>person</mat-icon>ID : <strong>{{inquireResult[0]?.ScreenName}}</strong></mat-chip>\\r\\n            <mat-chip disableRipple=\\\"true\\\"><mat-icon>info</mat-icon>Status : <strong>{{inquireResult[0]?.newStatus}}</strong></mat-chip>\\r\\n        </mat-chip-list>\\r\\n        <h3 *ngIf=\\\"isAlreadyBlocked\\\" style=\\\"color:red; text-align: center;\\\">already in black list</h3>\\r\\n        <div *ngIf=\\\"inquireResult[0]?.newStatus != 'Blocked'\\\">\\r\\n            <mat-form-field style=\\\"width:100%;\\\" >\\r\\n                <textarea   matInput\\r\\n                            maxRows=\\\"4\\\"\\r\\n                            enabled=\\\"false\\\" \\r\\n                            placeholder=\\\"reason\\\"\\r\\n                            style=\\\"height:50px\\\"\\r\\n                            [(ngModel)]=\\\"reason\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n            <button mat-raised-button\\r\\n                    color=\\\"warn\\\"\\r\\n                    style=\\\"width:100%\\\"\\r\\n                    (click)=\\\"blacklistUser()\\\">blacklist player <mat-icon>lock</mat-icon></button>\\r\\n        </div>\\r\\n        <button *ngIf=\\\"inquireResult[0]?.newStatus == 'Blocked'\\\"\\r\\n                mat-raised-button\\r\\n                color=\\\"primary\\\"\\r\\n                style=\\\"width:100%\\\"\\r\\n                (click)=\\\"releaseUser()\\\">release player <mat-icon>lock_open</mat-icon></button>\\r\\n    </div>\\r\\n\\r\\n    <!-- response message -->\\r\\n    <div *ngIf=\\\"blacklistmode[2] && !isLoading\\\">\\r\\n        <mat-chip-list style=\\\"margin:10px;\\\">\\r\\n            <mat-chip disableRipple=\\\"true\\\"><mat-icon>credit_card</mat-icon>ID : <strong>{{inquireResult[0]?.UserName}}</strong></mat-chip>\\r\\n            <mat-chip disableRipple=\\\"true\\\"><mat-icon>person</mat-icon>ID : <strong>{{inquireResult[0]?.ScreenName}}</strong></mat-chip>\\r\\n            <mat-chip disableRipple=\\\"true\\\"><mat-icon>info</mat-icon>Status : <strong>{{inquireResult[0]?.newStatus}}</strong></mat-chip>\\r\\n        </mat-chip-list>\\r\\n\\r\\n        <mat-divider></mat-divider>\\r\\n        <p style=\\\"text-align: center\\\" >\\r\\n            <mat-icon>done</mat-icon>\\r\\n            <br>\\r\\n            <strong style=\\\"font-size: 30px; color:red;\\\">SUCCESSFUL</strong>\\r\\n        </p>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div mat-dialog-actions style=\\\"display: flex; justify-content:flex-end\\\">\\r\\n    <button mat-flat-button\\r\\n            *ngIf=\\\"blacklistmode[1] && !isLoading\\\"\\r\\n            color=\\\"accent\\\"\\r\\n            style=\\\"margin-right: 5px;\\\"\\r\\n            (click)=\\\"back()\\\">back</button>\\r\\n    <button mat-flat-button\\r\\n            color=\\\"accent\\\"\\r\\n            (click)=\\\"cancel()\\\">\\r\\n            <span *ngIf=\\\"blacklistmode[2]\\\">ok</span>\\r\\n            <span *ngIf=\\\"!blacklistmode[2]\\\">cancel</span></button>\\r\\n</div>\\r\\n\"","import { Component,Inject } from '@angular/core';\r\nimport {MAT_BOTTOM_SHEET_DATA} from '@angular/material';\r\n\r\n@Component({\r\n    templateUrl: 'no-result-bottom-sheet2.html'\r\n  })\r\n\r\n  export class NoResultBottomSheet2 {\r\n    constructor(@Inject(MAT_BOTTOM_SHEET_DATA) public data: any) {}\r\n  }","module.exports = \"<p style=\\\"text-align: center;\\\">\\r\\n    <mat-icon color=\\\"warn\\\">warning</mat-icon>\\r\\n    <br>\\r\\n    <br>\\r\\n    <strong style=\\\"font-size: 50px; color:crimson\\\">no results found</strong>\\r\\n</p>\\r\\n<mat-list>\\r\\n    <mat-list-item *ngFor=\\\"let d of data\\\">\\r\\n        <mat-icon matListIcon>{{d.icon}}</mat-icon>\\r\\n        <h3 matLine><strong>{{d.column}} : </strong>{{d.value}}</h3>\\r\\n        <h3 *ngIf=\\\"!d.value\\\" matLine><mat-error>empty</mat-error></h3></mat-list-item>\\r\\n</mat-list>\\r\\n\"","import { Component,Inject } from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\n// services\r\nimport { CommonService } from '../../services/common/common.service'\r\nimport { UserCredentialsService } from '../../services/user-credentials.service'\r\nimport { SettingsService } from '../../services/settings/settings.service'\r\n@Component({\r\n    templateUrl: 'settings-dialog.html',\r\n    styleUrls : ['settings-dialog.css']\r\n  })\r\n\r\nexport class SettingsDialog {\r\n    nightMode:boolean = false\r\n    volume:number = 100\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SettingsDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    // services\r\n    private commonSrvc:CommonService,\r\n    private userCredentialsSrvc:UserCredentialsService,\r\n    private settingsSrvc:SettingsService) {\r\n        this.settingsSrvc.isDarkTheme.next(this.nightMode)\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  logout(): void{\r\n      this.close()\r\n      this.userCredentialsSrvc.emitUserCredentials(null)\r\n      this.commonSrvc.logout()\r\n  }\r\n\r\n  themeChanged():void{\r\n    this.settingsSrvc.isDarkTheme.next(this.nightMode)\r\n  }\r\n\r\n  volumeChanged():void{\r\n    this.settingsSrvc.mastervolume.next(this.volume)\r\n    this.settingsSrvc.notifAudio()\r\n  }\r\n\r\n}","module.exports = \".background{\\r\\n    background-color: rgba(255, 255, 255, 0);\\r\\n}\\r\\n\\r\\n.toggle{\\r\\n    font-size: 15px;\\r\\n}\\r\\n\\r\\n.grid-tile{\\r\\n    position: absolute;\\r\\n    left:10px;\\r\\n}\"","module.exports = \"<mat-grid-list cols=\\\"2\\\" rowHeight=\\\"40px\\\">\\r\\n    <!-- nightmode toggle -->\\r\\n    <mat-grid-tile colspan=\\\"2\\\" rowspan=\\\"1\\\">\\r\\n        <mat-slide-toggle   class=\\\"grid-tile\\\" \\r\\n                            color=\\\"accent\\\"\\r\\n                            [(ngModel)]=\\\"nightMode\\\" \\r\\n                            [checked]=\\\"nightMode\\\"\\r\\n                            (change)=\\\"themeChanged()\\\"><span class=\\\"toggle\\\">Dark theme</span></mat-slide-toggle>\\r\\n    </mat-grid-tile>\\r\\n\\r\\n    <!-- bet sound toggle -->\\r\\n    <mat-grid-tile colspan=\\\"2\\\" rowspan=\\\"1\\\">\\r\\n        <mat-slide-toggle class=\\\"grid-tile\\\" color=\\\"accent\\\"><span class=\\\"toggle\\\">Bet sound</span></mat-slide-toggle>\\r\\n    </mat-grid-tile>\\r\\n\\r\\n    <!-- deposit sound toggle -->\\r\\n    <mat-grid-tile colspan=\\\"2\\\" rowspan=\\\"1\\\">\\r\\n        <mat-slide-toggle class=\\\"grid-tile\\\" color=\\\"accent\\\"><span class=\\\"toggle\\\">Deposit sound</span></mat-slide-toggle>\\r\\n    </mat-grid-tile>\\r\\n\\r\\n    <!-- volume slider -->\\r\\n    <mat-grid-tile colspan=\\\"2\\\" rowspan=\\\"1\\\">\\r\\n        <mat-slider matTooltip=\\\"volume\\\" \\r\\n                    matTooltipPosition=\\\"left\\\" \\r\\n                    style=\\\"width:100%\\\"\\r\\n                    step=\\\"1\\\" \\r\\n                    [value]=\\\"volume\\\"\\r\\n                    [(ngModel)]=\\\"volume\\\"\\r\\n                    (change)=\\\"volumeChanged()\\\" \\r\\n                    color=\\\"primary\\\">volume</mat-slider>\\r\\n    </mat-grid-tile>\\r\\n\\r\\n   <!-- logout button  -->\\r\\n    <mat-grid-tile colspan=\\\"2\\\" rowspan=\\\"1\\\">\\r\\n        <button mat-button \\r\\n                style=\\\"width:100%; text-align: left\\\"\\r\\n                (click)=\\\"logout()\\\" ><mat-icon>exit_to_app</mat-icon>&nbsp;Sign out</button>\\r\\n    </mat-grid-tile>        \\r\\n</mat-grid-list>\"","export const environment = {\r\n  production: false,\r\n  apiUrl : 'https://tester-holdem-server.4b63.pro-ap-southeast-2.openshiftapps.com',\r\n  // apiUrl : 'http://192.168.254.101:8080',\r\n  resultLimit : 20,\r\n  updateTime: 3000,\r\n  updateTimeDashboard: 3000,\r\n  consoleToggle: true,\r\n  httpRequestTimeout: 20,\r\n  ifSearchVariableEmpty : '(((',\r\n  tokenStorageKey: '1sh422133123kms123j122336668354b88548',\r\n  enableLogin: true,\r\n  koreanStartUp: false,\r\n  pageSizeOptions: [25, 50, 100]\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}